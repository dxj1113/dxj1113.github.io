<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eason Du&#39;s Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://dxj1113.github.io/"/>
  <updated>2018-01-09T10:32:57.815Z</updated>
  <id>https://dxj1113.github.io/</id>
  
  <author>
    <name>Eason Du</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>凸优化简论</title>
    <link href="https://dxj1113.github.io/2017/07/17/%E5%87%B8%E4%BC%98%E5%8C%96/"/>
    <id>https://dxj1113.github.io/2017/07/17/凸优化/</id>
    <published>2017-07-17T06:10:26.000Z</published>
    <updated>2018-01-09T10:32:57.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>最近在学习机器学习方面的算法知识，发现凸优化是机器学习中重要的数学基础，特地买了本书做学习，这里记录下一些学习心得，先搭个框架，内容会逐步展开，后续会陆续更新。</p><p>主要参考资料<a href="https://www.amazon.com/Convex-Optimization-Stephen-Boyd/dp/0521833787/ref=sr_1_1?ie=UTF8&amp;qid=1500272157&amp;sr=8-1&amp;keywords=Stephen%20Boyd" target="_blank" rel="noopener">《凸优化》</a>(Stephen Boyd等著，王书宁等译)[1]这本书。<br>(各种公式用mathjax语法写的，写的崩溃了…..)<br> <a id="more"></a></p><h2 id="什么是凸优化"><a href="#什么是凸优化" class="headerlink" title="什么是凸优化"></a>什么是凸优化</h2><p>不严格的说，凸优化就是在标准优化问题的范畴内，要求目标函数和约束函数是凸函数的一类优化问题。<br><a href="https://zh.wikipedia.org/wiki/%E5%87%B8%E5%84%AA%E5%8C%96" target="_blank" rel="noopener">维基百科的定义</a>：<br><strong>凸优化</strong>，或叫做凸最优化，凸最小化，是数学最优化的一个子领域，研究定义于凸集中的凸函数最小化的问题。凸优化在某种意义上说较一般情形的数学最优化问题要简单，譬如在凸优化中局部最优值必定是全局最优值。凸函数的凸性使得凸分析中的有力工具在最优化问题中得以应用，如次导数等。<br>凸优化应用于很多学科领域，诸如自动控制系统，信号处理，通讯和网络，电子电路设计，数据分析和建模，统计学(最优化设计），以及金融。在近来运算能力提高和最优化理论发展的背景下，一般的凸优化已经接近简单的线性规划一样直捷易行。许多最优化问题都可以转化成凸优化（凸最小化）问题，例如求凹函数f最大值的问题就等同于求凸函数 -f最小值的问题。</p><h2 id="重要性"><a href="#重要性" class="headerlink" title="重要性"></a>重要性</h2><blockquote><p>“凸优化在数学规划领域具有非常重要的地位。”</p><p>“一旦将一个实际问题表述为凸优化问题，大体上意味着相应问题已经得到彻底解决，这是非凸的优化问题所不具有的性质。”</p><p>——《&lt;凸优化&gt;译者序》</p></blockquote><p>凸优化之所以如此重要，是因为：</p><ol><li><p>其应用非常广泛，机器学习中很多优化问题都要通过凸优化来求解；</p></li><li><p>在非凸优化中，凸优化同样起到重要的作用，很多非凸优化问题，可以转化为凸优化问题来解决；</p></li><li><p>如上引用所述，凸优化问题可以看作是具有成熟求解方法的问题，而其他优化问题则未必。</p></li></ol><h2 id="凸优化知识体系"><a href="#凸优化知识体系" class="headerlink" title="凸优化知识体系"></a>凸优化知识体系</h2><ul><li><p><strong>凸集</strong>，定义目标函数和约束函数的定义域。</p></li><li><p><strong>凸函数</strong>，定义优化相关函数的凸性限制。</p></li><li><p><strong>凸优化</strong>，中心内容的标准描述。</p></li><li><p><strong>凸优化问题求解</strong>，核心内容。相关算法，梯度下降法、牛顿法、内点法等。</p></li><li><p><strong>对偶问题</strong>，将一般优化问题转化为凸优化问题的有效手段，求解凸优化问题的有效方法。</p></li></ul><h2 id="标准优化问题"><a href="#标准优化问题" class="headerlink" title="标准优化问题"></a>标准优化问题</h2><script type="math/tex; mode=display">min\qquad f_0(x)</script><script type="math/tex; mode=display">s.t.\qquad f_i(x)\le0,\qquad i=1,\cdots m</script><script type="math/tex; mode=display">\qquad \qquad h_i(x)\le0,\qquad i=1,\cdots p</script><script type="math/tex; mode=display">(1)</script><p>表示在所有满足<script type="math/tex">f_i(x)\le0,\qquad i=1,\cdots m</script>及<script type="math/tex">h_i(x)=0,\qquad i=1,\cdots p</script>的$x$中找出使<script type="math/tex">f_0(x)</script>最小的x.<br>这里,<script type="math/tex">x \in \mathbf R^n</script>,函数<script type="math/tex">f_0:\mathbf R^n \to \mathbf R</script>称为目标函数。<br>不等式<script type="math/tex">f_i(x)\le0</script>称为不等式约束，相应的<script type="math/tex">f_i:\mathbf R^n\to \mathbf R,i=1,2,\cdots m</script>称为不等式约束函数，方程组<script type="math/tex">h_i(x)=0</script>称为等式约束，相应的<script type="math/tex">h_i:\mathbf R^n\to \mathbf R,i=1,2\cdots p</script>称为等式约束。<br>如果没有约束，即<script type="math/tex">m=p=0</script>,称问题1为无约束问题。<br>对目标和所有约束函数有定义的点的集合</p><script type="math/tex; mode=display">\mathcal{D}=\bigcap\limits_{i=0}\limits^{m} domf_i \frown \bigcap\limits_{j=1}\limits^{p} domh_j</script><p>称为优化问题1的定义域</p><h2 id="凸优化问题"><a href="#凸优化问题" class="headerlink" title="凸优化问题"></a>凸优化问题</h2><script type="math/tex; mode=display">min\qquad f_0(x)</script><script type="math/tex; mode=display">s.t.\qquad f_i(x)\le0,\qquad i=1,\cdots m</script><script type="math/tex; mode=display">a_1^T X=b_i,\qquad i=1,\cdots p</script><script type="math/tex; mode=display">(2)</script><p>上述优化问题中，<script type="math/tex">f_i(x),i=0,1,2\cdots m</script>是凸函数，此类问题被称为凸优化问题。<br>对比优化问题，也就是说，目标函数和不等式约束同为凸函数，等式约束是仿射函数的优化问题属于凸优化问题。</p><h1 id="凸集"><a href="#凸集" class="headerlink" title="凸集"></a>凸集</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><h3 id="直线上的点"><a href="#直线上的点" class="headerlink" title="直线上的点"></a>直线上的点</h3><p>$\forall x,y\in \mathbf R^n 且 x\neq y$,那么，</p><script type="math/tex; mode=display">Z=\theta X+(1-\theta)Y,\theta\in \mathbf R \qquad \qquad \qquad (1)</script><p>是一条穿越X和Y的直线</p><p>A,$\theta$=0时，Z=Y<br>B,$\theta$=1时，Z=X<br>C,$0\lt \theta \lt 1$时，Z是X和Y之间线段上的点<br>D,$\theta \lt 0或\theta\gt 1$时，线段上的点Z是X和Y线段之外的点</p><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><p>集合C中任意两点之间的线C中，则称集合C为凸集，也即满足$\forall x,y\in \mathbf C,0\lt \theta \lt 1有\theta x+(1-\theta)y\in \mathbf C$的集合称为凸集。</p><h2 id="典型的凸集"><a href="#典型的凸集" class="headerlink" title="典型的凸集"></a>典型的凸集</h2><ul><li><p>线段，射线，直线</p></li><li><p>超平面，半空间</p></li><li><p>仿射集</p></li><li><p>欧几里得球，范数球，椭球等</p></li><li><p>凸锥，范数锥等</p></li></ul><h2 id="其它相关知识"><a href="#其它相关知识" class="headerlink" title="其它相关知识"></a>其它相关知识</h2><h3 id="保凸运算"><a href="#保凸运算" class="headerlink" title="保凸运算"></a>保凸运算</h3><p>交集、仿射函数、线性分式函数及透视函数</p><h3 id="超平面分离定理"><a href="#超平面分离定理" class="headerlink" title="超平面分离定理"></a>超平面分离定理</h3><p>两个不相交的凸集，存在一个超平面将其分离。</p><h1 id="凸函数"><a href="#凸函数" class="headerlink" title="凸函数"></a>凸函数</h1><h2 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h2><p>函数$f:\mathbf R^n \to \mathbf R 定义域domf$是凸集，并且对于$\forall x,y\in domf和\forall \theta 0\lt \theta \lt 1有$</p><script type="math/tex; mode=display">f(\theta x+(1-\theta)y)\le \theta f(x)+(1-\theta)f(y) \qquad \qquad \qquad \qquad (1)</script><p>则称函数$f$是凸的</p><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><h3 id="一阶条件"><a href="#一阶条件" class="headerlink" title="一阶条件"></a>一阶条件</h3><p>可微函数$f$是凸函数的充分必要条件是<br>A,定义域$domf$是凸集。<br>B,对于$\forall x,y\in domf有f(y)\ge f(x)+\forall f(x)^T(y-x)$</p><h3 id="二阶条件"><a href="#二阶条件" class="headerlink" title="二阶条件"></a>二阶条件</h3><p>函数f的二阶偏导称为函数f的Hessian矩阵。<br>对于函数定义域domf内任意一点，其Hessian矩阵存在，则函数f是凸函数的重要条件是：其Hessian矩阵是半正定阵，也即，对于所有的$x\in domf有\forall^2f(x)\succ=0$<br>对于R上的函数，可以简化为$f(x)\ge 0$(f上面有两小撇，这个公式暂时没找到)</p><h3 id="下水平集"><a href="#下水平集" class="headerlink" title="下水平集"></a>下水平集</h3><p>函数f的下水平集$C_a={ x\in domf\mid f(x)\le a}$是其定义域的子集。凸函数的下水平集是凸集。</p><h3 id="上境图"><a href="#上境图" class="headerlink" title="上境图"></a>上境图</h3><p>函数$f:\mathbf R^n \to \mathbf R$的上境图$epi f=((x,t)\mid x \in domf,f(x)\le t))$,它是空间$\mathbf R+{n+1}$上的子集。一个函数是凸函数，当且仅当其上境图是凸集。</p><h2 id="典型凸函数"><a href="#典型凸函数" class="headerlink" title="典型凸函数"></a>典型凸函数</h2><ol><li><p>线性函数和仿射函数</p></li><li><p>指数函数</p></li><li><p>负熵</p></li><li><p>范数</p></li></ol><h2 id="保凸运算-1"><a href="#保凸运算-1" class="headerlink" title="保凸运算"></a>保凸运算</h2><p>非负加权求和、复合仿射映射、逐点最大和逐点上确界、复合等。</p><h2 id="Jensen不等式"><a href="#Jensen不等式" class="headerlink" title="Jensen不等式"></a>Jensen不等式</h2><p>Jensen当年提出的不等式相当简单，f是凸函数，则</p><script type="math/tex; mode=display">f(\frac{x+y}2) \le \frac{f(x)+f(y)}{2}</script><p>Jensen不等式，又叫詹森不等式，以丹麦数学家约翰·詹森(Johan Jensen)命名。</p><p>5.1、常规形式</p><p>5.2、概率形式</p><p>5.3、推广</p><p>Jensen不等式用途非常广泛。凸性和Jensen不等式可以构成不等式理论的基础，很多著名的不等式都可以通过Jensen不等式应用于合适的凸函数得到[1]。</p><p>例如，算数-几何平均不等式可以由负对数函数利用Jensen不等式得到。</p><h1 id="问题求解"><a href="#问题求解" class="headerlink" title="问题求解"></a>问题求解</h1><h2 id="凸优化的优势"><a href="#凸优化的优势" class="headerlink" title="凸优化的优势"></a>凸优化的优势</h2><p>凸优化之所以如此重要，是因为凸优化的重要特性：凸优化的任意局部最优解也是全局最优解。</p><h2 id="最优性准则"><a href="#最优性准则" class="headerlink" title="最优性准则"></a>最优性准则</h2><p>对于凸优化问题</p><script type="math/tex; mode=display">min\qquad f_0(x)</script><script type="math/tex; mode=display">s.t.\qquad f_i(x)\le0,\qquad i=1,\cdots m</script><script type="math/tex; mode=display">\qquad \qquad a_i^tx=b_i,\qquad i=1,\cdots p</script><script type="math/tex; mode=display">(1)</script><p>其中$f_i(x),i=0,\cdots m$是凸函数。<br>$x^*\in \mathbf X$是可微函数$f_0$的最优解，当且仅当</p><script type="math/tex; mode=display">\bigtriangledown f_0(x^*)^T(Y-X^*)\le 0,\forall y \in \mathbf X \qquad \qquad \qquad \qquad (2)</script><h3 id="无约束凸优化的最优性准则"><a href="#无约束凸优化的最优性准则" class="headerlink" title="无约束凸优化的最优性准则"></a>无约束凸优化的最优性准则</h3><p>无约束凸优化问题（式1中，m=p=0）,$x^* \in \mathbf X$是可微函数f的最优解的重要条件是众所周知的</p><script type="math/tex; mode=display">\bigtriangledown f(x^*)=0</script><h3 id="等式约束凸优化的最优化准则"><a href="#等式约束凸优化的最优化准则" class="headerlink" title="等式约束凸优化的最优化准则"></a>等式约束凸优化的最优化准则</h3><p>等式约束凸优化问题（式1中，m=0）,$x^*\in \mathbf X$是可微函数$f_0$的最优解的重要条件是，<br>存在$\upsilon=[\upsilon_1,\cdots ,\upsilon_p] \in  \mathbf R^p$,使得</p><script type="math/tex; mode=display">\bigtriangledown f_0(x^*)+\Sigma_{i=1}^{p} \upsilon_i a_i=0</script><p>其中，这里$a_i\in \mathbf R^n$.这个可以通过拉格朗日对偶函数的KKT条件证明得到。<br>将等式约束凸优化问题描述为矩阵形式</p><script type="math/tex; mode=display">minf(x)</script><script type="math/tex; mode=display">s.t.\mathbf Ax=b</script><p>对应的，$x^*\in \mathbf X$是可微函数f的最优解的重要条件为，存在$\upsilon\in \mathbf R^p$使得</p><script type="math/tex; mode=display">\bigtriangledown f(x^*)+\mathbf A^T\upsilon=0</script><p>其中：$\mathbf A \in \mathbf R^{p\times n}$</p><h2 id="无约束凸优化问题求解"><a href="#无约束凸优化问题求解" class="headerlink" title="无约束凸优化问题求解"></a>无约束凸优化问题求解</h2><h3 id="解析解"><a href="#解析解" class="headerlink" title="解析解"></a>解析解</h3><p>对于少数一些简单的凸优化问题，可以利用最优性准则通过解析来求解。但对于大多数凸优化问题来讲，是没有办法通过解析来求解的。</p><h3 id="下降方法"><a href="#下降方法" class="headerlink" title="下降方法"></a>下降方法</h3><p>下降方法将产生一个优化点列$x^{(K)},k=1,2,\cdots $,其中</p><script type="math/tex; mode=display">x^{(K+1)}=$x^{(K)}+t^{(k)}\Delta x^{(k)},t^{(k)}>0</script><p>使得</p><script type="math/tex; mode=display">f(x^{(k+1)})<f(x^{(k)})</script><p>$\Delta x^{(k)}$称为搜索方向，$t^{(k)}$称为步长<br>由凸函数的一阶条件可知，下降方法中的搜索方向必须满足</p><script type="math/tex; mode=display">\bigtriangledown f(x^{(k)})^T\Delta x^{(k)}<0</script><p>下降方法中，有两个问题需要解决：确定搜索步长和确定搜索方向。确定搜索步长的方法和算法有：固定步长搜索、精确直线搜索和回溯直线搜索。确定搜索方向的方法和算法有：梯度下降方法、最速下降方法和牛顿法。</p><h3 id="确定步长的方法"><a href="#确定步长的方法" class="headerlink" title="确定步长的方法"></a>确定步长的方法</h3><ol><li><p>固定步长搜索<br>步长值根据经验设定，为了防止算法震荡，值应当较小。优点：直观、简单；缺点：收敛速度慢。</p></li><li><p>精确直线搜索<br>精确搜索方向确定时，精确直线搜索步长通过沿着射线$x+t\Delta x\mid t \ge 0$<br>求解如下优化问题确定。</p><script type="math/tex; mode=display">t=arg min_{s \ge 0}f(x+s\Delta x)</script><p>当其优化成本比较低时，适合精确直线搜索。</p></li><li><p>回溯直线搜索<br>比较常用的是回溯直线搜索，大概思路是，用迭代方法求得的步长只要能使目标函数有足够的减少即可。详见第五章。</p></li></ol><h3 id="调整搜索方向的方法"><a href="#调整搜索方向的方法" class="headerlink" title="调整搜索方向的方法"></a>调整搜索方向的方法</h3><ol><li><p>梯度下降方法</p></li><li><p>最速下降方法<br>利用目标函数的一阶泰勒展开近似优化过程，进而确定学习方向。详见第六章。</p></li><li><p>牛顿法<br>利用目标函数的二阶泰勒展开近似表示目标函数，通过求解这个二次函数的极小值来确定搜索方向。详见第七章。</p></li></ol><h2 id="等式约束凸优化问题求解"><a href="#等式约束凸优化问题求解" class="headerlink" title="等式约束凸优化问题求解"></a>等式约束凸优化问题求解</h2><h3 id="通过消除等式求解"><a href="#通过消除等式求解" class="headerlink" title="通过消除等式求解"></a>通过消除等式求解</h3><p>任何等式约束优化问题都可以通过消除等式约束转化为等价的无约束优化问题，然后利用无约束的方法求解。</p><h3 id="通过Lagrange对偶问题求解"><a href="#通过Lagrange对偶问题求解" class="headerlink" title="通过Lagrange对偶问题求解"></a>通过Lagrange对偶问题求解</h3><p>利用无约束优化问题求解对偶问题，然后从对偶解中复原等式约束问题的解。详见第八章。</p><h3 id="等式约束的牛顿法"><a href="#等式约束的牛顿法" class="headerlink" title="等式约束的牛顿法"></a>等式约束的牛顿法</h3><p>详见《凸优化(七)——牛顿法》。</p><h2 id="不等式约束凸优化问题求解"><a href="#不等式约束凸优化问题求解" class="headerlink" title="不等式约束凸优化问题求解"></a>不等式约束凸优化问题求解</h2><h3 id="通过Lagrange对偶问题求解-1"><a href="#通过Lagrange对偶问题求解-1" class="headerlink" title="通过Lagrange对偶问题求解"></a>通过Lagrange对偶问题求解</h3><p>利用无约束优化问题求解对偶问题，然后从对偶解中复原不等式约束问题的解。《凸优化(八)——Lagrange对偶问题》。</p><h3 id="内点法"><a href="#内点法" class="headerlink" title="内点法"></a>内点法</h3><p>主要思路：引进的惩罚函数的在可行域的边界上设置障碍，使求解的迭代过程始终在可行域内部进行。[2]</p><p>这里暂不详述，待有时间再学习整理。</p><h1 id="回溯直线搜索"><a href="#回溯直线搜索" class="headerlink" title="回溯直线搜索"></a>回溯直线搜索</h1><h2 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h2><p>回溯直线搜索是求解无约束凸优化问题中，调整搜索步长非常简单有效的方法，也是实际应用中常用的方法。[2]</p><p>考虑固定步长搜索，为防止迭代震荡，一般步长值很小，很多经验值取0.01，这就导致收敛速度过慢。</p><p>考虑精确直线搜索，其本身又是一个优化问题，如果这个优化问题很复杂，则这个搜索方法就是没有意义的。</p><p>相比以上两种调整搜索步长的方法，回溯直线搜索则简单高效很多。</p><h2 id="回溯直线搜索-1"><a href="#回溯直线搜索-1" class="headerlink" title="回溯直线搜索"></a>回溯直线搜索</h2><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h3 id="算法解释"><a href="#算法解释" class="headerlink" title="算法解释"></a>算法解释</h3><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><p>(<strong>未完待续</strong>)<br>A、参考</p><p>[1]、《凸优化》，Stephen Boyd等著，王书宁等译</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概论&quot;&gt;&lt;a href=&quot;#概论&quot; class=&quot;headerlink&quot; title=&quot;概论&quot;&gt;&lt;/a&gt;概论&lt;/h1&gt;&lt;h2 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h2&gt;&lt;p&gt;最近在学习机器学习方面的算法知识，发现凸优化是机器学习中重要的数学基础，特地买了本书做学习，这里记录下一些学习心得，先搭个框架，内容会逐步展开，后续会陆续更新。&lt;/p&gt;
&lt;p&gt;主要参考资料&lt;a href=&quot;https://www.amazon.com/Convex-Optimization-Stephen-Boyd/dp/0521833787/ref=sr_1_1?ie=UTF8&amp;amp;qid=1500272157&amp;amp;sr=8-1&amp;amp;keywords=Stephen%20Boyd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《凸优化》&lt;/a&gt;(Stephen Boyd等著，王书宁等译)[1]这本书。&lt;br&gt;(各种公式用mathjax语法写的，写的崩溃了…..)&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://dxj1113.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="机器学习" scheme="https://dxj1113.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="算法" scheme="https://dxj1113.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="凸优化" scheme="https://dxj1113.github.io/tags/%E5%87%B8%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Kylin初探</title>
    <link href="https://dxj1113.github.io/2017/07/17/Kylin%E5%88%9D%E6%8E%A2/"/>
    <id>https://dxj1113.github.io/2017/07/17/Kylin初探/</id>
    <published>2017-07-17T05:36:26.000Z</published>
    <updated>2018-01-12T01:54:58.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kylin"><a href="#Kylin" class="headerlink" title="Kylin"></a>Kylin</h1><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>是一个开源的分布式分析引擎。它通过<a href="http://www.whoishostingthis.com/resources/ansi-sql-standards/" target="_blank" rel="noopener">ANSI-SQL</a>接口，提供基于<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>的超大数据集（TB-PB级）的多维分析（<a href="https://en.wikipedia.org/wiki/OLAP" target="_blank" rel="noopener">OLAP</a>）功能。<br> <a id="more"></a><br><em>整理 by  杜锡俊</em></p><h1 id="OLAP简介"><a href="#OLAP简介" class="headerlink" title="OLAP简介"></a>OLAP简介</h1><h2 id="OLAP的历史与基本概念"><a href="#OLAP的历史与基本概念" class="headerlink" title="OLAP的历史与基本概念"></a>OLAP的历史与基本概念</h2><p>OLAP全称为在线联机分析应用，是一种对于多维数据分析查询的解决方案。典型的OLAP应用场景包括销售、市场、管理等商务报表，预算决算，经济报表等等。</p><p>最早的OLAP查询工具是发布于1970年的Express，然而完整的OLAP概念是在1993年由关系数据库之父EdgarF.Codd 提出，伴随而来的是著名的“twelvelaws of online analytical processing”. 1998年微软发布MicrosoftAnalysis Services，并且在早一年通过OLE DB for OLAP API引入MDX查询语言，2001年微软和Hyperion发布的XML forAnalysis 成为了事实上的OLAP查询标准。如今，MDX已成为与SQL旗鼓相当的OLAP 查询语言，被各家OLAP厂商先后支持。</p><p>OLAPCube是一种典型的多维数据分析技术，Cube本身可以认为是不同维度数据组成的dataset，一个OLAP Cube 可以拥有多个维度（Dimension），以及多个事实（Factor Measure）。用户通过OLAP工具从多个角度来进行数据的多维分析。通常认为OLAP包括三种基本的分析操作：上卷（rollup）、下钻（drilldown）、切片切块（slicingand dicing），原始数据经过聚合以及整理后变成一个或多个维度的视图。</p><h2 id="ROLAP和MOLAP"><a href="#ROLAP和MOLAP" class="headerlink" title="ROLAP和MOLAP"></a>ROLAP和MOLAP</h2><p>传统OLAP根据数据存储方式的不同分为ROLAP（Relational OLAP）以及MOLAP（Multi-dimensionOLAP）</p><p>ROLAP 以关系模型的方式存储用作多维分析用的数据，优点在于存储体积小，查询方式灵活，然而缺点也显而易见，每次查询都需要对数据进行聚合计算，为了改善短板，ROLAP使用了列存、并行查询、查询优化、位图索引等技术</p><p>MOLAP 将分析用的数据物理上存储为多维数组的形式，形成CUBE结构。维度的属性值映射成多维数组的下标或者下标范围，事实以多维数组的值存储在数组单元中，优势是查询快速，缺点是数据量不容易控制，可能会出现维度爆炸的问题。</p><h2 id="大数据时代OLAP的挑战"><a href="#大数据时代OLAP的挑战" class="headerlink" title="大数据时代OLAP的挑战"></a>大数据时代OLAP的挑战</h2><p>近二十年内，ROLAP技术随着MPP并行数据库技术的发展，尤其是列存技术的支持下，实现了分析能力大幅度的跨越提升，同时伴随着内存成本的进一步降低，单节点内存扩展性增强，集群单节点的查询性能实现了飞跃，内存数据库的实用性跨上了一个新台阶，这些技术进步共同作用的结果是类似的技术基本覆盖了TB级别的数据分析需求。 Hadoop以及相关大数据技术的出现提供了一个几近无限扩展的数据平台，在相关技术的支持下，各个应用的数据已突破了传统OLAP所能支持的容量上界。每天千万、数亿条的数据，提供若干维度的分析模型，大数据OLAP最迫切所要解决的问题就是大量实时运算导致的响应时间迟滞。</p><h1 id="Kylin-相关研究"><a href="#Kylin-相关研究" class="headerlink" title="Kylin 相关研究"></a>Kylin 相关研究</h1><h2 id="Apache-kylin介绍"><a href="#Apache-kylin介绍" class="headerlink" title="Apache kylin介绍"></a>Apache kylin介绍</h2><p>OLAP全称为在线联机分析应用，是一种对于多维数据分析查询的解决方案。典型的OLAP应用场景包括销售、市场、管理等商务报表，预算决算，经济报表等等。</p><p>最早的OLAP查询工具是发布于1970年的Express，然而完整的OLAP概念是在1993年由关系数据库之父EdgarF.Codd 提出，伴随而来的是著名的“twelvelaws of online analytical processing”. 1998年微软发布MicrosoftAnalysis Services，并且在早一年通过OLE DB for OLAP API引入MDX查询语言，2001年微软和Hyperion发布的XML forAnalysis 成为了事实上的OLAP查询标准。如今，MDX已成为与SQL旗鼓相当的OLAP 查询语言，被各家OLAP厂商先后支持。</p><p>OLAPCube是一种典型的多维数据分析技术，Cube本身可以认为是不同维度数据组成的dataset，一个OLAP Cube 可以拥有多个维度（Dimension），以及多个事实（Factor Measure）。用户通过OLAP工具从多个角度来进行数据的多维分析。通常认为OLAP包括三种基本的分析操作：上卷（rollup）、下钻（drilldown）、切片切块（slicingand dicing），原始数据经过聚合以及整理后变成一个或多个维度的视图。</p><h3 id="Apache-kylin是什么。"><a href="#Apache-kylin是什么。" class="headerlink" title="Apache kylin是什么。"></a>Apache kylin是什么。</h3><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>是一个开源的分布式分析引擎。它通过<a href="http://www.whoishostingthis.com/resources/ansi-sql-standards/" target="_blank" rel="noopener">ANSI-SQL</a>接口，提供基于<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>的超大数据集（TB-PB级）的多维分析（<a href="https://en.wikipedia.org/wiki/OLAP" target="_blank" rel="noopener">OLAP</a>）功能。</p><p>只需三步，kylin即可实现超大数据集上的亚秒级（sub-second latency）查询。</p><ol><li>确定hadoop上一个星型模式（<a href="https://en.wikipedia.org/wiki/Star_schema" target="_blank" rel="noopener">wiki:Star schema</a>）的数据集。</li><li>构建数据立方体（<a href="https://en.wikipedia.org/wiki/OLAP_cube" target="_blank" rel="noopener">wiki:Data cube</a>）。</li><li>可通过<a href="http://kylin.apache.org/docs/tutorial/odbc.html" target="_blank" rel="noopener">ODBC</a>, <a href="http://kylin.apache.org/docs/howto/howto_jdbc.html" target="_blank" rel="noopener">JDBC</a>,<a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">RESTful API</a>等接口在亚秒级的延迟内查询相关数据。<br><img src="http://ot801bf4v.bkt.clouddn.com/7bb67e5fddac56630e11795523d198af_b.png" alt=""></li></ol><h3 id="为什么引入kylin。"><a href="#为什么引入kylin。" class="headerlink" title="为什么引入kylin。"></a>为什么引入kylin。</h3><p>由于数据是基于hadoop分布式存储,所以比<a href="https://www.mysql.com/" target="_blank" rel="noopener">mysql</a>的伸缩性好。</p><p>提供hadoop上超大数据规模（ 百亿行级别的数据）的亚秒级（sub-second latency）SQL查询，相对于<a href="http://hive.apache.org" target="_blank" rel="noopener">hive</a>的离线分析，可做到实时查询。<br>可无缝整合其他<a href="https://en.wikipedia.org/wiki/Business_intelligence" target="_blank" rel="noopener">BI</a>工具，如<a href="http://kylin.apache.org/docs/tutorial/tableau_91.html" target="_blank" rel="noopener">Tableau</a>, <a href="https://powerbi.microsoft.com/" target="_blank" rel="noopener">PowerBI</a>，<a href="https://products.office.com/en-us/excel" target="_blank" rel="noopener">Excel</a>。</p><h3 id="Apache-kylin-生态系统"><a href="#Apache-kylin-生态系统" class="headerlink" title="Apache kylin 生态系统"></a>Apache kylin 生态系统</h3><p><img src="http://ot801bf4v.bkt.clouddn.com/b74b5bb601134979a0c6e7f592ff363f_b.jpg" alt=""></p><ul><li><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>核心：<a href="http://kylin.apache.org" target="_blank" rel="noopener">Kylin</a>的（<a href="https://en.wikipedia.org/wiki/OLAP" target="_blank" rel="noopener">OLAP</a>） 引擎由<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>引擎、查询引擎、任务引擎、存储引擎组成。另外，它还有一个<a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">rest</a>服务器对外提供查询请求的服务。</li><li>可扩展性：提供插件机制支持额外的特性和功能。</li><li>与其他系统的整合：可整合任务调度器，<a href="https://en.wikipedia.org/wiki/Extract,_transform,_load" target="_blank" rel="noopener">ETL</a>工具、监控及告警系统。</li><li>驱动包（Drivers）：提供<a href="http://kylin.apache.org/docs/tutorial/odbc.html" target="_blank" rel="noopener">ODBC</a>、<a href="http://kylin.apache.org/docs/howto/howto_jdbc.html" target="_blank" rel="noopener">JDBC</a>驱动支持与其他工具（如<a href="http://kylin.apache.org/docs/tutorial/tableau_91.html" target="_blank" rel="noopener">Tableau</a>）的整合。</li></ul><h2 id="Apache-kylin内部解剖"><a href="#Apache-kylin内部解剖" class="headerlink" title="Apache kylin内部解剖"></a>Apache kylin内部解剖</h2><h3 id="Apache-kylin的核心概念"><a href="#Apache-kylin的核心概念" class="headerlink" title="Apache kylin的核心概念"></a>Apache kylin的核心概念</h3><ul><li><p>表（<a href="https://en.wikipedia.org/wiki/Table_(database" target="_blank" rel="noopener">Table</a>) ）：表定义在<a href="http://hive.apache.org" target="_blank" rel="noopener">hive</a>中，是数据立方体（Data <a href="https://en.wikipedia.org/wiki/OLAP_cube" target="_blank" rel="noopener">wiki:Data cube</a>）的数据源，在build cube 之前，必须同步在 <a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>中。</p></li><li><p>模型（<a href="https://en.wikipedia.org/wiki/Category:Data_modeling" target="_blank" rel="noopener">model</a>）:模型描述了一个星型模式的数据结构，它定义了一个事实表（Fact Table： <a href="https://en.wikipedia.org/wiki/Fact_table" target="_blank" rel="noopener">Wiki:Fact_table</a>）和多个查找表（Lookup Table：Wiki:<a href="https://en.wikipedia.org/wiki/Lookup_table" target="_blank" rel="noopener">Lookup_table</a>）的连接和过滤关系。</p></li><li><p>立方体（<a href="https://en.wikipedia.org/wiki/OLAP_cube" target="_blank" rel="noopener">Cube</a>）：它定义了使用的模型、模型中的表的维度（dimension:Wiki:<a href="https://en.wikipedia.org/wiki/Dimension_(data_warehouse" target="_blank" rel="noopener">dimension</a>)）、度量（measure:Wiki:<a href="https://en.wikipedia.org/wiki/Measure_(data_warehouse" target="_blank" rel="noopener">measure</a>) ,一般指聚合函数，如：sum、count、average等）、如何对段分区（ segments partition）、合并段（segments auto-merge）等的规则。</p></li><li><p>立方体段（<a href="http://kylin.apache.org/docs/gettingstarted/concepts.html" target="_blank" rel="noopener">Cube Segment</a>）：它是立方体构建（build）后的数据载体，一个 segment 映射<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中的一张表，立方体实例构建（build）后，会产生一个新的segment，一旦某个已经构建的立方体的原始数据发生变化，只需刷新（fresh）变化的时间段所关联的segment即可。</p></li><li><p>作业（<a href="http://kylin.apache.org/docs/gettingstarted/concepts.html" target="_blank" rel="noopener">Job</a>）：对立方体实例发出构建（build）请求后，会产生一个作业。该作业记录了立方体实例build时的每一步任务信息。作业的状态信息反映构建立方体实例的结果信息。如作业执行的状态信息为RUNNING 时，表明立方体实例正在被构建；若作业状态信息为FINISHED ，表明立方体实例构建成功；若作业状态信息为ERROR ，表明立方体实例构建失败！作业的所有状态如下：</p><pre><code>  1，NEW - This denotes one job has been just created.  2，PENDING - This denotes one job is paused by job scheduler and waiting for resources.  3，RUNNING - This denotes one job is running in progress.  4，FINISHED - This denotes one job is successfully finished.  5，ERROR - This denotes one job is aborted with errors.  6，DISCARDED - This denotes one job is cancelled by end users.</code></pre></li></ul><h3 id="Apache-kylin的工作机制"><a href="#Apache-kylin的工作机制" class="headerlink" title="Apache kylin的工作机制"></a>Apache kylin的工作机制</h3><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a> 能提供低延迟（sub-second latency）的秘诀就是预计算，即针对一个星型拓扑结构的数据立方体，预计算多个维度组合的度量，然后将结果保存在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中，对外暴露<a href="http://kylin.apache.org/docs/tutorial/odbc.html" target="_blank" rel="noopener">ODBC</a>, <a href="http://kylin.apache.org/docs/howto/howto_jdbc.html" target="_blank" rel="noopener">JDBC</a>,<a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">RESTful API</a>的查询接口，即可实现实时查询。<br>数据立方体一般由<a href="http://hive.apache.org" target="_blank" rel="noopener">Hive</a>中的一个事实表,多个查找表组成。预计算的过程在<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>中就是 <a href="(https://en.wikipedia.org/wiki/OLAP_cube">Cube</a>) 的build过程，如下图：<br><img src="http://ot801bf4v.bkt.clouddn.com/c509e5c3098617b534a54ebb7e1ca4d0_b.jpg" alt=""></p><p>当前<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>构建（build）数据立方体，采用逐层算法（By Layer Cubing）。未来的发布中将采用快速立方体算法（Fast Cubing）。下面简单介绍一下逐层算法：<br>一个完整的数据立方体，由N-dimension立方体，N-1 dimension立方体，N-2维立方体，0 dimension立方体这样的层关系组成，除了N-dimension立方体，基于原数据计算，其他层的立方体可基于其父层的立方体计算。所以该算法的核心是N次顺序的<a href="http://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="noopener">MapReduce</a>计算。<br>在<a href="http://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="noopener">MapReduce</a>模型中，key由维度的组合的构成，value由度量的组合构成，当一个Map读到一个<a href="https://en.wikipedia.org/wiki/Key-value_database" target="_blank" rel="noopener">key-value</a>对时，它会计算所有的子立方体（child cuboid），在每个子立方体中，Map从key中移除一个维度，将新key和value输出到reducer中。直到当所有层计算完毕，才完成数据立方体的计算。过程如下图：</p><p><img src="http://ot801bf4v.bkt.clouddn.com/ed38c518cc133e153b5344ea68fff38a_b.png" alt=""></p><p>在数据立方体计算完毕后，有一个任务（Convert Cuboid Data to HFile），其职责是将reduce输出的运算结果（Cuboid Data）转化成<a href="http://hbase.apache.org" target="_blank" rel="noopener">Hbase</a>中的存储载体（<a href="https://hbase.apache.org/devapidocs/org/apache/hadoop/[hbase](http://hbase.apache.org" target="_blank" rel="noopener">HFile</a>/io/hfile/HFile.html)），最终将HFile 加载到<a href="http://hbase.apache.org" target="_blank" rel="noopener">Hbase</a>表中便于查询。其中表的rowkey由维度组合而成，维度组合对应的度量值构成了column family，为了查询减少存储空间，会对RowKey和column family的值进行编码，默认编码是Snappy。</p><p><img src="http://ot801bf4v.bkt.clouddn.com/a0b22a6631b738c05bf8fcae4faf0f67_b.png" alt=""></p><p>整个数据立方体的构建流程如下：</p><p><img src="http://ot801bf4v.bkt.clouddn.com/85057685bcc7ecb67961cc9c6054162a_b.png" alt=""></p><ol><li>根据Cube定义的事实表以及维度表，利用Hive创建一张宽表</li><li>抽取事实表上的维度的distinct值，将事实表上的维度以字典树方式压缩编码成目录，将维度表以字典树的方式编码</li><li>利用MapReduce从第一步得到的宽表文件作为输入，创建 N－Dimension cuboid，然后每次根据前一步的结果串行生成 N-1 cuboid, N-2 cuboid … 0-Cuboid</li><li>根据生成的Cuboid数据量计算HTable的Region分割策略，创建HTable，将HFile导入进来</li></ol><p>Apache Kylin与传统的OLAP一样，无法应对数据Update的情况（更新数据会导致Cube的失效，需要重建整个Cube）。面对每天甚至每两个小时这样固定周期的增量数据，Kylin使用了一种增量Cubing技术来进行快速响应。</p><p>Apache Kylin的Cube可以根据时间段划分成多个Segment。在Cube第一次Build完成之后会有一个Segment，在每次增量Build后会产生一个新的Segment。增量Cubing依赖已有的CubeSegments和增量的原始数据。增量Cubing的步骤和新建 Cube的步骤类似，Segment之间以时间段进行区分。</p><p>增量Cubing所需要面对的原始数据量更小，因此增量Cubing的速度是非常快的。然而随着CubeSegments的数目增加，一定程度上会影响到查询的进行，所以在Segments数目到一定数量后可能需要进行CubeSegments的合并操作，实际上MergeCube是合成了一个新的大的CubeSegment来替代，Merge操作是一个异步的在线操作，不会对前端的查询业务产生影响。</p><p>合并操作步骤如下：</p><ol><li>遍历指定的Cube Segment</li><li>合并维度字典目录和维度表快照</li><li>利用MapReduce合并他们的 N-Dimension cuboid</li><li>将cuboid转换成HFile，生成新的HTable，替代原有的多个HTable</li></ol><h4 id="Apache-Kylin对传统MOLAP的改进"><a href="#Apache-Kylin对传统MOLAP的改进" class="headerlink" title="Apache Kylin对传统MOLAP的改进"></a>Apache Kylin对传统MOLAP的改进</h4><p>计算Cube的存储代价以及计算代价都是比较大的， 传统OLAP的维度爆炸的问题Kylin也一样会遇到。 Kylin提供给用户一些优化措施，在一定程度上能降低维度爆炸的问题：</p><p><strong>Cube 优化</strong>：</p><pre><code>   * Hierachy Dimension   * Derived Dimension   * Aggregation Group</code></pre><p>Hierachy Dimension， 一系列具有层次关系的Dimension组成一个Hierachy， 比如年、月、日组成了一个Hierachy， 在Cube中，如果不设置Hierarchy， 会有 年、月、日、年月、年日、月日 6个cuboid， 但是设置了Hierarchy之后Cuboid增加了一个约束，希望低Level的Dimension一定要伴随高Level的Dimension 一起出现。设置了Hierachy Dimension 能使得需要计算的维度组合减少一半。</p><p>Derived Dimension, 如果在某张维度表上有多个维度，那么可以将其设置为Derived Dimension， 在Kylin内部会将其统一用维度表的主键来替换，以此来达到降低维度组合的数目，当然在一定程度上Derived Dimension 会降低查询效率，在查询时，Kylin使用维度表主键进行聚合后，再通过主键和真正维度列的映射关系做一次转换，在Kylin内部再对结果集做一次聚合后返回给用户</p><p>Aggregation Group， 这是一个将维度进行分组，以求达到降低维度组合数目的手段。不同分组的维度之间组成的Cuboid数量会大大降低，维度组合从2的（k+m+n）次幂至多能降低到 2的k次幂加2的m次幂加2的n次幂。Group的优化措施与查询SQL紧密依赖，可以说是为了查询的定制优化。 如果查询的维度是夸Group的，那么Kylin需要以较大的代价从N－Cuboid中聚合得到所需要的查询结果，这需要Cube构建人员在建模时仔细地斟酌。</p><p><strong>数据压缩</strong>：<br>Apache Kylin针对维度字典以及维度表快照采用了特殊的压缩算法，对于Hbase中的聚合计算数据利用了Hadoop的LZO或者是Snappy，从而保证存储在Hbase以及内存中的数据尽可能的小。其中维度字典以及维度表快照的压缩考虑到DataCube中会出现非常多的重复的维度成员值，最直接的处理方式就是利用数据字典的方式将维度值映射成ID， Kylin中采用了Trie树的方式对维度值进行编码</p><p><strong>distinct count聚合查询优化</strong>：<br>Apache Kylin 采用了HypeLogLog的方式来计算DistinctCount。好处是速度快，缺点是结果是一个近似值，会有一定的误差。在非计费等通常的场景下DistinctCount的统计误差应用普遍可以接受。</p><p>具体的算法可见<a href="http://algo.inria.fr/flajolet/Publications/FlFuGaMe07.pdf" target="_blank" rel="noopener">论文</a></p><h4 id="Apache-kylin-与-RTOLAP"><a href="#Apache-kylin-与-RTOLAP" class="headerlink" title="Apache kylin 与 RTOLAP"></a>Apache kylin 与 RTOLAP</h4><p>ApacheKylin 可以说是与市面上流行的Presto、SparkSQL、Impala等直接在原始数据上查询的系统（暂且归于RTOLAP）走了一条完全不同的道路。前者在如何快速求得预计算结果，以及优化查询解析使得更多的查询能用上预计算结果方面在优化。后续Kylin的版本会改进预计算引擎，优化预计算速度，使得Kylin可以变成一个近似实时的分析引擎。而像Presto，SparkSQL等是着重于优化查询数据的过程环节，像一些其它的数据仓库一样，使用列存、压缩、并行查询等技术，优化查询。这种方案的好处就在于扩展性强、能适配更广泛的查询。但是在查询速度上，可以说Apache Kylin 要比ROLAP 至少快上一个数量级，所以对与查询响应时间要求较高的应用，ApacheKylin是最好的选择。</p><h3 id="Apache-kylin的架构及核心组件"><a href="#Apache-kylin的架构及核心组件" class="headerlink" title="Apache kylin的架构及核心组件"></a>Apache kylin的架构及核心组件</h3><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a> 架构如下：</p><p><img src="http://ot801bf4v.bkt.clouddn.com/bbd5a6023d74cf1a7530db2698c9993f_b.png" alt=""></p><p>核心组件：</p><ul><li>数据立方体构建引擎（Cube Build Engine）：当前底层数据计算引擎支持<a href="http://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="noopener">MapReduce</a>1、<a href="http://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="noopener">MapReduce</a>2、<a href="http://spark.apache.org" target="_blank" rel="noopener">Spark</a>等。</li><li>Rest Server：当前kylin采用的<a href="(http://kylin.apache.org/docs/tutorial/odbc.html">ODBC</a>, <a href="http://kylin.apache.org/docs/howto/howto_jdbc.html" target="_blank" rel="noopener">JDBC</a>,<a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">RESTful API</a>接口提供web服务。</li><li>查询引擎（Query Engine）：<a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">REST</a> Server接收查询请求后，解析sql语句，生成执行计划，然后转发查询请求到<a href="http://hbase.apache.org" target="_blank" rel="noopener">Hbase</a>中，最后将结构返回给 <a href="http://kylin.apache.org/docs/howto/howto_build_cube_with_restapi.html" target="_blank" rel="noopener">REST</a> Server。</li></ul><h4 id="Apache-kylin-SQL查询的实现"><a href="#Apache-kylin-SQL查询的实现" class="headerlink" title="Apache kylin SQL查询的实现"></a>Apache kylin SQL查询的实现</h4><p>ANSI SQL查询是Apache Kylin 非常明显的优势。Kylin的SQL语法解析依赖于另一个开源数据管理框架 ApacheCalcite， Calcite即之前的Optiq，是一个没有存储模块的数据库，即不管理数据存储、不包含数据处理的算法，不包含元信息的存储。因此它非常适合来做一个应用到存储引擎之间的中间层。在Calcite的基础之上只要为存储引擎写一个专用的适配器（Adapter）即可形成一个功能丰富的支持DML甚至DDL的“类数据库”。</p><p>Kylin完成了一个定制的Adapter，在Calcite完成SQL解析，形成语法树（AST）之后，由Kylin定义语法树各个节点的执行规则来进行查询。Calcite在遍历语法树节点后生成一个Kylin描述查询模型的Digest， Kylin会为此Digest去判断是否有匹配的Cube。如果有与查询匹配的Cube，即选择一个查询代价最小的Cube进行查询（KylinCube的查询代价计算目前是一个开放接口，可以根据维度数目，可以根据数据量大小来计算Cost）</p><p>Kylin目前的多维数据存储引擎是HBase， Kylin利用了HBase的Coprocessor机制在HBase的RegionServer完成部分聚合以及全部过滤操作，在HbaseScan时提前进行计算，利用HBase多个Region Server的计算能力加速Kylin的SQL查询。目前Kylin仍然有部分查询语法不支持，特别是过滤器Where部分的约束较多、对SQL有一定的要求，但是如果有针对性的对Coprocessor部分进行改造相信SQL兼容度可以有大幅的提升。</p><h2 id="Apache-kylin配置"><a href="#Apache-kylin配置" class="headerlink" title="Apache kylin配置"></a>Apache kylin配置</h2><p>在<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>的日常运维中，通常根据日常运行产生的日志调整相关配置参数，从而达到性能的提升和运行的稳定性，<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>官网并没有给出这些配置的相关说明和解释，下面介绍一下<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>的配置。<br>在${KYLIN_HOME}/conf 下一共4个配置文件：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin_hive_conf.xml</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin_job_conf_inmem.xml</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin_job_conf.xml</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.properties</span></span><br></pre></td></tr></table></figure></p><p>kylin_hive_conf.xml是kylin提交任务到<a href="http://hive.apache.org" target="_blank" rel="noopener">hive</a>的配置文件，kylin_job_conf_inmem.xml、kylin_job_conf.xml是 kylin提交任务到<a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html" target="_blank" rel="noopener">yarn</a>中的配置文件，用户可根据自己的情况酌情修改，下面介绍一下kylin.properties的重要配置项：</p><p>kylin服务器的运行模式，有all、job、query<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.server</span><span class="selector-class">.mode</span>=all</span><br></pre></td></tr></table></figure></p><p>kylin实例服务器列表，注意：不包括以job模式运行的服务器实例<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin.rest.servers=<span class="string">hostname1:</span><span class="number">7070</span>,<span class="string">hostname2:</span><span class="number">7070</span>,<span class="string">hostname3:</span><span class="number">7070</span></span><br></pre></td></tr></table></figure></p><p>kylin<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>配置<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.metadata</span><span class="selector-class">.url</span>=kylin_metadata@hbase</span><br></pre></td></tr></table></figure></p><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a> job的重试次数，注意：这个job指<a href="(https://en.wikipedia.org/wiki/OLAP_cube">cube</a>) build、fresh时生成的job,而不是每一个step 的mapreduce job。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.retry</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure></p><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>提交作业到<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>中时，每个reduce的最大输入，该参数用来确定mapreduce的reduce个数，</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.mapreduce</span><span class="selector-class">.default</span><span class="selector-class">.reduce</span><span class="selector-class">.input</span><span class="selector-class">.mb</span>=<span class="number">500</span>.</span><br></pre></td></tr></table></figure><p>参见以下代码：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public double <span class="function"><span class="title">getDefaultHadoopJobReducerInputMB</span></span>() &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="built_in">return</span> Double.parseDouble(getOptional(<span class="string">"kylin.job.mapreduce.default.reduce.input.mb"</span>, <span class="string">"500"</span>));&#125;</span></span><br><span class="line"></span><br><span class="line">And</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     protected void setReduceTaskNum(Job job, KylinConfig config, String cubeName, int level) throws ClassNotFoundException, IOException, InterruptedException, JobException &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Configuration jobConf = job.getConfiguration();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     KylinConfig kylinConfig = KylinConfig.getInstanceFromEnv();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     CubeDesc cubeDesc = CubeManager.getInstance(config).getCube(cubeName).getDescriptor();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylinConfig = cubeDesc.getConfig();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     double perReduceInputMB = kylinConfig.getDefaultHadoopJobReducerInputMB();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     double reduceCountRatio = kylinConfig.getDefaultHadoopJobReducerCountRatio();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // total map input MB</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     double totalMapInputMB = this.getTotalMapInputMB();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // output / input ratio</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     int preLevelCuboids, thisLevelCuboids;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="keyword">if</span> (level == 0) &#123; // base cuboid</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     preLevelCuboids = thisLevelCuboids = 1;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125; <span class="keyword">else</span> &#123; // n-cuboid</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     int[] allLevelCount = CuboidCLI.calculateAllLevelCount(cubeDesc);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     preLevelCuboids = allLevelCount[level - 1];</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     thisLevelCuboids = allLevelCount[level];</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // total reduce input MB</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     double totalReduceInputMB = totalMapInputMB * thisLevelCuboids / preLevelCuboids;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // number of reduce tasks</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     int numReduceTasks = (int) Math.round(totalReduceInputMB / perReduceInputMB * reduceCountRatio);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // adjust reducer number <span class="keyword">for</span> cube <span class="built_in">which</span> has DISTINCT_COUNT measures <span class="keyword">for</span> better performance</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="keyword">if</span> (cubeDesc.hasMemoryHungryMeasures()) &#123;numReduceTasks = numReduceTasks * 4;&#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // at least 1 reducer</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     numReduceTasks = Math.max(1, numReduceTasks);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     // no more than 5000 reducer by default</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     numReduceTasks = Math.min(kylinConfig.getHadoopJobMaxReducerNumber(), numReduceTasks);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     jobConf.setInt(MAPRED_REDUCE_TASKS, numReduceTasks);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     logger.info(<span class="string">"Having total map input MB "</span> + Math.round(totalMapInputMB));logger.info(<span class="string">"Having level "</span> + level + <span class="string">", pre-level cuboids "</span> + preLevelCuboids + <span class="string">", this level cuboids "</span> + thisLevelCuboids);logger.info(<span class="string">"Having per reduce MB "</span> + perReduceInputMB + <span class="string">", reduce count ratio "</span> + reduceCountRatio);logger.info(<span class="string">"Setting "</span> + MAPRED_REDUCE_TASKS + <span class="string">"="</span> + numReduceTasks);&#125;</span></span><br></pre></td></tr></table></figure></p><p>用户可根据自己的数据量大小，性能要求及<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>集群中的mapred-site.xml配置，酌情修改该项。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.run</span><span class="selector-class">.as</span><span class="selector-class">.remote</span><span class="selector-class">.cmd</span>=false</span><br></pre></td></tr></table></figure></p><p>该项配置表示，是否以ssh命令方式，向<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>、<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>、<a href="http://hive.apache.org" target="_blank" rel="noopener">hive</a>等发起CLI命令。一般将<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>部署在<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>集群的客户机上，所以该值为false。假如<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>服务不部署在<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>的客户机上，则该值为true;这样<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>访问<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>集群，需要给出以下配置项的值：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="comment"># Only necessary when kylin.job.run.as.remote.cmd=true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.job.remote.cli.hostname=</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="comment"># Only necessary when kylin.job.run.as.remote.cmd=true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.job.remote.cli.username=</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="comment"># Only necessary when kylin.job.run.as.remote.cmd=true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.job.remote.cli.password=</span></span><br></pre></td></tr></table></figure></p><p>以下配置项是<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>并发执行job的最大值：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.concurrent</span><span class="selector-class">.max</span><span class="selector-class">.limit</span>=<span class="number">10</span></span><br></pre></td></tr></table></figure></p><p><a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>检查提交<a href="http://hadoop.apache.org/docs/current/hadoop-yarn/hadoop-yarn-site/YARN.html" target="_blank" rel="noopener">yarn</a>中的mapreduce任务状态的时间间隔：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.yarn</span><span class="selector-class">.app</span><span class="selector-class">.rest</span><span class="selector-class">.check</span><span class="selector-class">.interval</span><span class="selector-class">.seconds</span>=<span class="number">10</span></span><br></pre></td></tr></table></figure></p><p>代码如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="keyword">while</span> (!isDiscarded()) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       JobStepStatusEnum newStatus = statusChecker.checkStatus();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">if</span> (status == JobStepStatusEnum.KILLED) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           executableManager.updateJobOutput(getId(), ExecutableState.ERROR, Collections.&lt;String, StringemptyMap(), <span class="string">"killed by admin"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="built_in">return</span> new ExecuteResult(ExecuteResult.State.FAILED, <span class="string">"killed by admin"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">if</span> (status == JobStepStatusEnum.WAITING &amp;&amp; (newStatus == JobStepStatusEnum.FINISHED || newStatus == JobStepStatusEnum.ERROR || newStatus == JobStepStatusEnum.RUNNING)) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          final long waitTime = System.currentTimeMillis() - getStartTime();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          setMapReduceWaitTime(waitTime);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         status = newStatus;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         executableManager.addJobInfo(getId(), hadoopCmdOutput.getInfo());</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">if</span> (status.isComplete()) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          final Map&lt;String, Stringinfo = hadoopCmdOutput.getInfo();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          readCounters(hadoopCmdOutput, info);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          executableManager.addJobInfo(getId(), info);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           <span class="keyword">if</span> (status == JobStepStatusEnum.FINISHED) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">            <span class="built_in">return</span> new ExecuteResult(ExecuteResult.State.SUCCEED, output.toString());</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           <span class="built_in">return</span> new ExecuteResult(ExecuteResult.State.FAILED, output.toString());</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">           &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Thread.sleep(context.getConfig().getYarnStatusCheckIntervalSeconds() * 1000);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>以下配置项是<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a> build <a href="(https://en.wikipedia.org/wiki/OLAP_cube">cube</a>)时的第一步建立<a href="http://hive.apache.org" target="_blank" rel="noopener">hive</a>中间表所在的数据库：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.job</span><span class="selector-class">.hive</span><span class="selector-class">.database</span><span class="selector-class">.for</span><span class="selector-class">.intermediatetable</span>=default</span><br></pre></td></tr></table></figure></p><p>以下是kylin build <a href="(https://en.wikipedia.org/wiki/OLAP_cube">cube</a>)时在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中建表后，存储数据的压缩算法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.hbase</span><span class="selector-class">.default</span><span class="selector-class">.compression</span><span class="selector-class">.codec</span>=snappy</span><br></pre></td></tr></table></figure></p><p>注意，设值时，先要检验<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>所指向的<a href="http://hadoop.apache.org" target="_blank" rel="noopener">hadoop</a>支不支持该压缩算法，检验命令如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     hadoop checknative -a</span></span><br></pre></td></tr></table></figure></p><h2 id="Apache-Kylin元数据管理"><a href="#Apache-Kylin元数据管理" class="headerlink" title="Apache Kylin元数据管理"></a>Apache Kylin元数据管理</h2><h3 id="Apache-kylin元数据的存储"><a href="#Apache-kylin元数据的存储" class="headerlink" title="Apache kylin元数据的存储"></a>Apache kylin元数据的存储</h3><p>Apache <a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>的<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>包括 立方体描述（cube description），立方体实例（cube instances）项目（project）、作业（job）、表(table)、字典(dictionary),参见： Apache <a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a> 核心概念。在<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>集群中至关重要，假如<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>丢失，<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>集群将无法工作。</p><p>在<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a> 的设计中，<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>存储的类图如下</p><p><img src="http://ot801bf4v.bkt.clouddn.com/658496f85b8d625e72326710e86b0ec4_b.png" alt=""></p><p>可见<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>提供了两种方式存储<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>，一般而言，集群模式的<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>都选择在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中存储。在${KYLIN_HOME}/conf/kylin.properties中，<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>的默认配置如下：</p><blockquote><pre><code>kylin.metadata.url=kylin_metadata@hbase</code></pre></blockquote><p>kylin_metadata@hbase表示，<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>存储在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中的kylin_metadata表中。HBaseResourceStore#HBaseResourceStore的参考代码如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public HBaseResourceStore(KylinConfig kylinConfig) throws IOException &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         super(kylinConfig);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         String metadataUrl = kylinConfig.getMetadataUrl();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         // split TABLE@HBASE_URL</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         int cut = metadataUrl.indexOf(<span class="string">'@'</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         tableNameBase = cut &lt; 0 ? DEFAULT_TABLE_NAME : metadataUrl.substring(0, cut);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         hbaseUrl = cut &lt; 0 ? metadataUrl : metadataUrl.substring(cut + 1);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         createHTableIfNeeded(getAllInOneTableName());</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>如若存储<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a><a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>在本地文件系统中，需将kylin.metadata.url 指向本地文件系统的一个绝对路径, 如：可在${KYLIN_HOME}/conf/kylin.properties中配置如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.metadata.url=/home/<span class="variable">$&#123;username&#125;</span>/<span class="variable">$&#123;kylin_home&#125;</span>/kylin_metada</span></span><br></pre></td></tr></table></figure></p><p>注意，一定要是绝对路径，否则会出现错误。</p><p>当选择<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>存储在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中时，并非所有的数据都在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中，当待存储的记录（通常是key-value pairs）的value大于一个最大值kvSizeLimit时，数据将被保存在HDFS中，默认路径为：/kylin/kylin_metadata/，相关配置项在${KYLIN_HOME}/conf/kylin.properties中，如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.hdfs</span><span class="selector-class">.working</span><span class="selector-class">.dir</span>=/kylin</span><br><span class="line">&gt;     kylin<span class="selector-class">.metadata</span><span class="selector-class">.url</span>=kylin_metadata@hbase</span><br></pre></td></tr></table></figure></p><p>HBaseResourceStore#buildPut的参考代码如下：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">private <span class="keyword">Put</span> buildPut(String resPath, long ts, byte[] row, byte[] content, HTableInterface <span class="keyword">table</span>) throws <span class="comment">IOException &#123;</span></span><br><span class="line">    int kvSizeLimit = this.kylinConfig.getHBaseKeyValueSize();</span><br><span class="line">    <span class="keyword">if</span> (content.length kvSizeLimit) &#123;</span><br><span class="line">        writeLargeCellToHdfs(resPath, content, <span class="keyword">table</span>);</span><br><span class="line">        content = BytesUtil.EMPTY_BYTE_ARRAY;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Put</span> <span class="keyword">put</span> = new <span class="keyword">Put</span>(row);</span><br><span class="line">    <span class="keyword">put</span>.add(B_FAMILY, B_COLUMN, content);</span><br><span class="line">    <span class="keyword">put</span>.add(B_FAMILY, B_COLUMN_TS, Bytes.toBytes(ts));</span><br><span class="line"></span><br><span class="line">    return <span class="keyword">put</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>kvSizeLimit 的获取代码如下：</p><blockquote><pre><code>public int getHBaseKeyValueSize() {    return Integer.parseInt(this.getOptional(&quot;kylin.hbase.client.keyvalue.maxsize&quot;, &quot;10485760&quot;));}</code></pre></blockquote><p>默认值为10M，可在在${KYLIN_HOME}/conf/kylin.properties中配置：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.hbase</span><span class="selector-class">.client</span><span class="selector-class">.keyvalue</span><span class="selector-class">.maxsize</span>=<span class="number">10485760</span></span><br></pre></td></tr></table></figure></p><p>注意，该值的大小十分重要，因为<a href="http://kylin.apache.org" target="_blank" rel="noopener">kylin</a>为了提高整体性能将<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>中的<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>缓存在<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>内存中，如下图<br><img src="http://ot801bf4v.bkt.clouddn.com/256ebd1d306843ca0bd2305c01ce1eb4_r.png" alt=""></p><h2 id="Apache-kylin元数据的运维"><a href="#Apache-kylin元数据的运维" class="headerlink" title="Apache kylin元数据的运维"></a>Apache kylin元数据的运维</h2><p>当前<a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>的<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>只提供了<a href="http://baike.baidu.com/item/%E5%86%B7%E5%A4%87%E4%BB%BD" target="_blank" rel="noopener">冷备份</a>的方式。</p><p>可利用crontab 在${KYLIN_HOME}下，每天定时执行./bin/metastore.sh backup命令，kylin会将<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>信息保存如下目录：</p><blockquote><pre><code>${KYLIN_HOME}/meta_backups/meta_year_month_day_hour_minute_second</code></pre></blockquote><p>当kylin<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>损坏或不一致，可采用如下命令恢复：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="built_in">cd</span> <span class="variable">$&#123;KYLIN_HOME&#125;</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     sh ./bin/metastore.sh reset</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     sh ./bin/metastore.sh restore ./meta_backups/meta_xxxx_xx_xx_xx_xx_xx</span></span><br></pre></td></tr></table></figure><h2 id="Apache-kylin-Slow-Query-SQL改造"><a href="#Apache-kylin-Slow-Query-SQL改造" class="headerlink" title="Apache kylin-Slow Query SQL改造"></a>Apache kylin-Slow Query SQL改造</h2><h3 id="慢查询（Slow-Query-SQL）定性"><a href="#慢查询（Slow-Query-SQL）定性" class="headerlink" title="慢查询（Slow Query SQL）定性"></a>慢查询（Slow Query SQL）定性</h3><p>在Apache <a href="http://kylin.apache.org" target="_blank" rel="noopener">Apache kylin</a>中，一旦<a href="https://en.wikipedia.org/wiki/OLAP_cube" target="_blank" rel="noopener">cube</a>）经过build、refresh或merge后，将对外提供基于<a href="http://kylin.apache.org/docs/tutorial/odbc.html" target="_blank" rel="noopener">ODBC</a>、<a href="http://kylin.apache.org/docs/howto/howto_jdbc.html" target="_blank" rel="noopener">JDBC</a>、RESTful API等接口的亚秒级OLAP功能；尽管如此，在生产环境中，我们仍然需要记录执行结果很慢的sql语句，并发出告警，以便分析、优化。<br>在kylin的query engine 端，有一个后台线程BadQueryDetector不断去发现前端请求的错误的sql语句，当然包括slow query sql,核心代码如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public void <span class="function"><span class="title">run</span></span>() &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             try &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 Thread.sleep(detectionInterval);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 // stop detection and <span class="built_in">exit</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 <span class="built_in">return</span>;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             try &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 detectBadQuery();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125; catch (Exception ex) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 logger.error(<span class="string">""</span>, ex);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>BadQueryDetector#detectBadQuery 代码如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     private void <span class="function"><span class="title">detectBadQuery</span></span>() &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         long now = System.currentTimeMillis();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         ArrayList&lt;Entryentries = new ArrayList&lt;Entry&gt;(runningQueries.values());</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         Collections.sort(entries);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         // report <span class="keyword">if</span> query running long</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">for</span> (Entry e : entries) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             <span class="built_in">float</span> runningSec = (<span class="built_in">float</span>) (now - e.startTime) / 1000;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             <span class="keyword">if</span> (runningSec &gt;= alertRunningSec) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 notify(<span class="string">"Slow"</span>, runningSec, e.startTime, e.sqlRequest.getProject(), e.sqlRequest.getSql(), e.thread);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 dumpStackTrace(e.thread);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                 <span class="built_in">break</span>; // entries are sorted by startTime</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         // report <span class="keyword">if</span> low memory</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">if</span> (getSystemAvailMB() &lt; alertMB) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             logger.info(<span class="string">"System free memory less than "</span> + alertMB + <span class="string">" MB. "</span> + entries.size() + <span class="string">" queries running."</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>即当sql的执行时间大于 alertRunningSec,kylin将其定性为 slow query sql,alertRunningSec的获取如下：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public <span class="function"><span class="title">BadQueryDetector</span></span>() &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         super(<span class="string">"BadQueryDetector"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         this.setDaemon(<span class="literal">true</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         this.kylinConfig = KylinConfig.getInstanceFromEnv();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         this.detectionInterval = kylinConfig.getBadQueryDefaultDetectIntervalSeconds() * 1000;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         this.alertMB = 100;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         this.alertRunningSec = kylinConfig.getBadQueryDefaultAlertingSeconds();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         initNotifiers();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>以及<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public int <span class="function"><span class="title">getBadQueryDefaultAlertingSeconds</span></span>() &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="built_in">return</span> Integer.parseInt(getOptional(<span class="string">"kylin.query.badquery.alerting.seconds"</span>, <span class="string">"90"</span>));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>可见当sql的响应时间超过90秒，kylin才会将其视为slow query sql, 显然，对于一个提供实时查询的OLAP系统，这个指标的设置是不合理的。在${KYLIN_HOME}/conf/kylin.properties中修改如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     kylin<span class="selector-class">.query</span><span class="selector-class">.badquery</span><span class="selector-class">.alerting</span><span class="selector-class">.seconds</span>=<span class="number">3</span></span><br></pre></td></tr></table></figure></p><h3 id="告警改造"><a href="#告警改造" class="headerlink" title="告警改造"></a>告警改造</h3><p>当前 slow query sql的发现及输出采用观察者模式,用户可以通过实现接口 Notifier 自定义观察者,然后注册给BadQueryDetector。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;     public<span class="built_in"> interface </span>Notifier &#123;</span><br><span class="line">&gt;         void badQueryFound(String adj, float runningSec, long startTime, String project, String sql, Thread t);</span><br><span class="line">&gt;     &#125;</span><br></pre></td></tr></table></figure></p><p>以及<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public void registerNotifier(Notifier notifier) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         notifiers.add(notifier);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><p>当前BadQueryDetector有两个内置观察者，LoggerNotifier和PersistenceNotifier，其中LoggerNotifier将slow query sql 记录到日志；PersistenceNotifier将记录至<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>（一般是<a href="http://hbase.apache.org" target="_blank" rel="noopener">hbase</a>）。</p><p>出于运维需要，我们可以自定义观察者，将slow qeury sql发送到业务负责人的邮箱或者手机。如：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     public class  EmailNotifier  implements Notifier  &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         void badQueryFound(String adj, <span class="built_in">float</span> runningSec, long startTime, String project, String sql, Thread t)&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">                   //send a email;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">          &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></p><h3 id="slow-query-sql-在元数据中的位置"><a href="#slow-query-sql-在元数据中的位置" class="headerlink" title="slow query sql 在元数据中的位置"></a>slow query sql 在元数据中的位置</h3><p>当<a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>配置采用默认配置时，即：</p><blockquote><pre><code>kylin.metadata.url=kylin_metadata@hbase</code></pre></blockquote><p><a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">元数据</a>在以下位置：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     1)表 : kylin_metadata</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     2)rowKey : /bad_query/<span class="variable">$&#123;project_name&#125;</span>.json // 用UTF-8 编码</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     3) column: f:c  // content: slow sql的具体内容,需先用UTF-8解码，然后用 JsonSerializer 反序列化</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        column: f:t  //timestamp  : 更新该条记录的 时间戳</span></span><br></pre></td></tr></table></figure></p><h2 id="Kylin-on-Docker"><a href="#Kylin-on-Docker" class="headerlink" title="Kylin on Docker"></a>Kylin on Docker</h2><p>This repository trackes the code and files for building docker images with Apache Kylin.</p><p>此部分描述在 docker中运行Kylin的代码和过程</p><h3 id="How-to-make-it"><a href="#How-to-make-it" class="headerlink" title="How to make it"></a>How to make it</h3><p>The main idea is building Hadoop/HBase/Hive clients and Kylin binary package into one image; User can pull this image, and then just add client configuration files like core-site.xml, hdfs-site.xml, yarn-site.xml, hbase-site.xml, hive-site.xml and kylin.properties to the effective paths to make a new image (has verified), or upload these files during starting up (not verified yet);</p><p>主要的思路是打包Hadoop/HBase/Hive的客户端以及Kylin的二进制包进一个镜像，用户可以拉取这个镜像并且增加客户端配置文件（例如core-site.xml, hdfs-site.xml, yarn-site.xml, hbase-site.xml, hive-site.xml and kylin.properties）进有效路径创建一个新镜像。</p><p>Before start, you need do some preparations:<br>开始之前，需要做如下准备</p><ul><li>check the Hadoop versions, and make sure the client libs in the image are compitable with the cluster;</li><li>检查 hadoop 版本，确保镜像中的客户端包与集群兼容。</li><li>prepare a kylin.properties file for this deployment;</li><li>为部署准备一个kylin.properties 文件</li><li>ensure the Hadoop security constraint will not block Docker’s adoption; you may need run additional component in the container if kerberos is enabled.</li><li>确保 hadoop 安全组建不会阻止docker的适配。如果需要使用kerberos，有可能需要运行额外组件。</li></ul><h3 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h3><p>Below is a sample of building and running a docker image for Hortonworks HDP 2.2 cluster.<br>下面是一个在Hortonworks HDP 2.2 集群上构建和运行一个docker镜像的例子。</p><ol><li><p>Collect the client configuration files Get the *-site.xml files from a working Hadoop client node, to a local folder say </p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"~/hadoop-conf/"</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></li><li><p>Prepare kylin.properties</p></li></ol><p>The kylin.properties file is the main configuration file for Kylin; you need prepare such a file and put it to the “~/hadoop-conf/“ folder, together with other conf files; suggest to double check the parameters in it; e.g, the “kylin.metadata.url” points to the right metadata table, “kylin.hdfs.working.dir” is an existing HDFS folder and you have permission to write, etc.</p><ol><li><p>Clone this repository, checkout the correct branch;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     git <span class="built_in">clone</span> https://github.com/Kyligence/kylin-docker</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="built_in">cd</span> kylin-docker</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     git checkout kylin152-hdp22</span></span><br></pre></td></tr></table></figure></li><li><p>Copy the client configuration files to “kylin-docker/conf” folder, overwriting those template files;</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="keyword">cp</span> -rf ~/hadoop-<span class="keyword">conf</span>/* <span class="keyword">conf</span>/</span><br></pre></td></tr></table></figure></li><li><p>Build docker image, which may take a while, just take a cup of tea;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     docker build -t kyligence/kylin:152 .</span></span><br></pre></td></tr></table></figure></li></ol><p>After the build finished, should be able to see the image with “docker images” commmand;<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;     [root@ip<span class="number">-10</span><span class="number">-0</span><span class="number">-0</span><span class="number">-38</span> ~]# docker images</span><br><span class="line">&gt;     REPOSITORY  TAG IMAGE IDCREATED VIRTUAL SIZE</span><br><span class="line">&gt;     kyligence/kylin <span class="number">152</span> <span class="number">7</span>ece32097fa3About an hour ago   <span class="number">3.043</span> GB</span><br></pre></td></tr></table></figure></p><ol><li><p>Now you can run a contianer with the bootstrap command (in which will start Kylin server). The “-bash” argument is telling to keep in bash so you can continue to run bash commands; If don’t need, you can use the “-d” argument:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     [root@ip-10-0-0-38 ~]<span class="comment"># docker run -i -t -p 7070:7070 kyligence/kylin:152 /etc/bootstrap.sh -bash</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Generating SSH1 RSA host key:  [  OK  ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Starting sshd: [  OK  ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     KYLIN_HOME is <span class="built_in">set</span> to /usr/<span class="built_in">local</span>/kylin/bin/../</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     kylin.security.profile is <span class="built_in">set</span> to ldap</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     16/06/30 04:50:31 WARN conf.HiveConf: HiveConf of name hive.optimize.mapjoin.mapreduce does not exist</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     16/06/30 04:50:31 WARN conf.HiveConf: HiveConf of name hive.heapsize does not exist</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     16/06/30 04:50:31 WARN conf.HiveConf: HiveConf of name hive.server2.enable.impersonation does not exist</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     16/06/30 04:50:31 WARN conf.HiveConf: HiveConf of name hive.auto.convert.sortmerge.join.noconditionaltask does not exist</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Logging initialized using configuration <span class="keyword">in</span> file:/etc/hive/conf/hive-log4j.properties</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     HCAT_HOME not found, try to find hcatalog path from hadoop home</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     A new Kylin instance is started by , stop it using <span class="string">"kylin.sh stop"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Please visit http://&lt;ip&gt;:7070/kylin</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     You can check the <span class="built_in">log</span> at /usr/<span class="built_in">local</span>/kylin/bin/..//logs/kylin.log</span></span><br></pre></td></tr></table></figure></li><li><p>After a minute, you can open web browser with address <a href="http://host:7070/kylin" target="_blank" rel="noopener">http://host:7070/kylin</a> , here the “host” is the hostname or IP address of the hosting machine which runs Docker; Its 7070 port will redirect to the contianer’s 7070 port as we specified in the “docker run” command; You can change to other port as you like.</p></li><li><p>Now you can use Kylin as usually: import Hive tables, design cubes, build, query, etc.</p></li></ol><h2 id="Kylin-接口"><a href="#Kylin-接口" class="headerlink" title="Kylin 接口"></a>Kylin 接口</h2><h3 id="ODBC接口"><a href="#ODBC接口" class="headerlink" title="ODBC接口"></a>ODBC接口</h3><blockquote><p>We provide Kylin ODBC driver to enable data access from ODBC-compatible client applications.</p><p>Both 32-bit version or 64-bit version driver are available.</p><p>Tested Operation System: Windows 7, Windows Server 2008 R2</p><p>Tested Application: Tableau 8.0.4, Tableau 8.1.3 and Tableau 9.1</p></blockquote><h4 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h4><ol><li>Microsoft Visual C++ 2012 Redistributable<ul><li>For 32 bit Windows or 32 bit Tableau Desktop: Download: 32bit version</li><li>For 64 bit Windows or 64 bit Tableau Desktop: Download: 64bit version</li></ul></li><li>ODBC driver internally gets results from a REST server, make sure you have access to one</li></ol><h4 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h4><ol><li>Uninstall existing Kylin ODBC first, if you already installled it before</li><li>Download ODBC Driver from download.<ul><li>For 32 bit Tableau Desktop: Please install KylinODBCDriver (x86).exe</li><li>For 64 bit Tableau Desktop: Please install KylinODBCDriver (x64).exe</li></ul></li><li>Both drivers already be installed on Tableau Server, you properly should be able to publish to there without issues</li></ol><h4 id="DSN-configuration"><a href="#DSN-configuration" class="headerlink" title="DSN configuration"></a>DSN configuration</h4><p>Open ODBCAD to configure DSN.<br>For 32 bit driver, please use the 32bit version in C:\Windows\SysWOW64\odbcad32.exe<br>For 64 bit driver, please use the default “Data Sources (ODBC)” in Control Panel/Administrator Tools</p><h3 id="JDBC接口"><a href="#JDBC接口" class="headerlink" title="JDBC接口"></a>JDBC接口</h3><h4 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h4><p>Build on kylin authentication restful service. Supported parameters:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;     1.<span class="built_in"> user </span>: username</span><br><span class="line">&gt;     2. password : password</span><br><span class="line">&gt;     3. ssl: <span class="literal">true</span>/<span class="literal">false</span>.<span class="built_in"> Default </span>be <span class="literal">false</span>; <span class="keyword">If</span> <span class="literal">true</span>, all the services call will use https.</span><br></pre></td></tr></table></figure></p><h4 id="Connection-URL-format"><a href="#Connection-URL-format" class="headerlink" title="Connection URL format:"></a>Connection URL format:</h4><blockquote><pre><code>jdbc:kylin://&lt;hostname&gt;:&lt;port&gt;/&lt;kylin_project_name&gt;</code></pre><ul><li>If “ssl” = true, the “port” should be Kylin server’s HTTPS port;</li><li>If “port” is not specified, the driver will use default port: HTTP 80, HTTPS 443;</li><li>The “kylin_project_name” must be specified and user need ensure it exists in Kylin server;</li></ul></blockquote><p> Query with Statement<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Driver driver = (Driver) Class.forName(<span class="string">"org.apache.kylin.jdbc.Driver"</span>).newInstance();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Properties info = new Properties();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> info.put(<span class="string">"user"</span>, <span class="string">"ADMIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> info.put(<span class="string">"password"</span>, <span class="string">"KYLIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Connection conn = driver.connect(<span class="string">"jdbc:kylin://localhost:7070/kylin_project_name"</span>, info);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Statement state = conn.createStatement();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ResultSet resultSet = state.executeQuery(<span class="string">"select * from test_table"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">while</span> (resultSet.next()) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> assertEquals(<span class="string">"foo"</span>, resultSet.getString(1));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> assertEquals(<span class="string">"bar"</span>, resultSet.getString(2));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> assertEquals(<span class="string">"tool"</span>, resultSet.getString(3));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br></pre></td></tr></table></figure></p><p> Query with PreparedStatement</p><p>Supported prepared statement parameters:</p><ul><li>setString</li><li>setInt</li><li>setShort</li><li>setLong</li><li>setFloat</li><li>setDouble</li><li>setBoolean</li><li>setByte</li><li>setDate</li><li>setTime</li><li>setTimestamp<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     Driver driver = (Driver) Class.forName(<span class="string">"org.apache.kylin.jdbc.Driver"</span>).newInstance();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Properties info = new Properties();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     info.put(<span class="string">"user"</span>, <span class="string">"ADMIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     info.put(<span class="string">"password"</span>, <span class="string">"KYLIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Connection conn = driver.connect(<span class="string">"jdbc:kylin://localhost:7070/kylin_project_name"</span>, info);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     PreparedStatement state = conn.prepareStatement(<span class="string">"select * from test_table where id=?"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     state.setInt(1, 10);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ResultSet resultSet = state.executeQuery();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="keyword">while</span> (resultSet.next()) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     assertEquals(<span class="string">"foo"</span>, resultSet.getString(1));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     assertEquals(<span class="string">"bar"</span>, resultSet.getString(2));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     assertEquals(<span class="string">"tool"</span>, resultSet.getString(3));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></li></ul><p>Get query result set metadata</p><p>Kylin jdbc driver supports metadata list methods:<br>List catalog, schema, table and column with sql pattern filters(such as %).<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> Driver driver = (Driver) Class.forName(<span class="string">"org.apache.kylin.jdbc.Driver"</span>).newInstance();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Properties info = new Properties();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> info.put(<span class="string">"user"</span>, <span class="string">"ADMIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> info.put(<span class="string">"password"</span>, <span class="string">"KYLIN"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Connection conn = driver.connect(<span class="string">"jdbc:kylin://localhost:7070/kylin_project_name"</span>, info);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Statement state = conn.createStatement();</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ResultSet resultSet = state.executeQuery(<span class="string">"select * from test_table"</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ResultSet tables = conn.getMetaData().getTables(null, null, <span class="string">"dummy"</span>, null);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">while</span> (tables.next()) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">for</span> (int i = 0; i &lt; 10; i++) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> assertEquals(<span class="string">"dummy"</span>, tables.getString(i + 1));</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br></pre></td></tr></table></figure></p><h3 id="RESTful-接口"><a href="#RESTful-接口" class="headerlink" title="RESTful 接口"></a>RESTful 接口</h3><h4 id="Build-Cube-with-RESTful-API"><a href="#Build-Cube-with-RESTful-API" class="headerlink" title="Build Cube with RESTful API"></a>Build Cube with RESTful API</h4><h5 id="Authentication-1"><a href="#Authentication-1" class="headerlink" title="Authentication"></a>Authentication</h5><ul><li>Currently, Kylin uses basic authentication.</li><li>Add Authorization header to first request for authentication</li><li>Or you can do a specific request by POST <a href="http://localhost:7070/kylin/api/user/authentication" target="_blank" rel="noopener">http://localhost:7070/kylin/api/user/authentication</a></li><li>Once authenticated, client can go subsequent requests with cookies.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> POST http://localhost:7070/kylin/api/user/authentication</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Authorization:Basic xxxxJD124xxxGFxxxSDF</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Content-Type: application/json;charset=UTF-8</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Get-details-of-cube"><a href="#Get-details-of-cube" class="headerlink" title="Get details of cube."></a>Get details of cube.</h5><ul><li>GET <a href="http://localhost:7070/kylin/api/cubes?cubeName={cube_name}&amp;limit=15&amp;offset=0" target="_blank" rel="noopener">http://localhost:7070/kylin/api/cubes?cubeName={cube_name}&amp;limit=15&amp;offset=0</a></li><li>Client can find cube segment date ranges in returned cube detail.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     GET http://localhost:7070/kylin/api/cubes?cubeName=test_kylin_cube_with_slr&amp;<span class="built_in">limit</span>=15&amp;offset=0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Authorization:Basic xxxxJD124xxxGFxxxSDF</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Content-Type: application/json;charset=UTF-8</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Then-submit-a-build-job-of-the-cube"><a href="#Then-submit-a-build-job-of-the-cube" class="headerlink" title="Then submit a build job of the cube."></a>Then submit a build job of the cube.</h5><ul><li>PUT <a href="http://localhost:7070/kylin/api/cubes/{cube_name}/rebuild" target="_blank" rel="noopener">http://localhost:7070/kylin/api/cubes/{cube_name}/rebuild</a></li><li>For put request body detail please refer to Build Cube API.<ul><li>startTime and endTime should be utc timestamp.</li><li>buildType can be BUILD ,MERGE or REFRESH. BUILD is for building a new segment, REFRESH for refreshing an existing segment. MERGE is for merging multiple existing segments into one bigger segment.</li></ul></li><li>This method will return a new created job instance, whose uuid is the unique id of job to track job status.<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> PUT http://localhost:7070/kylin/api/cubes/test_kylin_cube_with_slr/rebuild</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Authorization:Basic xxxxJD124xxxGFxxxSDF</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Content-Type: application/json;charset=UTF-8</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">"startTime"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">"endTime"</span>: 1388563200000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">"buildType"</span>: <span class="string">"BUILD"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Track-job-status"><a href="#Track-job-status" class="headerlink" title="Track job status."></a>Track job status.</h5><ul><li>GET <a href="http://localhost:7070/kylin/api/jobs/{job_uuid}" target="_blank" rel="noopener">http://localhost:7070/kylin/api/jobs/{job_uuid}</a></li><li><p>Returned job_status represents current status of job.</p><h5 id="If-the-job-got-errors-you-can-resume-it"><a href="#If-the-job-got-errors-you-can-resume-it" class="headerlink" title="If the job got errors, you can resume it."></a>If the job got errors, you can resume it.</h5></li><li><p>PUT <a href="http://localhost:7070/kylin/api/jobs/{job_uuid}/resume" target="_blank" rel="noopener">http://localhost:7070/kylin/api/jobs/{job_uuid}/resume</a></p></li></ul><h4 id="Use-RESTful-API-in-Javascript"><a href="#Use-RESTful-API-in-Javascript" class="headerlink" title="Use RESTful API in Javascript"></a>Use RESTful API in Javascript</h4><p>Kylin security is based on basic access authorization, if you want to use API in your javascript, you need to add authorization info in http headers.</p><h5 id="Example-on-Query-API"><a href="#Example-on-Query-API" class="headerlink" title="Example on Query API."></a>Example on Query API.</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     $.ajaxSetup(&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       headers: &#123; <span class="string">'Authorization'</span>: <span class="string">"Basic eWFu**********X***ZA=="</span>, <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span> &#125; // use your own authorization code here</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     var request = $.ajax(&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        url: <span class="string">"http://hostname/kylin/api/query"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="built_in">type</span>: <span class="string">"POST"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        data: <span class="string">'&#123;"sql":"select count(*) from SUMMARY;","offset":0,"limit":50000,"acceptPartial":true,"project":"test"&#125;'</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        dataType: <span class="string">"json"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     request.done(<span class="keyword">function</span>( msg ) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        alert(msg);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     request.fail(<span class="keyword">function</span>( jqXHR, textStatus ) &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        alert( <span class="string">"Request failed: "</span> + textStatus );</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;);</span></span><br></pre></td></tr></table></figure><h5 id="Keypoints"><a href="#Keypoints" class="headerlink" title="Keypoints"></a>Keypoints</h5><ul><li>add basic access authorization info in http headers.</li><li>use right ajax type and data synax.<h5 id="Basic-access-authorization"><a href="#Basic-access-authorization" class="headerlink" title="Basic access authorization"></a>Basic access authorization</h5></li><li>For what is basic access authorization, refer to <a href="http://en.wikipedia.org/wiki/Basic_access_authentication" target="_blank" rel="noopener">Wikipedia Page</a>.</li><li>How to generate your authorization code (download and import “jquery.base64.js” from <a href="https://github.com/yckart/jquery.base64.js" target="_blank" rel="noopener">https://github.com/yckart/jquery.base64.js</a>).<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     var authorizationCode = $.base64(<span class="string">'encode'</span>, <span class="string">'NT_USERNAME'</span> + <span class="string">":"</span> + <span class="string">'NT_PASSWORD'</span>);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     $.ajaxSetup(&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        headers: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">'Authorization'</span>: <span class="string">"Basic "</span> + authorizationCode,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">'Content-Type'</span>: <span class="string">'application/json;charset=utf-8'</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;);</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="Use-RESTful-API"><a href="#Use-RESTful-API" class="headerlink" title="Use RESTful API"></a>Use RESTful API</h4><h5 id="Authentication-2"><a href="#Authentication-2" class="headerlink" title="Authentication"></a>Authentication</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     POST /user/authentication</span></span><br></pre></td></tr></table></figure><h6 id="Request-Header"><a href="#Request-Header" class="headerlink" title="Request Header"></a>Request Header</h6><p>Authorization data encoded by basic auth is needed in the header, such as:<br>Authorization:Basic {data}</p><h6 id="Response-Body"><a href="#Response-Body" class="headerlink" title="Response Body"></a>Response Body</h6><ul><li>userDetails - Defined authorities and status of current user.</li></ul><h6 id="Response-Sample"><a href="#Response-Sample" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    <span class="string">"userDetails"</span>:&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"password"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"username"</span>:<span class="string">"sample"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"authorities"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">"authority"</span>:<span class="string">"ROLE_ANALYST"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="string">"authority"</span>:<span class="string">"ROLE_MODELER"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"accountNonExpired"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"accountNonLocked"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"credentialsNonExpired"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   <span class="string">"enabled"</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &#125;</span></span><br></pre></td></tr></table></figure><p>Example with curl:<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     curl -c /path/<span class="keyword">to</span>/cookiefile.txt -X POST -H <span class="string">"Authorization: Basic XXXXXXXXX"</span> -H 'Content-Type: application/json' http://<span class="variable">&lt;host&gt;</span>:<span class="variable">&lt;port&gt;</span>/kylin/api/<span class="keyword">user</span>/authentication</span><br></pre></td></tr></table></figure></p><p>If login successfully, the JSESSIONID will be saved into the cookie file; In the subsequent http requests, attach the cookie, for example:<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     curl -b <span class="regexp">/path/</span>to<span class="regexp">/cookiefile.txt -X PUT -H 'Content-Type: application/</span>json<span class="string">' -d '</span>&#123;<span class="string">"startTime"</span>:<span class="string">'1423526400000'</span>, <span class="string">"endTime"</span>:<span class="string">'1423526400'</span>, <span class="string">"buildType"</span>:<span class="string">"BUILD"</span>&#125;<span class="string">' http://&lt;host&gt;:&lt;port&gt;/kylin/api/cubes/your_cube/rebuild</span></span><br></pre></td></tr></table></figure></p><h5 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     POST /query</span></span><br></pre></td></tr></table></figure><h6 id="Request-Body"><a href="#Request-Body" class="headerlink" title="Request Body"></a>Request Body</h6><ul><li>sql - required string The text of sql statement.</li><li>offset - optional int Query offset. If offset is set in sql, curIndex will be ignored.</li><li>limit - optional int Query limit. If limit is set in sql, perPage will be ignored.</li><li>acceptPartial - optional bool Whether accept a partial result or not, default be “false”. Set to “false” for production use.</li><li>project - optional string Project to perform query. Default value is ‘DEFAULT’.<h6 id="Request-Sample"><a href="#Request-Sample" class="headerlink" title="Request Sample"></a>Request Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"sql"</span>:<span class="string">"select * from TEST_KYLIN_FACT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"offset"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"limit"</span>:50000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"acceptPartial"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"project"</span>:<span class="string">"DEFAULT"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h6 id="Response-Body-1"><a href="#Response-Body-1" class="headerlink" title="Response Body"></a>Response Body</h6><ul><li>columnMetas - Column metadata information of result set.</li><li>results - Data set of result.</li><li>cube - Cube used for this query.</li><li>affectedRowCount - Count of affected row by this sql statement.</li><li>isException - Whether this response is an exception.</li><li>ExceptionMessage - Message content of the exception.</li><li>Duration - Time cost of this query</li><li>Partial - Whether the response is a partial result or not. Decided by acceptPartial of request.</li></ul><h6 id="Response-Sample-1"><a href="#Response-Sample-1" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"columnMetas"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"isNullable"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"displaySize"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"label"</span>:<span class="string">"CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"schemaName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"catelogName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"tableName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"precision"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"scale"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"columnType"</span>:91,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"columnTypeName"</span>:<span class="string">"DATE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"readOnly"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"writable"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"caseSensitive"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"searchable"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"currency"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"signed"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"autoIncrement"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"definitelyWritable"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"isNullable"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"displaySize"</span>:10,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"label"</span>:<span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"schemaName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"catelogName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"tableName"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"precision"</span>:10,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"scale"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"columnType"</span>:4,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"columnTypeName"</span>:<span class="string">"INTEGER"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"readOnly"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"writable"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"caseSensitive"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"searchable"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"currency"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"signed"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"autoIncrement"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"definitelyWritable"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"results"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"2013-08-07"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"32996"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"15"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"15"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"Auction"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"10000000"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"49.048952730908745"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"49.048952730908745"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"49.048952730908745"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"1"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"2013-08-07"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"43398"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"0"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"14"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"ABIN"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"10000633"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"85.78317064220418"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"85.78317064220418"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"85.78317064220418"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"1"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"cube"</span>:<span class="string">"test_kylin_cube_with_slr_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"affectedRowCount"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"isException"</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"exceptionMessage"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"duration"</span>:3451,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"partial"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="List-queryable-tables"><a href="#List-queryable-tables" class="headerlink" title="List queryable tables"></a>List queryable tables</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">GET</span> /tables_and_columns</span><br></pre></td></tr></table></figure><h6 id="Request-Parameters"><a href="#Request-Parameters" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>project - required string The project to load tables</li></ul><h6 id="Response-Sample-2"><a href="#Response-Sample-2" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"columns"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_NAME"</span>:<span class="string">"TEST_CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_SCHEM"</span>:<span class="string">"EDW"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_NAME"</span>:<span class="string">"CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"data_TYPE"</span>:91,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"nullable"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_SIZE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"buffer_LENGTH"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"decimal_DIGITS"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"num_PREC_RADIX"</span>:10,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_DEF"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"sql_DATA_TYPE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"sql_DATETIME_SUB"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"char_OCTET_LENGTH"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"ordinal_POSITION"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"is_NULLABLE"</span>:<span class="string">"YES"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_CATLOG"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_SCHEMA"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_TABLE"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"source_DATA_TYPE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"iS_AUTOINCREMENT"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_CAT"</span>:<span class="string">"defaultCatalog"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"remarks"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type_NAME"</span>:<span class="string">"DATE"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_NAME"</span>:<span class="string">"TEST_CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_SCHEM"</span>:<span class="string">"EDW"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_NAME"</span>:<span class="string">"WEEK_BEG_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"data_TYPE"</span>:91,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"nullable"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_SIZE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"buffer_LENGTH"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"decimal_DIGITS"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"num_PREC_RADIX"</span>:10,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_DEF"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"sql_DATA_TYPE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"sql_DATETIME_SUB"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"char_OCTET_LENGTH"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"ordinal_POSITION"</span>:2,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"is_NULLABLE"</span>:<span class="string">"YES"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_CATLOG"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_SCHEMA"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"scope_TABLE"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"source_DATA_TYPE"</span>:-1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"iS_AUTOINCREMENT"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table_CAT"</span>:<span class="string">"defaultCatalog"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"remarks"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type_NAME"</span>:<span class="string">"DATE"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"table_NAME"</span>:<span class="string">"TEST_CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"table_SCHEM"</span>:<span class="string">"EDW"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"ref_GENERATION"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"self_REFERENCING_COL_NAME"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"type_SCHEM"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"table_TYPE"</span>:<span class="string">"TABLE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"table_CAT"</span>:<span class="string">"defaultCatalog"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"remarks"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"type_CAT"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"type_NAME"</span>:null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br></pre></td></tr></table></figure><h5 id="List-cubes"><a href="#List-cubes" class="headerlink" title="List cubes"></a>List cubes</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">GET</span> /cubes</span><br></pre></td></tr></table></figure><h6 id="Request-Parameters-1"><a href="#Request-Parameters-1" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>offset - required int Offset used by pagination</li><li>limit - required int Cubes per page.</li><li>cubeName - optional string Keyword for cube names. To find cubes whose name contains this keyword.</li><li>projectName - optional string Project name.</li></ul><h6 id="Response-Sample-3"><a href="#Response-Sample-3" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"uuid"</span>:<span class="string">"1eaca32a-a33e-4b69-83dd-0bb8b1f8c53b"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"last_modified"</span>:1407831634847,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"name"</span>:<span class="string">"test_kylin_cube_with_slr_empty"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"owner"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"version"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"descriptor"</span>:<span class="string">"test_kylin_cube_with_slr_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"cost"</span>:50,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"status"</span>:<span class="string">"DISABLED"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"segments"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"create_time"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"source_records_count"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"source_records_size"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       <span class="string">"size_kb"</span>:0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br></pre></td></tr></table></figure><h5 id="Get-cube"><a href="#Get-cube" class="headerlink" title="Get cube"></a>Get cube</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">GET</span> /cubes/&#123;cubeName&#125;</span><br></pre></td></tr></table></figure><h6 id="Path-Variable"><a href="#Path-Variable" class="headerlink" title="Path Variable"></a>Path Variable</h6><ul><li>cubeName - required string Cube name to find.<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">Get</span> cube descriptor</span><br><span class="line">&gt;     <span class="builtin-name">GET</span> /cube_desc/&#123;cubeName&#125;</span><br><span class="line">&gt;     <span class="builtin-name">Get</span> descriptor <span class="keyword">for</span> specified cube instance.</span><br></pre></td></tr></table></figure></li></ul><h6 id="Path-Variable-1"><a href="#Path-Variable-1" class="headerlink" title="Path Variable"></a>Path Variable</h6><ul><li>cubeName - required string Cube name.</li></ul><h6 id="Response-Sample-4"><a href="#Response-Sample-4" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"uuid"</span>: <span class="string">"a24ca905-1fc6-4f67-985c-38fa5aeafd92"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"test_kylin_cube_with_slr_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"description"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dimensions"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"EDW.TEST_CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"WEEK_BEG_DT"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"CATEGORY"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"DEFAULT.TEST_CATEGORY_GROUPINGS"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"USER_DEFINED_FIELD1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"USER_DEFINED_FIELD3"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"UPD_DATE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"UPD_USER"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 2,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"CATEGORY_HIERARCHY"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"DEFAULT.TEST_CATEGORY_GROUPINGS"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"META_CATEG_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CATEG_LVL2_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CATEG_LVL3_NAME"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 3,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"LSTG_FORMAT_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"DEFAULT.TEST_KYLIN_FACT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"LSTG_FORMAT_NAME"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 4,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"SITE_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"EDW.TEST_SITES"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"SITE_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CRE_USER"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 5,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"SELLER_TYPE_CD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"EDW.TEST_SELLER_TYPE_DIM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"SELLER_TYPE_DESC"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 6,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"SELLER_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"DEFAULT.TEST_KYLIN_FACT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"SELLER_ID"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"derived"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hierarchy"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"measures"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"GMV_SUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"function"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"expression"</span>: <span class="string">"SUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"parameter"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"column"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"value"</span>: <span class="string">"PRICE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"next_parameter"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"returntype"</span>: <span class="string">"decimal(19,4)"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dependent_measure_ref"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 2,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"GMV_MIN"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"function"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"expression"</span>: <span class="string">"MIN"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"parameter"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"column"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"value"</span>: <span class="string">"PRICE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"next_parameter"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"returntype"</span>: <span class="string">"decimal(19,4)"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dependent_measure_ref"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 3,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"GMV_MAX"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"function"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"expression"</span>: <span class="string">"MAX"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"parameter"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"column"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"value"</span>: <span class="string">"PRICE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"next_parameter"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"returntype"</span>: <span class="string">"decimal(19,4)"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dependent_measure_ref"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 4,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"TRANS_CNT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"function"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"expression"</span>: <span class="string">"COUNT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"parameter"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"constant"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"value"</span>: <span class="string">"1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"next_parameter"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"returntype"</span>: <span class="string">"bigint"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dependent_measure_ref"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"id"</span>: 5,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"ITEM_COUNT_SUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"function"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"expression"</span>: <span class="string">"SUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"parameter"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"column"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"value"</span>: <span class="string">"ITEM_COUNT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"next_parameter"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"returntype"</span>: <span class="string">"bigint"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dependent_measure_ref"</span>: null</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"rowkey"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"rowkey_columns"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"SELLER_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 18,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"META_CATEG_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"CATEG_LVL2_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"CATEG_LVL3_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"LSTG_FORMAT_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 12,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"LSTG_SITE_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column"</span>: <span class="string">"SLR_SEGMENT_CD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"length"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"dictionary"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"mandatory"</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"aggregation_groups"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"META_CATEG_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CATEG_LVL2_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CATEG_LVL3_NAME"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CAL_DT"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"signature"</span>: <span class="string">"lsLAl2jL62ZApmOLZqWU3g=="</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"last_modified"</span>: 1445850327000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"model_name"</span>: <span class="string">"test_kylin_with_slr_model_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"null_string"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"hbase_mapping"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"column_family"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"F1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"columns"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"qualifier"</span>: <span class="string">"M"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"measure_refs"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"GMV_SUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"GMV_MIN"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"GMV_MAX"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TRANS_CNT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"ITEM_COUNT_SUM"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"notify_list"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"auto_merge_time_ranges"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"retention_range"</span>: 0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br></pre></td></tr></table></figure><h5 id="Get-data-model"><a href="#Get-data-model" class="headerlink" title="Get data model"></a>Get data model</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">GET</span> /model/&#123;modelName&#125;</span><br></pre></td></tr></table></figure><h6 id="Path-Variable-2"><a href="#Path-Variable-2" class="headerlink" title="Path Variable"></a>Path Variable</h6><ul><li>modelName - required string Data model name, by default it should be the same with cube name.</li></ul><h6 id="Response-Sample-5"><a href="#Response-Sample-5" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"uuid"</span>: <span class="string">"ff527b94-f860-44c3-8452-93b17774c647"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"name"</span>: <span class="string">"test_kylin_with_slr_model_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"lookups"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"EDW.TEST_CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"join"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"inner"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"primary_key"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CAL_DT"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"foreign_key"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"CAL_DT"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"table"</span>: <span class="string">"DEFAULT.TEST_CATEGORY_GROUPINGS"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"join"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"type"</span>: <span class="string">"inner"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"primary_key"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"SITE_ID"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"foreign_key"</span>: [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"LEAF_CATEG_ID"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"LSTG_SITE_ID"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"capacity"</span>: <span class="string">"MEDIUM"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"last_modified"</span>: 1442372116000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"fact_table"</span>: <span class="string">"DEFAULT.TEST_KYLIN_FACT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"filter_condition"</span>: null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_desc"</span>: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_date_column"</span>: <span class="string">"DEFAULT.TEST_KYLIN_FACT.CAL_DT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_date_start"</span>: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_date_format"</span>: <span class="string">"yyyy-MM-dd"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_type"</span>: <span class="string">"APPEND"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partition_condition_builder"</span>: <span class="string">"org.apache.kylin.metadata.model.PartitionDesc<span class="variable">$DefaultPartitionConditionBuilder</span>"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Build-cube"><a href="#Build-cube" class="headerlink" title="Build cube"></a>Build cube</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     PUT <span class="string">/cubes/</span>&#123;cubeName&#125;<span class="string">/rebuild</span></span><br></pre></td></tr></table></figure><h6 id="Path-Variable-3"><a href="#Path-Variable-3" class="headerlink" title="Path Variable"></a>Path Variable</h6><ul><li>cubeName - required string Cube name.</li></ul><h6 id="Request-Body-1"><a href="#Request-Body-1" class="headerlink" title="Request Body"></a>Request Body</h6><ul><li>startTime - required long Start timestamp of data to build, e.g. 1388563200000 for 2014-1-1</li><li>endTime - required long End timestamp of data to build</li><li>buildType - required string Supported build type: ‘BUILD’, ‘MERGE’, ‘REFRESH’</li></ul><h6 id="Response-Sample-6"><a href="#Response-Sample-6" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"uuid"</span>:<span class="string">"c143e0e4-ac5f-434d-acf3-46b0d15e3dc6"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"last_modified"</span>:1407908916705,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"name"</span>:<span class="string">"test_kylin_cube_with_slr_empty - 19700101000000_20140731160000 - BUILD - PDT 2014-08-12 22:48:36"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"type"</span>:<span class="string">"BUILD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"duration"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"related_cube"</span>:<span class="string">"test_kylin_cube_with_slr_empty"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"related_segment"</span>:<span class="string">"19700101000000_20140731160000"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"mr_waiting"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"steps"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Create Intermediate Flat Hive Table"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">"hive -e \"DROP TABLE IF EXISTS kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6;\nCREATE EXTERNAL TABLE IF NOT EXISTS kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6\n(\nCAL_DT date\n,LEAF_CATEG_ID int\n,LSTG_SITE_ID int\n,META_CATEG_NAME string\n,CATEG_LVL2_NAME string\n,CATEG_LVL3_NAME string\n,LSTG_FORMAT_NAME string\n,SLR_SEGMENT_CD smallint\n,SELLER_ID bigint\n,PRICE decimal\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY '\\177'\nSTORED AS SEQUENCEFILE\nLOCATION '/tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6';\nSET mapreduce.job.split.metainfo.maxsize=-1;\nSET mapred.compress.map.output=true;\nSET mapred.map.output.compression.codec=com.hadoop.compression.lzo.LzoCodec;\nSET mapred.output.compress=true;\nSET mapred.output.compression.codec=com.hadoop.compression.lzo.LzoCodec;\nSET mapred.output.compression.type=BLOCK;\nSET mapreduce.job.max.split.locations=2000;\nSET hive.exec.compress.output=true;\nSET hive.auto.convert.join.noconditionaltask = true;\nSET hive.auto.convert.join.noconditionaltask.size = 300000000;\nINSERT OVERWRITE TABLE kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6\nSELECT\nTEST_KYLIN_FACT.CAL_DT\n,TEST_KYLIN_FACT.LEAF_CATEG_ID\n,TEST_KYLIN_FACT.LSTG_SITE_ID\n,TEST_CATEGORY_GROUPINGS.META_CATEG_NAME\n,TEST_CATEGORY_GROUPINGS.CATEG_LVL2_NAME\n,TEST_CATEGORY_GROUPINGS.CATEG_LVL3_NAME\n,TEST_KYLIN_FACT.LSTG_FORMAT_NAME\n,TEST_KYLIN_FACT.SLR_SEGMENT_CD\n,TEST_KYLIN_FACT.SELLER_ID\n,TEST_KYLIN_FACT.PRICE\nFROM TEST_KYLIN_FACT\nINNER JOIN TEST_CAL_DT\nON TEST_KYLIN_FACT.CAL_DT = TEST_CAL_DT.CAL_DT\nINNER JOIN TEST_CATEGORY_GROUPINGS\nON TEST_KYLIN_FACT.LEAF_CATEG_ID = TEST_CATEGORY_GROUPINGS.LEAF_CATEG_ID AND TEST_KYLIN_FACT.LSTG_SITE_ID = TEST_CATEGORY_GROUPINGS.SITE_ID\nINNER JOIN TEST_SITES\nON TEST_KYLIN_FACT.LSTG_SITE_ID = TEST_SITES.SITE_ID\nINNER JOIN TEST_SELLER_TYPE_DIM\nON TEST_KYLIN_FACT.SLR_SEGMENT_CD = TEST_SELLER_TYPE_DIM.SELLER_TYPE_CD\nWHERE (test_kylin_fact.cal_dt &lt; '2014-07-31 16:00:00')\n;\n\""</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"SHELL_CMD_HADOOP"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Extract Fact Table Distinct Columns"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">" -conf C:/kylin/Kylin/server/src/main/resources/hadoop_job_conf_medium.xml -cubename test_kylin_cube_with_slr_empty -input /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6 -output /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/test_kylin_cube_with_slr_empty/fact_distinct_columns -jobname Kylin_Fact_Distinct_Columns_test_kylin_cube_with_slr_empty_Step_1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"JAVA_CMD_HADOOP_FACTDISTINCT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Load HFile to HBase Table"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:12,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">" -input /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/test_kylin_cube_with_slr_empty/hfile/ -htablename KYLIN-CUBE-TEST_KYLIN_CUBE_WITH_SLR_EMPTY-19700101000000_20140731160000_11BB4326-5975-4358-804C-70D53642E03A -cubename test_kylin_cube_with_slr_empty"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"JAVA_CMD_HADOOP_NO_MR_BULKLOAD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"job_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"progress"</span>:0.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Enable-Cube"><a href="#Enable-Cube" class="headerlink" title="Enable Cube"></a>Enable Cube</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     PUT /cubes/&#123;cubeName&#125;/<span class="built_in">enable</span></span></span><br></pre></td></tr></table></figure><h6 id="Path-variable"><a href="#Path-variable" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>cubeName - required string Cube name.</li></ul><h6 id="Response-Sample-7"><a href="#Response-Sample-7" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"uuid"</span>:<span class="string">"1eaca32a-a33e-4b69-83dd-0bb8b1f8c53b"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"last_modified"</span>:1407909046305,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"name"</span>:<span class="string">"test_kylin_cube_with_slr_ready"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"owner"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"version"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"descriptor"</span>:<span class="string">"test_kylin_cube_with_slr_desc"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"cost"</span>:50,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"status"</span>:<span class="string">"ACTIVE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"segments"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"19700101000000_20140531160000"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"storage_location_identifier"</span>:<span class="string">"KYLIN-CUBE-TEST_KYLIN_CUBE_WITH_SLR_READY-19700101000000_20140531160000_BF043D2D-9A4A-45E9-AA59-5A17D3F34A50"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"date_range_start"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"date_range_end"</span>:1401552000000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"status"</span>:<span class="string">"READY"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"size_kb"</span>:4758,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"source_records"</span>:6000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"source_records_size"</span>:620356,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"last_build_time"</span>:1407832663227,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"last_build_job_id"</span>:<span class="string">"2c7a2b63-b052-4a51-8b09-0c24b5792cda"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"binary_signature"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"dictionaries"</span>:&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_CATEGORY_GROUPINGS/CATEG_LVL2_NAME"</span>:<span class="string">"/dict/TEST_CATEGORY_GROUPINGS/CATEG_LVL2_NAME/16d8185c-ee6b-4f8c-a919-756d9809f937.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_KYLIN_FACT/LSTG_SITE_ID"</span>:<span class="string">"/dict/TEST_SITES/SITE_ID/0bec6bb3-1b0d-469c-8289-b8c4ca5d5001.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_KYLIN_FACT/SLR_SEGMENT_CD"</span>:<span class="string">"/dict/TEST_SELLER_TYPE_DIM/SELLER_TYPE_CD/0c5d77ec-316b-47e0-ba9a-0616be890ad6.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_KYLIN_FACT/CAL_DT"</span>:<span class="string">"/dict/PREDEFINED/date(yyyy-mm-dd)/64ac4f82-f2af-476e-85b9-f0805001014e.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_CATEGORY_GROUPINGS/CATEG_LVL3_NAME"</span>:<span class="string">"/dict/TEST_CATEGORY_GROUPINGS/CATEG_LVL3_NAME/270fbfb0-281c-4602-8413-2970a7439c47.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_KYLIN_FACT/LEAF_CATEG_ID"</span>:<span class="string">"/dict/TEST_CATEGORY_GROUPINGS/LEAF_CATEG_ID/2602386c-debb-4968-8d2f-b52b8215e385.dict"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_CATEGORY_GROUPINGS/META_CATEG_NAME"</span>:<span class="string">"/dict/TEST_CATEGORY_GROUPINGS/META_CATEG_NAME/0410d2c4-4686-40bc-ba14-170042a2de94.dict"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"snapshots"</span>:&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_CAL_DT"</span>:<span class="string">"/table_snapshot/TEST_CAL_DT.csv/8f7cfc8a-020d-4019-b419-3c6deb0ffaa0.snapshot"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_SELLER_TYPE_DIM"</span>:<span class="string">"/table_snapshot/TEST_SELLER_TYPE_DIM.csv/c60fd05e-ac94-4016-9255-96521b273b81.snapshot"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_CATEGORY_GROUPINGS"</span>:<span class="string">"/table_snapshot/TEST_CATEGORY_GROUPINGS.csv/363f4a59-b725-4459-826d-3188bde6a971.snapshot"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"TEST_SITES"</span>:<span class="string">"/table_snapshot/TEST_SITES.csv/78e0aecc-3ec6-4406-b86e-bac4b10ea63b.snapshot"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"create_time"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"source_records_count"</span>:6000,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"source_records_size"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"size_kb"</span>:4758</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Disable-Cube"><a href="#Disable-Cube" class="headerlink" title="Disable Cube"></a>Disable Cube</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     PUT /cubes/&#123;cubeName&#125;/<span class="built_in">disable</span></span></span><br></pre></td></tr></table></figure><h6 id="Path-variable-1"><a href="#Path-variable-1" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>cubeName - required string Cube name.<h6 id="Response-Sample-8"><a href="#Response-Sample-8" class="headerlink" title="Response Sample"></a>Response Sample</h6></li></ul><p>(Same as “Enable Cube”)</p><h5 id="Purge-Cube"><a href="#Purge-Cube" class="headerlink" title="Purge Cube"></a>Purge Cube</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     PUT <span class="string">/cubes/</span>&#123;cubeName&#125;<span class="string">/Purge</span></span><br></pre></td></tr></table></figure><h6 id="Path-variable-2"><a href="#Path-variable-2" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>cubeName - required string Cube name.<h6 id="Response-Sample-9"><a href="#Response-Sample-9" class="headerlink" title="Response Sample"></a>Response Sample</h6></li></ul><p>(Same as “Enable Cube”)</p><h5 id="Resume-Job"><a href="#Resume-Job" class="headerlink" title="Resume Job"></a>Resume Job</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     PUT /<span class="built_in">jobs</span>/&#123;jobId&#125;/resume</span></span><br></pre></td></tr></table></figure><h6 id="Path-variable-3"><a href="#Path-variable-3" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>jobId - required string Job id.</li></ul><h6 id="Response-Sample-10"><a href="#Response-Sample-10" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"uuid"</span>:<span class="string">"c143e0e4-ac5f-434d-acf3-46b0d15e3dc6"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"last_modified"</span>:1407908916705,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"name"</span>:<span class="string">"test_kylin_cube_with_slr_empty - 19700101000000_20140731160000 - BUILD - PDT 2014-08-12 22:48:36"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"type"</span>:<span class="string">"BUILD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"duration"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"related_cube"</span>:<span class="string">"test_kylin_cube_with_slr_empty"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"related_segment"</span>:<span class="string">"19700101000000_20140731160000"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"mr_waiting"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"steps"</span>:[</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Create Intermediate Flat Hive Table"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">"hive -e \"DROP TABLE IF EXISTS kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6;\nCREATE EXTERNAL TABLE IF NOT EXISTS kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6\n(\nCAL_DT date\n,LEAF_CATEG_ID int\n,LSTG_SITE_ID int\n,META_CATEG_NAME string\n,CATEG_LVL2_NAME string\n,CATEG_LVL3_NAME string\n,LSTG_FORMAT_NAME string\n,SLR_SEGMENT_CD smallint\n,SELLER_ID bigint\n,PRICE decimal\n)\nROW FORMAT DELIMITED FIELDS TERMINATED BY '\\177'\nSTORED AS SEQUENCEFILE\nLOCATION '/tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6';\nSET mapreduce.job.split.metainfo.maxsize=-1;\nSET mapred.compress.map.output=true;\nSET mapred.map.output.compression.codec=com.hadoop.compression.lzo.LzoCodec;\nSET mapred.output.compress=true;\nSET mapred.output.compression.codec=com.hadoop.compression.lzo.LzoCodec;\nSET mapred.output.compression.type=BLOCK;\nSET mapreduce.job.max.split.locations=2000;\nSET hive.exec.compress.output=true;\nSET hive.auto.convert.join.noconditionaltask = true;\nSET hive.auto.convert.join.noconditionaltask.size = 300000000;\nINSERT OVERWRITE TABLE kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6\nSELECT\nTEST_KYLIN_FACT.CAL_DT\n,TEST_KYLIN_FACT.LEAF_CATEG_ID\n,TEST_KYLIN_FACT.LSTG_SITE_ID\n,TEST_CATEGORY_GROUPINGS.META_CATEG_NAME\n,TEST_CATEGORY_GROUPINGS.CATEG_LVL2_NAME\n,TEST_CATEGORY_GROUPINGS.CATEG_LVL3_NAME\n,TEST_KYLIN_FACT.LSTG_FORMAT_NAME\n,TEST_KYLIN_FACT.SLR_SEGMENT_CD\n,TEST_KYLIN_FACT.SELLER_ID\n,TEST_KYLIN_FACT.PRICE\nFROM TEST_KYLIN_FACT\nINNER JOIN TEST_CAL_DT\nON TEST_KYLIN_FACT.CAL_DT = TEST_CAL_DT.CAL_DT\nINNER JOIN TEST_CATEGORY_GROUPINGS\nON TEST_KYLIN_FACT.LEAF_CATEG_ID = TEST_CATEGORY_GROUPINGS.LEAF_CATEG_ID AND TEST_KYLIN_FACT.LSTG_SITE_ID = TEST_CATEGORY_GROUPINGS.SITE_ID\nINNER JOIN TEST_SITES\nON TEST_KYLIN_FACT.LSTG_SITE_ID = TEST_SITES.SITE_ID\nINNER JOIN TEST_SELLER_TYPE_DIM\nON TEST_KYLIN_FACT.SLR_SEGMENT_CD = TEST_SELLER_TYPE_DIM.SELLER_TYPE_CD\nWHERE (test_kylin_fact.cal_dt &lt; '2014-07-31 16:00:00')\n;\n\""</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"SHELL_CMD_HADOOP"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Extract Fact Table Distinct Columns"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:1,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">" -conf C:/kylin/Kylin/server/src/main/resources/hadoop_job_conf_medium.xml -cubename test_kylin_cube_with_slr_empty -input /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/kylin_intermediate_test_kylin_cube_with_slr_desc_19700101000000_20140731160000_c143e0e4_ac5f_434d_acf3_46b0d15e3dc6 -output /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/test_kylin_cube_with_slr_empty/fact_distinct_columns -jobname Kylin_Fact_Distinct_Columns_test_kylin_cube_with_slr_empty_Step_1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"JAVA_CMD_HADOOP_FACTDISTINCT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interruptCmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"name"</span>:<span class="string">"Load HFile to HBase Table"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"sequence_id"</span>:12,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_cmd"</span>:<span class="string">" -input /tmp/kylin-c143e0e4-ac5f-434d-acf3-46b0d15e3dc6/test_kylin_cube_with_slr_empty/hfile/ -htablename KYLIN-CUBE-TEST_KYLIN_CUBE_WITH_SLR_EMPTY-19700101000000_20140731160000_11BB4326-5975-4358-804C-70D53642E03A -cubename test_kylin_cube_with_slr_empty"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"interrupt_cmd"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_start_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_end_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"exec_wait_time"</span>:0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"step_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"cmd_type"</span>:<span class="string">"JAVA_CMD_HADOOP_NO_MR_BULKLOAD"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"info"</span>:null,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      <span class="string">"run_async"</span>:<span class="literal">false</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        ],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"job_status"</span>:<span class="string">"PENDING"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"progress"</span>:0.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Discard-Job"><a href="#Discard-Job" class="headerlink" title="Discard Job"></a>Discard Job</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     PUT /<span class="built_in">jobs</span>/&#123;jobId&#125;/cancel</span></span><br></pre></td></tr></table></figure><h6 id="Path-variable-4"><a href="#Path-variable-4" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>jobId - required string Job id.</li></ul><h6 id="Response-Sample-11"><a href="#Response-Sample-11" class="headerlink" title="Response Sample"></a>Response Sample</h6><p>(Same as “Resume job”)</p><h5 id="Get-Job-Status"><a href="#Get-Job-Status" class="headerlink" title="Get Job Status"></a>Get Job Status</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     GET /<span class="built_in">jobs</span>/&#123;jobId&#125;</span></span><br></pre></td></tr></table></figure><h6 id="Path-variable-5"><a href="#Path-variable-5" class="headerlink" title="Path variable"></a>Path variable</h6><ul><li>jobId - required string Job id.<h6 id="Response-Sample-12"><a href="#Response-Sample-12" class="headerlink" title="Response Sample"></a>Response Sample</h6></li></ul><p>(Same as “Resume Job”)</p><h5 id="Get-job-step-output"><a href="#Get-job-step-output" class="headerlink" title="Get job step output"></a>Get job step output</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     GET <span class="string">/jobs/</span>&#123;jobId&#125;<span class="string">/steps/</span>&#123;stepId&#125;<span class="string">/output</span></span><br></pre></td></tr></table></figure><h6 id="Path-Variable-4"><a href="#Path-Variable-4" class="headerlink" title="Path Variable"></a>Path Variable</h6><ul><li>jobId - required string Job id.</li><li>stepId - required string Step id; the step id is composed by jobId with step sequence id; for example, the jobId is “fb479e54-837f-49a2-b457-651fc50be110”, its 3rd step id is “fb479e54-837f-49a2-b457-651fc50be110-3”,<h6 id="Response-Sample-13"><a href="#Response-Sample-13" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">        <span class="string">"cmd_output"</span>:<span class="string">"log string"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Get-Hive-Table"><a href="#Get-Hive-Table" class="headerlink" title="Get Hive Table"></a>Get Hive Table</h5><blockquote><pre><code>GET /tables/{tableName}</code></pre></blockquote><h6 id="Request-Parameters-2"><a href="#Request-Parameters-2" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>tableName - required string table name to find.</li></ul><h6 id="Response-Sample-14"><a href="#Response-Sample-14" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     uuid: <span class="string">"69cc92c0-fc42-4bb9-893f-bd1141c91dbe"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"SAMPLE_07"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     columns: [&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"CODE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"string"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"2"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"DESCRIPTION"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"string"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"3"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"TOTAL_EMP"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"int"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"4"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"SALARY"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"int"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     database: <span class="string">"DEFAULT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     last_modified: 1419330476755</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Get-Hive-Table-Extend-Info"><a href="#Get-Hive-Table-Extend-Info" class="headerlink" title="Get Hive Table (Extend Info)"></a>Get Hive Table (Extend Info)</h5><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="meta">GET</span> /tables/&#123;tableName&#125;/exd-<span class="meta">map</span></span><br></pre></td></tr></table></figure><h6 id="Request-Parameters-3"><a href="#Request-Parameters-3" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>tableName - optional string table name to find.</li></ul><h6 id="Response-Sample-15"><a href="#Response-Sample-15" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"minFileSize"</span>: <span class="string">"46055"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"totalNumberFiles"</span>: <span class="string">"1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"location"</span>: <span class="string">"hdfs://sandbox.hortonworks.com:8020/apps/hive/warehouse/sample_07"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"lastAccessTime"</span>: <span class="string">"1418374103365"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"lastUpdateTime"</span>: <span class="string">"1398176493340"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"columns"</span>: <span class="string">"struct columns &#123; string code, string description, i32 total_emp, i32 salary&#125;"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partitionColumns"</span>: <span class="string">""</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"EXD_STATUS"</span>: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"maxFileSize"</span>: <span class="string">"46055"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"inputformat"</span>: <span class="string">"org.apache.hadoop.mapred.TextInputFormat"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"partitioned"</span>: <span class="string">"false"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"tableName"</span>: <span class="string">"sample_07"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"owner"</span>: <span class="string">"hue"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"totalFileSize"</span>: <span class="string">"46055"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"outputformat"</span>: <span class="string">"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure><h5 id="Get-Hive-Tables"><a href="#Get-Hive-Tables" class="headerlink" title="Get Hive Tables"></a>Get Hive Tables</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="builtin-name">GET</span> /tables</span><br></pre></td></tr></table></figure><h6 id="Request-Parameters-4"><a href="#Request-Parameters-4" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>project- required string will list all tables in the project.</li><li>ext- optional boolean set true to get extend info of table.<h6 id="Response-Sample-16"><a href="#Response-Sample-16" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     [</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     uuid: <span class="string">"53856c96-fe4d-459e-a9dc-c339b1bc3310"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"SAMPLE_08"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     columns: [&#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"CODE"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"string"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"2"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"DESCRIPTION"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"string"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"3"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"TOTAL_EMP"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"int"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;, &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     id: <span class="string">"4"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     name: <span class="string">"SALARY"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     datatype: <span class="string">"int"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     database: <span class="string">"DEFAULT"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     cardinality: &#123;&#125;,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     last_modified: 0,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     exd: &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     minFileSize: <span class="string">"46069"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     totalNumberFiles: <span class="string">"1"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     location: <span class="string">"hdfs://sandbox.hortonworks.com:8020/apps/hive/warehouse/sample_08"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     lastAccessTime: <span class="string">"1398176495945"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     lastUpdateTime: <span class="string">"1398176495981"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     columns: <span class="string">"struct columns &#123; string code, string description, i32 total_emp, i32 salary&#125;"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     partitionColumns: <span class="string">""</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     EXD_STATUS: <span class="string">"true"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     maxFileSize: <span class="string">"46069"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     inputformat: <span class="string">"org.apache.hadoop.mapred.TextInputFormat"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     partitioned: <span class="string">"false"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     tableName: <span class="string">"sample_08"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     owner: <span class="string">"hue"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     totalFileSize: <span class="string">"46069"</span>,</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     outputformat: <span class="string">"org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat"</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">       &#125;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     ]</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Load-Hive-Tables"><a href="#Load-Hive-Tables" class="headerlink" title="Load Hive Tables"></a>Load Hive Tables</h5><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">&gt;     POST /tables/</span><span class="template-variable">&#123;tables&#125;</span><span class="xml">/</span><span class="template-variable">&#123;project&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h6 id="Request-Parameters-5"><a href="#Request-Parameters-5" class="headerlink" title="Request Parameters"></a>Request Parameters</h6><ul><li>tables - required string table names you want to load from hive, separated with comma.</li><li>project - required String the project which the tables will be loaded into.<h6 id="Response-Sample-17"><a href="#Response-Sample-17" class="headerlink" title="Response Sample"></a>Response Sample</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     &#123;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"result.loaded"</span>: [<span class="string">"DEFAULT.SAMPLE_07"</span>],</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     <span class="string">"result.unloaded"</span>: [<span class="string">"sapmle_08"</span>]</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h5 id="Wipe-cache"><a href="#Wipe-cache" class="headerlink" title="Wipe cache"></a>Wipe cache</h5><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;     <span class="type">PUT</span> /cache/&#123;<span class="keyword">type</span>&#125;/&#123;name&#125;/&#123;action&#125;</span><br></pre></td></tr></table></figure><h5 id="Path-variable-6"><a href="#Path-variable-6" class="headerlink" title="Path variable"></a>Path variable</h5><ul><li>type - required string ‘METADATA’ or ‘CUBE’</li><li>name - required string Cache key, e.g the cube name.</li><li>action - required string ‘create’, ‘update’ or ‘drop’</li></ul><h3 id="Web-Interface"><a href="#Web-Interface" class="headerlink" title="Web Interface"></a>Web Interface</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">     Supported Browsers</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Windows: Google Chrome, FireFox</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     Mac: Google Chrome, FireFox, Safari</span></span><br></pre></td></tr></table></figure><h4 id="Access-amp-Login"><a href="#Access-amp-Login" class="headerlink" title="Access &amp; Login"></a>Access &amp; Login</h4><p>Host to access: <a href="http://your_sandbox_ip:7070" target="_blank" rel="noopener">http://your_sandbox_ip:7070</a><br>Login with username/password: ADMIN/KYLI<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/1%20login.png" alt=""></p><h4 id="Available-Hive-Tables-in-Kylin"><a href="#Available-Hive-Tables-in-Kylin" class="headerlink" title="Available Hive Tables in Kylin"></a>Available Hive Tables in Kylin</h4><p>Although Kylin will using SQL as query interface and leverage Hive metadata, kylin will not enable user to query all hive tables since it’s a pre-build OLAP (MOLAP) system so far. To enable Table in Kylin, it will be easy to using “Sync” function to sync up tables from Hive.<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/2%20tables.png" alt=""></p><h4 id="Kylin-OLAP-Cube"><a href="#Kylin-OLAP-Cube" class="headerlink" title="Kylin OLAP Cube"></a>Kylin OLAP Cube</h4><p>Kylin’s OLAP Cubes are pre-calculation datasets from Star Schema Hive tables, Here’s the web management interface for user to explorer, manage all cubes.Go to Cubes Menu, it will list all cubes available in system:<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/3%20cubes.png" alt=""></p><p>To explore more detail about the Cube</p><ul><li><p>Form View:</p><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/4%20form-view.png" alt=""></p></li><li><p>SQL View (Hive Query to read data to generate the cube):<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/5%20sql-view.png" alt=""></p></li><li><p>Visualization (Showing the Star Schema behind of this cube):</p></li></ul><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/6%20visualization.png" alt=""></p><ul><li>Access (Grant user/role privileges, Grant operation only open to Admin in beta):</li></ul><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/7%20access.png" alt=""></p><h4 id="Write-and-Execute-SQL-on-web"><a href="#Write-and-Execute-SQL-on-web" class="headerlink" title="Write and Execute SQL on web"></a>Write and Execute SQL on web</h4><p>Kylin’s web offer a simple query tool for user to run SQL to explorer existing cube, verify result and explorer the result set using #5’s Pivot analysis and visualization</p><p>Query Limit</p><blockquote><ol><li>Only SELECT query be supported</li><li>To avoid huge network traffic from server to client, the scan range’s threshold be set to 1,000,000 in beta.</li><li>SQL can’t found data from cube will not redirect to Hive in beta</li></ol></blockquote><ul><li><p>Go to “Query” menu:</p><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/8%20query.png" alt=""></p></li><li><p>Source Tables:</p></li></ul><p>Browser current available Tables (same structure and metadata as Hive):<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/9%20query-table.png" alt=""></p><ul><li>New Query:</li></ul><p>You can write and execute your query and explorer the result. One query for you reference:<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/10%20query-result.png" alt=""></p><ul><li>Saved Query:</li></ul><p>Associate with user account, you can get saved query from different browsers even machines.<br>Click “Save” in Result area, it will popup for name and description to save current query:</p><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/11%20save-query.png" alt=""></p><p>Click “Saved Queries” to browser all your saved queries, you could direct resubmit it to run or remove it:</p><p><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/11%20save-query-2.png" alt=""></p><ul><li>Query History:</li></ul><p>Only keep the current user’s query history in current bowser, it will require cookie enabled and will lost if you clean up bowser’s cache.Click “Query History” tab, you could directly resubmit any of them to execute again.</p><h4 id="Pivot-Analysis-and-Visualization"><a href="#Pivot-Analysis-and-Visualization" class="headerlink" title="Pivot Analysis and Visualization"></a>Pivot Analysis and Visualization</h4><p>There’s one simple pivot and visualization analysis tool in Kylin’s web for user to explore their query result:</p><ul><li><p>General Information:</p><p>When the query execute success, it will present a success indictor and also a cube’s name which be hit.<br>Also it will present how long this query be executed in backend engine (not cover network traffic from Kylin server to browser):<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/12%20general.png" alt=""></p></li><li><p>Query Result:</p></li></ul><p>It’s easy to order on one column.<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/13%20results.png" alt=""></p><ul><li>Export to CSV File</li></ul><p>Click “Export” button to save current result as CSV file.</p><ul><li>Pivot Table:</li></ul><p>Drag and Drop one or more columns into the header, the result will grouping by such column’s value:<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/14%20drag.png" alt=""></p><ul><li>Visualization:</li></ul><p>Also, the result set will be easy to show with different charts in “Visualization”:</p><p>note: line chart only available when there’s at least one dimension with real “Date” data type of column from Hive Table.</p><p>Bar Chart:<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/15%20bar-chart.png" alt=""></p><p>Pie Chart:<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/16%20pie-chart.png" alt=""></p><p>Line Chart<br><img src="http://kylin.apache.org/images/Kylin-Web-Tutorial/17%20line-chart.png" alt=""></p><h2 id="kylin-Client-Tool-Tutorial"><a href="#kylin-Client-Tool-Tutorial" class="headerlink" title="kylin Client Tool Tutorial"></a>kylin Client Tool Tutorial</h2><blockquote><p>Kylin-client-tool is a tool coded with python, completely based on Kylin’s restful apis.<br>With it, users can easily create Kylin Cubes, timely build cubes, summit/schedule/check/cancel/resume jobs.</p></blockquote><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><ol><li><p>Make sure python2.6/2.7 installed</p></li><li><p>Two python packages apscheduler and requests are needed, run setup.sh to install. For mac users, please runsetup-mac.sh. Or you can install them with setuptools.</p></li></ol><h3 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h3><p>Modify settings/settings.py to set,</p><blockquote><pre><code>KYLIN_USER Kylin’s usernameKYLIN_PASSWORD Kylin’s passwordKYLIN_REST_HOST Kylin’s addressKYLIN_REST_PORT Kylin’s portKYLIN_JOB_MAX_COCURRENT Max concurrent jobs for cube buildingKYLIN_JOB_MAX_RETRY Max failover time after job failed</code></pre></blockquote><h3 id="About-command-lines"><a href="#About-command-lines" class="headerlink" title="About command lines"></a>About command lines</h3><p>This tool is used by command lines, please run python kylin_client_tool.py －h to check for details.</p><h3 id="Cube’s-creation"><a href="#Cube’s-creation" class="headerlink" title="Cube’s creation"></a>Cube’s creation</h3><p>This tool has its own cube definition method, the format is as below,</p><blockquote><pre><code>cube name|fact table name|dimension1,type of dimension1;dimension2,type of dimension2...|measure1,expression of measure1,type of measure1...|settings|filter|settings has options below,no_dictionary Set dimensions not generate dictionaries in “Rowkeys” and their lengthsmandatory_dimension Set mandatory dimensions in “Rowkeys”aggregation_group Set aggregation grouppartition_date_column Set partition date columnpartition_date_start Set partition start dateCases can be found in file cube_def.csv, it does not support cube creation with lookup tableUse -c to create, use -F to specify cube definition file, for instancepython kylin_client_tool.py -c -F cube_def.csv</code></pre></blockquote><h3 id="Build-cube-1"><a href="#Build-cube-1" class="headerlink" title="Build cube"></a>Build cube</h3><h4 id="Build-cube-with-cube-definition-file"><a href="#Build-cube-with-cube-definition-file" class="headerlink" title="Build cube with cube definition file"></a>Build cube with cube definition file</h4><p>Use -b to build, use -F to specify the cube definition file, if “partition date column” specified, use -T to specify the end date(year-month-day), if not specified, it will take current time as end date, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -b -F cube_def.csv -T 2016-03-01</code></pre></blockquote><h4 id="Build-cube-with-file-of-cube-names"><a href="#Build-cube-with-file-of-cube-names" class="headerlink" title="Build cube with file of cube names"></a>Build cube with file of cube names</h4><p>Use -f to specify the file of cube names, each line of the file has one cube name, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -b -f cube_names.csv -T 2016-03-01</code></pre></blockquote><h4 id="Build-cube-with-cube-names"><a href="#Build-cube-with-cube-names" class="headerlink" title="Build cube with cube names"></a>Build cube with cube names</h4><p>Use -C to specify cube names, split with commas, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -b -C client_tool_test1,client_tool_test2 -T 2016-03-01</code></pre></blockquote><h3 id="Job-management"><a href="#Job-management" class="headerlink" title="Job management"></a>Job management</h3><h4 id="Check-jobs’-statuses"><a href="#Check-jobs’-statuses" class="headerlink" title="Check jobs’ statuses"></a>Check jobs’ statuses</h4><p>Use -s to check, use -f to specify file of cube names, use -C to specify cube names, if not specified, it will check all cubes’ statuses. Use -S to specify jobs’ statuses, R for Running, E for Error, F for Finished, D for Discarded, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -s -C kylin_sales_cube -f cube_names.csv -S F</code></pre></blockquote><h4 id="Resume-jobs"><a href="#Resume-jobs" class="headerlink" title="Resume jobs"></a>Resume jobs</h4><p>Use -r to resume jobs, use -f to specify file of cube names, use -C to specify cube names, if not specified, it will reuse all jobs with error status, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -r -C kylin_sales_cube -f cube_names.csv</code></pre></blockquote><h4 id="Cancel-jobs"><a href="#Cancel-jobs" class="headerlink" title="Cancel jobs"></a>Cancel jobs</h4><p>Use -k to cancel jobs, use -f to specify file with cube names, use -C to specify cube names, if not specified, it will cancel all jobs with running or error statuses, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -k -C kylin_sales_cube -f cube_names.csv</code></pre></blockquote><h3 id="Schedule-cubes-building"><a href="#Schedule-cubes-building" class="headerlink" title="Schedule cubes building"></a>Schedule cubes building</h3><h3 id="Build-cube-at-set-intervals"><a href="#Build-cube-at-set-intervals" class="headerlink" title="Build cube at set intervals"></a>Build cube at set intervals</h3><p>On the basis of command of cube building, use -B i to specify the mode of build cube at set intervals, use -O to specify how many hours, for instance,</p><blockquote><pre><code>python kylin_client_tool.py -b -F cube_def.csv -B i -O 1</code></pre></blockquote><p>Build cube at given time</p><p>Use -B t to specify the mode of build cube at given time, use -O to specify the build time, split with commas,for instance,</p><blockquote><pre><code>python kylin_client_tool.py -b -F cube_def.csv -T 2016-03-04 -B t -O 2016,3,1,0,0,0</code></pre></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kylin&quot;&gt;&lt;a href=&quot;#Kylin&quot; class=&quot;headerlink&quot; title=&quot;Kylin&quot;&gt;&lt;/a&gt;Kylin&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://kylin.apache.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache kylin&lt;/a&gt;是一个开源的分布式分析引擎。它通过&lt;a href=&quot;http://www.whoishostingthis.com/resources/ansi-sql-standards/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ANSI-SQL&lt;/a&gt;接口，提供基于&lt;a href=&quot;http://hadoop.apache.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hadoop&lt;/a&gt;的超大数据集（TB-PB级）的多维分析（&lt;a href=&quot;https://en.wikipedia.org/wiki/OLAP&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OLAP&lt;/a&gt;）功能。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://dxj1113.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Apache" scheme="https://dxj1113.github.io/tags/Apache/"/>
    
      <category term="Big data" scheme="https://dxj1113.github.io/tags/Big-data/"/>
    
      <category term="CUBE" scheme="https://dxj1113.github.io/tags/CUBE/"/>
    
      <category term="OLAP" scheme="https://dxj1113.github.io/tags/OLAP/"/>
    
      <category term="HADOOP" scheme="https://dxj1113.github.io/tags/HADOOP/"/>
    
  </entry>
  
  <entry>
    <title>处理hexo与mathjax兼容问题</title>
    <link href="https://dxj1113.github.io/2017/07/14/%E5%A4%84%E7%90%86hexo%E4%B8%8Emathjax%E5%85%BC%E5%AE%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://dxj1113.github.io/2017/07/14/处理hexo与mathjax兼容问题/</id>
    <published>2017-07-14T03:25:20.000Z</published>
    <updated>2018-01-09T02:03:53.900Z</updated>
    
    <content type="html"><![CDATA[<p>写了一篇文章，发现Latex公式的无法渲染，经过一番推敲和实践，最终解决了这个问题，在这篇博文中简单记录一下，方便其他遇到同样问题的朋友们也能顺利解决。不想看解决思路的朋友也可以跳到文章末尾直接看解决方案 * <a href="#小结">Jump to the end to see sulution</a> 。<br> <a id="more"></a></p><h1 id="问题重现"><a href="#问题重现" class="headerlink" title="问题重现"></a>问题重现</h1><p>先重现一下这个问题。在写文章的时候，我码了一个相当简单的公式：$a^2+b=c$</p><script type="math/tex; mode=display">c^2</script><script type="math/tex; mode=display">c^2+a=b</script><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"><span class="variable">$R_</span>&#123;m \<span class="built_in">times</span> n&#125; = U_&#123;m \<span class="built_in">times</span> m&#125; S_&#123;m \<span class="built_in">times</span> n&#125; V_&#123;n \<span class="built_in">times</span> n&#125;<span class="string">'$$</span></span></span><br></pre></td></tr></table></figure><p>渲染出来却变成了（红框内变为了斜体）：<br><img src="http://oe0e8k1nf.bkt.clouddn.com/Before_Change_Markdown_Renderer1.png" alt="enter image description here"></p><h1 id="问题思考"><a href="#问题思考" class="headerlink" title="问题思考"></a>问题思考</h1><p>琢磨了一下，MathJax支持是开了的，这么简单的公式都渲染不出，肯定不是MathJax要背的锅。简单地测试了一下，发现：</p><script type="math/tex; mode=display">R_{m \times n}</script><p>这个公式是能work的，那到底是什么问题呢？回到前面的公式，细心观察一下，不难发现渲染之后下划线 <code>_</code> 被吞掉了，而两个下划线 <code>_</code> 之间的文本变为了斜体，这就很有意思了。</p><p>浏览一下网页源码，可以看到对应这一条公式的代码是：</p><p><img src="http://oe0e8k1nf.bkt.clouddn.com/Before_Change_Markdown_Renderer2.png" alt="enter image description here"></p><p>原来下划线被渲染成了 <code>&lt;em&gt;</code>，在HTML里这个tag是用于将文本准换为斜体进行强调的。为什么会产生这样的错误呢？其实，在Markdown语法中 两个下划线之间的文本会被转换为斜体，所以这个错误是由Markdown渲染器引起的。Markdown本身没有支持Latex，在渲染时正则匹配到两条下划线就会把下划线替换成了 <code>&lt;em&gt;</code>，于是到了MathJax渲染公式时就彻底懵了。</p><h1 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h1><p>意识到这个问题的本质后，带着疑问，我先来到Next主题的<a href="https://github.com/iissnan/hexo-theme-next/" target="_blank" rel="noopener">Github主页</a>，在<a href="https://github.com/iissnan/hexo-theme-next/issues?utf8=%E2%9C%93&amp;q=mathjax" target="_blank" rel="noopener">issue</a>里面搜索MathJax。很可惜，没有找到直接的答案，但是思路清晰了一些。Next不背这个锅，我们要做的是更换Hexo使用的Markdown渲染器。</p><p>接下来我又到Hexo的<a href="https://github.com/hexojs/hexo/" target="_blank" rel="noopener">Github主页</a>搜索相关的解决方案，在<a href="https://github.com/hexojs/hexo/issues/524" target="_blank" rel="noopener">issue #524</a> 中，有人提到了可以使用 <strong>rawblock</strong> 来解决，可是每次要写公式都得在公式前后加上 rawblock 来声明实在太烦了，对于公式大户来说简直要崩溃（想想之后要写机器学习的相关文章，一大堆公式证明，已经想手动再见了）。</p><p>另一个提出的解决方案是更换<strong>pandoc渲染器</strong>，pandoc大法固然好，但要下载安装完pandoc然后再装hexo插件实在是太重量级了.. 我只是想轻松愉悦地写写博客呀。当然，感兴趣的朋友也不妨去<a href="https://github.com/wzpan/hexo-renderer-pandoc" target="_blank" rel="noopener">hexo-renderer-pandoc主页</a>看看。</p><p>有没有更好的方法呢？我在segmentfault查到另一位朋友写的解决方案，可以使用 hexo-renderer-markdown-it 进行渲染，似乎是个不错的思路，在hexo-renderer-markdown-it的文档中可以看到操作相当简单：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-markdown-it <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>两行命令即可完成，先卸载Hexo自带的Markdown解析器 hexo-renderer-marked 再安装 <strong>hexo-renderer-markdown-it</strong> 就可以了。安装完以后，先 hexo clean &amp;&amp; hexo g 重新生成静态网页，然后 hexo s 查看，这回公式能正常显示了：</p><p>但是这是我又发现一个新的问题，使用 <strong>hexo-renderer-markdown-it</strong> 渲染之后，我原本为Markdown编写的TOC里的链接都失效了，而侧边栏的快速导航链接也都失效了。这怎么可以呢？文章写得短还好，鼠标滚轮滚一滚就好了。要是写得长那岂不就得浪费很多时间才能定位到自己想看的地方？这可不行！！！</p><p>继续查找更优的解决方案，Hexo有没有更好的Markdown渲染插件呢？有的，在<strong><a href="https://hexo.io/plugins/" target="_blank" rel="noopener">Hexo主站的插件页</a></strong>搜索关键字 Markdown，发现了 hexo-renderer-kramed 这个插件，打开它的<a href="https://github.com/sun11/hexo-renderer-kramed" target="_blank" rel="noopener">Github主页</a>，描述已经说得很清楚，作者fork了 hexo-renderer-marked 项目，并且只针对MathJax支持进行了改进，这正是我们需要的！！卸载 hexo-renderer-marked（注意，如果你使用了其他的渲染插件，请卸载对应的插件），然后安装 hexo-renderer-kramed：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>这下，不仅能正常使用TOC，也能完美地支持MathJax渲染了。至此，问题得到了解决。</p><p>P.S. 其实，这个问题就是因为Markdown渲染和MathJax渲染冲突造成的，除了换别的渲染器，直接修改渲染用的正则表达式也是一种解决思路，但是这个思路有一定风险，如果引起了别的bug而没有及时发现，自己又没有做好备份和记录，就需要浪费很多额外的时间来定位问题。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>简单来说，要让你的Hexo支持MathJax渲染公式，你只需要使用两条命令：<br>To fully support MathJax in your Hexo blog, you can simply use the following commands:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-renderer-marked <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-kramed <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>第一条命令用于卸载 hexo-renderer-marked（注意，如果你使用了其他的渲染插件，请卸载对应的插件），它是hexo自带的Markdown渲染引擎。<br>The first command uninstall Hexo’s default Markdown renderer.</p><p>第二条命令用于安装 hexo-renderer-kramed 插件，这个渲染插件针对MathJax支持进行了改进。安装完成后，重新生成博客就会惊喜地发现你的公式已经能够正常显示了。<br>The second command install new Markdown renderer which can support MathJax fully. After installation, you should regenerate your blog to see the changes.</p><p>感想</p><p>作为一名编程人员，不屈服于bug，不妥协于简陋的solution是很重要的。除此之外，也要善于定位问题和解决问题，能够弄清楚出问题的地方，并且利用丰富的网络资源来解决问题。</p><p>最后，感谢开源和分享。</p><p>最后的最后，再码一条写在SVM笔记里的长公式检验一下吧：</p><script type="math/tex; mode=display">minw,b12∥w∥2s.t.yi(wTϕ(x)+b)≥1,i=1,2,...,m(9)</script><script type="math/tex; mode=display">minw,b12‖w‖2s.t.yi(wTϕ(x)+b)≥1,i=1,2,...,m(9)</script><p>完美~<br>——EOF——</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写了一篇文章，发现Latex公式的无法渲染，经过一番推敲和实践，最终解决了这个问题，在这篇博文中简单记录一下，方便其他遇到同样问题的朋友们也能顺利解决。不想看解决思路的朋友也可以跳到文章末尾直接看解决方案 * &lt;a href=&quot;#小结&quot;&gt;Jump to the end to see sulution&lt;/a&gt; 。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://dxj1113.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Marddown" scheme="https://dxj1113.github.io/tags/Marddown/"/>
    
      <category term="Mathjax" scheme="https://dxj1113.github.io/tags/Mathjax/"/>
    
      <category term="Hexo" scheme="https://dxj1113.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>机器学习所需的数学基础</title>
    <link href="https://dxj1113.github.io/2017/07/14/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/"/>
    <id>https://dxj1113.github.io/2017/07/14/机器学习的数学基础/</id>
    <published>2017-07-14T01:55:32.000Z</published>
    <updated>2018-01-09T02:10:15.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>我们知道，机器学习的特点就是：以计算机为工具和平台，以数据为研究对象，以学习方法为中心；是概率论、线性代数、数值计算、信息论、最优化理论和计算机科学等多个领域的交叉学科。所以本文就先介绍一下机器学习涉及到的一些最常用的的数学知识。<br> <a id="more"></a></p><h1 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h1><h2 id="标量"><a href="#标量" class="headerlink" title="标量"></a>标量</h2><p>一个标量就是一个单独的数，一般用小写的的变量名称表示。</p><h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><p>一个向量就是一列数，这些数是有序排列的。用过次序中的索引，我们可以确定每个单独的数。通常会赋予向量粗体的小写名称。当我们需要明确表示向量中的元素时，我们会将元素排列成一个方括号包围的纵柱：</p><p>我们可以把向量看作空间中的点，每个元素是不同的坐标轴上的坐标。</p><h2 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h2><p>矩阵是二维数组，其中的每一个元素被两个索引而非一个所确定。我们通常会赋予矩阵粗体的大写变量名称，比如A。 如果一个实数矩阵高度为m，宽度为n，那么我们说$A\epsilon R^{m\times n} $。<br><img src="http://pic3.zhimg.com/v2-dd3017aa861f53973da40d860ec93732_b.png" alt="enter image description here"></p><h2 id="张量"><a href="#张量" class="headerlink" title="张量"></a>张量</h2><p>几何代数中定义的张量是基于向量和矩阵的推广，通俗一点理解的话，我们可以将标量视为零阶张量，矢量视为一阶张量，那么矩阵就是二阶张量。</p><p>例如，可以将任意一张彩色图片表示成一个三阶张量，三个维度分别是图片的高度、宽度和色彩数据。将这张图用张量表示出来，就是最下方的那张表格：<br><img src="http://pic1.zhimg.com/v2-c0c16793d4662bfcdd7e112030096f94_b.jpg" alt="enter image description here"><br>其中表的横轴表示图片的宽度值，这里只截取0~319；表的纵轴表示图片的高度值，这里只截取0~4；表格中每个方格代表一个像素点，比如第一行第一列的表格数据为[1.0,1.0,1.0]，代表的就是RGB三原色在图片的这个位置的取值情况（即R=1.0，G=1.0，B=1.0）。</p><p>当然我们还可以将这一定义继续扩展，即：我们可以用四阶张量表示一个包含多张图片的数据集，这四个维度分别是：图片在数据集中的编号，图片高度、宽度，以及色彩数据。</p><p>张量在深度学习中是一个很重要的概念，因为它是一个深度学习框架中的一个核心组件，后续的所有运算和优化算法几乎都是基于张量进行的。</p><h2 id="范数"><a href="#范数" class="headerlink" title="范数"></a>范数</h2><p>有时我们需要衡量一个向量的大小。在机器学习中，我们经常使用被称为范数(norm) 的函数衡量矩阵大小。Lp 范数如下：</p><script type="math/tex; mode=display">\left| \left| x \right| \right| _{p}^{} =\left( \sum_{i}^{}{\left| x_{i}  \right| ^{p} }  \right) _{}^{\frac{1}{p} }</script><p>所以：</p><p>L1范数$\left| \left| x \right| \right|$ ：为x向量各个元素绝对值之和；</p><p>L2范数$\left| \left| x \right|  \right| _{2}$ ：为x向量各个元素平方和的开方。</p><h2 id="特征分解"><a href="#特征分解" class="headerlink" title="特征分解"></a>特征分解</h2><p>许多数学对象可以通过将它们分解成多个组成部分。特征分解是使用最广的矩阵分解之一，即将矩阵分解成一组特征向量和特征值。</p><p>方阵A的特征向量是指与A相乘后相当于对该向量进行缩放的非零向量$\nu$ ：</p><script type="math/tex; mode=display">A\nu =\lambda \nu</script><p>标量$\lambda$ 被称为这个特征向量对应的特征值。</p><p>使用特征分解去分析矩阵A时，得到特征向量构成的矩阵V和特征值构成的向量$\lambda$ ，我们可以重新将A写作：</p><script type="math/tex; mode=display">A=Vdiag\left( \lambda  \right) V^{-1}</script><h2 id="奇异值分解（SVD）"><a href="#奇异值分解（SVD）" class="headerlink" title="奇异值分解（SVD）"></a>奇异值分解（SVD）</h2><p>除了特征分解，还有一种分解矩阵的方法，被称为奇异值分解（SVD）。将矩阵分解为奇异向量和奇异值。通过奇异分解，我们会得到一些类似于特征分解的信息。然而，奇异分解有更广泛的应用。</p><p>每个实数矩阵都有一个奇异值分解，但不一定都有特征分解。例如，非方阵的矩阵没有特征分解，这时我们只能使用奇异值分解。<br>奇异分解与特征分解类似，只不过这回我们将矩阵A分解成三个矩阵的乘积：</p><p>$A=UDV^{T} $<br>假设A是一个$m\times n$矩阵，那么U是一个$m\times m$矩阵，D是一个$m\times n$矩阵，V是一个$n\times n$矩阵。</p><p>这些矩阵每一个都拥有特殊的结构，其中U和V都是正交矩阵，D是对角矩阵（注意，D不一定是方阵）。对角矩阵D对角线上的元素被称为矩阵A的奇异值。矩阵U的列向量被称为左奇异向量，矩阵V 的列向量被称右奇异向量。</p><p>SVD最有用的一个性质可能是拓展矩阵求逆到非方矩阵上。另外，SVD可用于推荐系统中。</p><h2 id="Moore-Penrose伪逆"><a href="#Moore-Penrose伪逆" class="headerlink" title="Moore-Penrose伪逆"></a>Moore-Penrose伪逆</h2><p>对于非方矩阵而言，其逆矩阵没有定义。假设在下面问题中，我们想通过矩阵A的左逆B来求解线性方程：</p><script type="math/tex; mode=display">Ax=y</script><p>等式两边同时左乘左逆B后，得到：</p><script type="math/tex; mode=display">x=By</script><p>是否存在唯一的映射将A映射到B取决于问题的形式。</p><p>如果矩阵A的行数大于列数，那么上述方程可能没有解；如果矩阵A的行数小于列数，那么上述方程可能有多个解。</p><p>Moore-Penrose伪逆使我们能够解决这种情况，矩阵A的伪逆定义为：</p><p>但是计算伪逆的实际算法没有基于这个式子，而是使用下面的公式：</p><p>其中，矩阵U，D 和V 是矩阵A奇异值分解后得到的矩阵。对角矩阵D 的伪逆D+ 是其非零元素取倒之后再转置得到的。</p><h2 id="几种常用的距离"><a href="#几种常用的距离" class="headerlink" title="几种常用的距离"></a>几种常用的距离</h2><p>设有两个n维变量<script type="math/tex">A=[x_{11}, x_{12},...,x_{1n} ]</script>和<script type="math/tex">B=[ x_{21} ,x_{22} ,...,x_{2n}]</script> ，则下面可以定义一些常用的距离公式：</p><ol><li>曼哈顿距离</li></ol><p>曼哈顿距离也称为城市街区距离，数学定义如下：</p><script type="math/tex; mode=display">d_{12} =\sum_{k=1}^{n}{\left| x_{1k}-x_{2k} \right| }</script><p>曼哈顿距离的Python实现：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">vector1 = mat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">vector2 = mat([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">print sum(<span class="name">abs</span>(<span class="name">vector1-vector2</span>))</span><br></pre></td></tr></table></figure><ol><li>欧氏距离</li></ol><p>欧氏距离其实就是L2范数，数学定义如下：</p><script type="math/tex; mode=display">d_{12} =\sqrt{\sum_{k=1}^{n}{\left( x_{1k} -x_{2k}  \right) ^{2} } }</script><p>欧氏距离的Python实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">vector1 = mat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">vector2 = mat([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">print sqrt((vector1-vector2)*(vector1-vector2).T)</span><br></pre></td></tr></table></figure><ol><li>闵可夫斯基距离</li></ol><p>从严格意义上讲，闵可夫斯基距离不是一种距离，而是一组距离的定义：</p><script type="math/tex; mode=display">d_{12} =\sqrt[p]{\sum_{k=1}^{n}{\left( x_{1k} -x_{2k}  \right) ^{p} } }</script><p>实际上，当p=1时，就是曼哈顿距离；当p=2时，就是欧式距离。</p><ol><li>切比雪夫距离</li></ol><p>切比雪夫距离就是$L_{\varpi}$ ，即无穷范数，数学表达式如下：</p><script type="math/tex; mode=display">d_{12} =max\left( \left| x_{1k}-x_{2k} \right|  \right)</script><p>切比雪夫距离额Python实现如下：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">vector1 = mat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">vector2 = mat([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">print sqrt(<span class="name">abs</span>(<span class="name">vector1-vector2</span>).max)</span><br></pre></td></tr></table></figure><ol><li>夹角余弦</li></ol><p>夹角余弦的取值范围为[-1,1]，可以用来衡量两个向量方向的差异；夹角余弦越大，表示两个向量的夹角越小；当两个向量的方向重合时，夹角余弦取最大值1；当两个向量的方向完全相反时，夹角余弦取最小值-1。</p><p>机器学习中用这一概念来衡量样本向量之间的差异，其数学表达式如下：</p><script type="math/tex; mode=display">cos\theta =\frac{AB}{\left| A \right| \left|B \right| } =\frac{\sum_{k=1}^{n}{x_{1k}x_{2k} } }{\sqrt{\sum_{k=1}^{n}{x_{1k}^{2} } } \sqrt{\sum_{k=1}^{n}{x_{2k}^{2} } } }</script><p>夹角余弦的Python实现：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">vector1 = mat([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>])</span><br><span class="line">vector2 = mat([<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])</span><br><span class="line">print dot(<span class="name">vector1</span>,vector2)/(<span class="name">linalg</span>.norm(<span class="name">vector1</span>)*linalg.norm(vector2))</span><br></pre></td></tr></table></figure><ol><li>汉明距离</li></ol><p>汉明距离定义的是两个字符串中不相同位数的数目。</p><p>例如：字符串‘1111’与‘1001’之间的汉明距离为2。</p><p>信息编码中一般应使得编码间的汉明距离尽可能的小。</p><p>汉明距离的Python实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">matV = mat([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">smstr = nonzero(matV[<span class="number">0</span>]-matV[<span class="number">1</span>])</span><br><span class="line">print smstr</span><br></pre></td></tr></table></figure><ol><li>杰卡德相似系数</li></ol><p>两个集合A和B的交集元素在A和B的并集中所占的比例称为两个集合的杰卡德相似系数，用符号J(A,B)表示，数学表达式为：</p><script type="math/tex; mode=display">J\left( A,B \right) =\frac{\left| A\cap B\right| }{\left|A\cup B \right| }</script><p>杰卡德相似系数是衡量两个集合的相似度的一种指标。一般可以将其用在衡量样本的相似度上。</p><ol><li>杰卡德距离</li></ol><p>与杰卡德相似系数相反的概念是杰卡德距离，其定义式为：</p><script type="math/tex; mode=display">J_{\sigma} =1-J\left( A,B \right) =\frac{\left| A\cup B \right| -\left| A\cap B \right| }{\left| A\cup B \right| }</script><p>杰卡德距离的Python实现：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from numpy import *</span><br><span class="line">import scipy.spatial.distance as dist</span><br><span class="line">matV = mat([<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">print dist.pdist(matV,'jaccard')</span><br></pre></td></tr></table></figure><h2 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h2><h3 id="书籍推荐"><a href="#书籍推荐" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><p><a href="https://www.amazon.com/Introduction-Linear-Algebra-Gilbert-Strang/dp/0980232775" target="_blank" rel="noopener">Introduction to Linear Algebra, Fifth Edition by  Gilbert Strang</a></p><h3 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h3><p>待补充</p><h1 id="概率"><a href="#概率" class="headerlink" title="概率"></a>概率</h1><h2 id="为什么使用概率？"><a href="#为什么使用概率？" class="headerlink" title="为什么使用概率？"></a>为什么使用概率？</h2><p>概率论是用于表示不确定性陈述的数学框架，即它是对事物不确定性的度量。</p><p>在人工智能领域，我们主要以两种方式来使用概率论。首先，概率法则告诉我们AI系统应该如何推理，所以我们设计一些算法来计算或者近似由概率论导出的表达式。其次，我们可以用概率和统计从理论上分析我们提出的AI系统的行为。</p><p>计算机科学的许多分支处理的对象都是完全确定的实体，但机器学习却大量使用概率论。实际上如果你了解机器学习的工作原理你就会觉得这个很正常。因为机器学习大部分时候处理的都是不确定量或随机量。</p><h2 id="随机变量"><a href="#随机变量" class="headerlink" title="随机变量"></a>随机变量</h2><p>随机变量可以随机地取不同值的变量。我们通常用小写字母来表示随机变量本身，而用带数字下标的小写字母来表示随机变量能够取到的值。例如，<script type="math/tex">x_{1}</script>  和<script type="math/tex">x_{2}</script>  都是随机变量X可能的取值。<br>对于向量值变量，我们会将随机变量写成X，它的一个值为x。就其本身而言，一个随机变量只是对可能的状态的描述；它必须伴随着一个概率分布来指定每个状态的可能性。</p><p>随机变量可以是离散的或者连续的。</p><h2 id="概率分布"><a href="#概率分布" class="headerlink" title="概率分布"></a>概率分布</h2><p>给定某随机变量的取值范围，概率分布就是导致该随机事件出现的可能性。<br>从机器学习的角度来看，概率分布就是符合随机变量取值范围的某个对象属于某个类别或服从某种趋势的可能性。</p><h2 id="条件概率"><a href="#条件概率" class="headerlink" title="条件概率"></a>条件概率</h2><p>很多情况下，我们感兴趣的是某个事件在给定其它事件发生时出现的概率，这种概率叫条件概率。<br>我们将给定X=x时Y=y发生的概率记为$P\left( Y=y|X=x \right) $，这个概率可以通过下面的公式来计算：</p><script type="math/tex; mode=display">P\left( Y=y|X=x  \right) =\frac{P\left( Y=y,X=x \right) }{P\left( X=x \right) }</script><h2 id="贝叶斯公式"><a href="#贝叶斯公式" class="headerlink" title="贝叶斯公式"></a>贝叶斯公式</h2><p>先看看什么是“先验概率”和“后验概率”，以一个例子来说明：</p><p>假设某种病在人群中的发病率是0.001，即1000人中大概会有1个人得病，则有： P(患病) = 0.1%；即：在没有做检验之前，我们预计的患病率为P(患病)=0.1%，这个就叫作”先验概率”。</p><p>再假设现在有一种该病的检测方法，其检测的准确率为95%；即：如果真的得了这种病，该检测法有95%的概率会检测出阳性，但也有5%的概率检测出阴性；或者反过来说，但如果没有得病，采用该方法有95%的概率检测出阴性，但也有5%的概率检测为阳性。用概率条件概率表示即为：P(显示阳性|患病)=95%</p><p>现在我们想知道的是：在做完检测显示为阳性后，某人的患病率P(患病|显示阳性)，这个其实就称为”后验概率”。</p><p>而这个叫贝叶斯的人其实就是为我们提供了一种可以利用先验概率计算后验概率的方法，我们将其称为“贝叶斯公式”，如下：</p><script type="math/tex; mode=display">P\left( B|A \right) =\frac{P\left( A|B \right)P\left( B\right)  }{P\left( A \right) }</script><p>在这个例子里就是：</p><p><img src="http://pic2.zhimg.com/v2-e3e7a3aa9fb146d662591612b3cac465_b.png" alt="enter image description here"><br>贝叶斯公式贯穿了机器学习中随机问题分析的全过程。从文本分类到概率图模型，其基本分类都是贝叶斯公式。</p><p>这里需要说明的是，上面的计算中除了利用了贝叶斯公式外，还利用了“全概率公式”，即：</p><p>$P\left( A \right) =P\left( A|B \right)+P\left( A|\bar{B}  \right)  $</p><h2 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h2><p>在概率论和统计学中，数学期望是试验中每次可能结果的概率乘以其结果的总和。它是最基本的数学特征之一，反映随机变量平均值的大小。</p><p>假设X是一个离散随机变量，其可能的取值有：<script type="math/tex">\left\{ x_{1} ,x_{2} ,......,x_{n}  \right\}</script>，各个取值对应的概率取值为：<script type="math/tex">P\left( x_{k} \right)</script>  ,<script type="math/tex">k=1,2,......,n</script>，则其数学期望被定义为：</p><script type="math/tex; mode=display">E\left(X \right) =\sum_{k=1}^{n}{x_{k} P\left( x_{k}  \right) }</script><p>假设X是一个连续型随机变量，其概率密度函数为<script type="math/tex">P\left( x \right)</script> 则其数学期望被定义为：</p><script type="math/tex; mode=display">E\left( x \right) =\int_{-\varpi }^{+\varpi } xf\left( x \right) dx</script><h2 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h2><p>概率中，方差用来衡量随机变量与其数学期望之间的偏离程度；统计中的方差为样本方差，是各个样本数据分别与其平均数之差的平方和的平均数。数学表达式如下：</p><script type="math/tex; mode=display">Var\left( x \right) =E\left\{ \left[ x-E\left( x \right)  \right] ^{2}   \right\} =E\left( x^{2}  \right) -\left[ E\left( x \right)  \right] ^{2}</script><h2 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h2><p>在概率论和统计学中，协方差被用于衡量两个随机变量X和Y之间的总体误差。数学定义式为：</p><script type="math/tex; mode=display">Cov\left( X,Y \right) =E\left[ \left( X-E\left[ X \right]  \right) \left( Y-E\left[ Y \right]  \right) \right] =E\left[ XY \right] -E\left[ X \right] E\left[ Y \right]</script><h2 id="常见分布函数"><a href="#常见分布函数" class="headerlink" title="常见分布函数"></a>常见分布函数</h2><ol><li>0-1分布</li></ol><p>0-1分布是单个二值型离散随机变量的分布，其概率分布函数为：</p><script type="math/tex; mode=display">P\left( X=1 \right) =pP\left( X=0 \right) =1-p</script><ol><li>几何分布</li></ol><p>几何分布是离散型概率分布，其定义为：在n次伯努利试验中，试验k次才得到第一次成功的机率。即：前k-1次皆失败，第k次成功的概率。其概率分布函数为：</p><script type="math/tex; mode=display">P\left( X=k \right) =\left( 1-p \right) ^{k-1} p</script><p>性质：</p><script type="math/tex; mode=display">E\left( X \right) =\frac{1}{p} Var\left( X \right) =\frac{1-p}{p^{2} }</script><ol><li>二项分布</li></ol><p>二项分布即重复n次伯努利试验，各次试验之间都相互独立，并且每次试验中只有两种可能的结果，而且这两种结果发生与否相互对立。如果每次试验时，事件发生的概率为p，不发生的概率为1-p，则n次重复独立试验中发生k次的概率为：</p><script type="math/tex; mode=display">P\left( X=k \right) =C_{n}^{k} p^{k} \left( 1-p \right) ^{n-k}</script><p>性质：</p><script type="math/tex; mode=display">E\left( X \right) =npVar\left( X \right) =np\left( 1-p \right)</script><ol><li>高斯分布</li></ol><p>高斯分布又叫正态分布，其曲线呈钟型，两头低，中间高，左右对称因其曲线呈钟形，如下图所示：</p><p><img src="http://pic1.zhimg.com/v2-a0811acc8ab121a3ad8f2e37ff6c37cc_b.png" alt="enter image description here"><br>若随机变量X服从一个数学期望为$\mu$ ，方差为$\sigma ^{2} $的正态分布，则我们将其记为：$N\left( \mu ,\sigma^{2}  \right) $。其期望值$\mu$ 决定了正态分布的位置，其标准差$\sigma$ （方差的开方）决定了正态分布的幅度。</p><ol><li>指数分布</li></ol><p>指数分布是事件的时间间隔的概率，它的一个重要特征是无记忆性。例如：如果某一元件的寿命的寿命为T，已知元件使用了t小时，它总共使用至少t+s小时的条件概率，与从开始使用时算起它使用至少s小时的概率相等。下面这些都属于指数分布：</p><p>婴儿出生的时间间隔<br>网站访问的时间间隔<br>奶粉销售的时间间隔<br>指数分布的公式可以从泊松分布推断出来。如果下一个婴儿要间隔时间t，就等同于t之内没有任何婴儿出生，即：</p><script type="math/tex; mode=display">P\left( X\geq t \right) =P\left( N\left( t \right) =0 \right) =\frac{\left( \lambda t \right) ^{0}\cdot e^{-\lambda t}  }{0!}=e^{-\lambda t}</script><p>则：</p><script type="math/tex; mode=display">P\left( X\leq t \right) =1-P\left( X\geq t \right) =1-e^{-\lambda t}</script><p>如：接下来15分钟，会有婴儿出生的概率为：</p><script type="math/tex; mode=display">P\left( X\leq \frac{1}{4} \right) =1-e^{-3\cdot \frac{1}{4} } \approx 0.53</script><p>指数分布的图像如下：</p><p><img src="http://pic3.zhimg.com/v2-a58c37c481e032bbb53ff17113754ef6_b.png" alt="enter image description here"></p><ol><li>泊松分布</li></ol><p>日常生活中，大量事件是有固定频率的，比如：</p><p>某医院平均每小时出生3个婴儿<br>某网站平均每分钟有2次访问<br>某超市平均每小时销售4包奶粉<br>它们的特点就是，我们可以预估这些事件的总数，但是没法知道具体的发生时间。已知平均每小时出生3个婴儿，请问下一个小时，会出生几个？有可能一下子出生6个，也有可能一个都不出生，这是我们没法知道的。</p><p>泊松分布就是描述某段时间内，事件具体的发生概率。其概率函数为：</p><script type="math/tex; mode=display">P\left( N\left( t \right) =n \right) =\frac{\left( \lambda t \right) ^{n}e^{-\lambda t}  }{n!}</script><p>其中：</p><p>P表示概率，N表示某种函数关系，t表示时间，n表示数量，1小时内出生3个婴儿的概率，就表示为$ P(N(1) = 3) $；λ 表示事件的频率。</p><p>还是以上面医院平均每小时出生3个婴儿为例，则$\lambda =3$；</p><p>那么，接下来两个小时，一个婴儿都不出生的概率可以求得为：</p><script type="math/tex; mode=display">P\left( N\left(2 \right) =0 \right) =\frac{\left( 3\cdot 2 \right) ^{o} \cdot e^{-3\cdot 2} }{0!} \approx 0.0025</script><p>同理，我们可以求接下来一个小时，至少出生两个婴儿的概率：</p><script type="math/tex; mode=display">P\left( N\left( 1 \right) \geq 2 \right) =1-P\left( N\left( 1 \right)=0  \right) - P\left( N\left( 1 \right)=1  \right)\approx 0.8</script><h2 id="Lagrange乘子法"><a href="#Lagrange乘子法" class="headerlink" title="Lagrange乘子法"></a>Lagrange乘子法</h2><p>对于一般的求极值问题我们都知道，求导等于0就可以了。但是如果我们不但要求极值，还要求一个满足一定约束条件的极值，那么此时就可以构造Lagrange函数，其实就是把约束项添加到原函数上，然后对构造的新函数求导。</p><p>对于一个要求极值的函数$f\left( x,y \right) $，图上的蓝圈就是这个函数的等高图，就是说<script type="math/tex">f\left( x,y \right) =c_{1} ,c_{2} ,...,c_{n}</script> 分别代表不同的数值(每个值代表一圈，等高图)，我要找到一组<script type="math/tex">\left( x,y \right)</script> ，使它的<script type="math/tex">c_{i}</script>值越大越好，但是这点必须满足约束条件<script type="math/tex">g\left( x,y \right)</script>（在黄线上）。<br><img src="http://pic3.zhimg.com/v2-806fd987177e32a33e698caa74d69942_b.jpg" alt="enter image description here"><br>也就是说f(x,y)和g(x,y)相切，或者说它们的梯度$▽f$和$▽g$平行，因此它们的梯度（偏导）成倍数关系；那我么就假设为<script type="math/tex">\lambda</script> 倍，然后把约束条件加到原函数后再对它求导，其实就等于满足了下图上的式子。</p><h2 id="最大似然法"><a href="#最大似然法" class="headerlink" title="最大似然法"></a>最大似然法</h2><p>最大似然也称为最大概似估计，即：在“模型已定，参数θ未知”的情况下，通过观测数据估计未知参数θ 的一种思想或方法。</p><p>其基本思想是： 给定样本取值后，该样本最有可能来自参数<script type="math/tex">\theta</script> 为何值的总体。即：寻找<script type="math/tex">\tilde{\theta } _{ML}</script> 使得观测到样本数据的可能性最大。</p><p>举个例子，假设我们要统计全国人口的身高，首先假设这个身高服从服从正态分布，但是该分布的均值与方差未知。由于没有足够的人力和物力去统计全国每个人的身高，但是可以通过采样（所有的采样要求都是独立同分布的），获取部分人的身高，然后通过最大似然估计来获取上述假设中的正态分布的均值与方差。</p><p>求极大似然函数估计值的一般步骤：</p><ol><li>写出似然函数；<br><img src="http://pic3.zhimg.com/v2-84eef0a858928f3cc28fd03bd7286b3a_b.png" alt="enter image description here"></li><li>对似然函数取对数；</li><li>两边同时求导数；</li><li>令导数为0解出似然方程。<br>最大似然估计也是统计学习中经验风险最小化的例子。如果模型为条件概率分布，损失函数定义为对数损失函数，经验风险最小化就等价于最大似然估计。</li></ol><h2 id="延伸-1"><a href="#延伸-1" class="headerlink" title="延伸"></a>延伸</h2><h3 id="书籍推荐-1"><a href="#书籍推荐-1" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><p><a href="https://www.amazon.com/Think-Bayes-Bayesian-Statistics-Python/dp/1449370780/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1500024334&amp;sr=1-1&amp;keywords=think%20bayes" target="_blank" rel="noopener">Think Bayes: Bayesian Statistics in Python by Allen B. Downey</a><br><a href="https://www.amazon.com/Probability-Cambridge-Statistical-Probabilistic-Mathematics/dp/0521765390/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1500024425&amp;sr=1-1&amp;keywords=Probability%20-%20Theory%20and%20Examples" target="_blank" rel="noopener">Probability - Theory and Examples, 4th Edition - Rick.Durrett</a></p><h3 id="论文-1"><a href="#论文-1" class="headerlink" title="论文"></a>论文</h3><p>待补充</p><h1 id="信息论"><a href="#信息论" class="headerlink" title="信息论"></a>信息论</h1><p>信息论是应用数学的一个分支，主要研究的是对一个信号能够提供信息的多少进行量化。如果说概率使我们能够做出不确定性的陈述以及在不确定性存在的情况下进行推理，那信息论就是使我们能够量化概率分布中不确定性的总量。</p><p>1948年，香农引入信息熵，将其定义为离散随机事件的出现概率。一个系统越是有序，信息熵就越低；反之，一个系统越是混乱，信息熵就越高。所以说，信息熵可以被认为是系统有序化程度的一个度量。</p><h2 id="熵"><a href="#熵" class="headerlink" title="熵"></a>熵</h2><p>如果一个随机变量X的可能取值为<script type="math/tex">X=\left\{ x_{1},x_{2} ,.....,x_{n}   \right\}</script> ，其概率分布为<script type="math/tex">P\left( X=x_{i}  \right) =p_{i} ,i=1,2,.....,n</script>，则随机变量X的熵定义为<script type="math/tex">H(X)</script>：</p><script type="math/tex; mode=display">H\left( X \right) =-\sum_{i=1}^{n}{P\left( x_{i}  \right) logP\left( x_{i}  \right) } =\sum_{i=1}^{n}{P\left( x_{i}  \right) \frac{1}{logP\left( x_{i}  \right) } }</script><h2 id="联合熵"><a href="#联合熵" class="headerlink" title="联合熵"></a>联合熵</h2><p>两个随机变量X和Y的联合分布可以形成联合熵，定义为联合自信息的数学期望，它是二维随机变量XY的不确定性的度量，用$H(X,Y)$表示：</p><script type="math/tex; mode=display">H\left( X,Y \right) =-\sum_{i=1}^{n}{\sum_{j=1}^{n}{P\left( x_{i} ,y_{j}  \right)} logP\left( x_{i},y_{j}   \right)  }</script><h2 id="条件熵"><a href="#条件熵" class="headerlink" title="条件熵"></a>条件熵</h2><p>在随机变量X发生的前提下，随机变量Y发生新带来的熵，定义为Y的条件熵，用H(Y|X)表示：</p><script type="math/tex; mode=display">H\left(Y|X \right) =-\sum_{x,y}^{}{P\left( x,y \right) logP\left( y|x \right) }</script><p>条件熵用来衡量在已知随机变量X的条件下，随机变量Y的不确定性。</p><p>实际上，熵、联合熵和条件熵之间存在以下关系：</p><script type="math/tex; mode=display">H\left( Y|X \right) =H\left( X,Y\right) -H\left( X \right)</script><p>推导过程如下：<br><img src="http://pic3.zhimg.com/v2-adc57281fa54b0702906a8c42cbd7e5a_b.jpg" alt="enter image description here"><br>其中：</p><p>第二行推到第三行的依据是边缘分布$P(x)$等于联合分布$P(x,y)$的和；<br>第三行推到第四行的依据是把公因子$logP(x)$乘进去，然后把x,y写在一起；<br>第四行推到第五行的依据是：因为两个$sigma$都有$P(x,y)$，故提取公因子$P(x,y)$放到外边，然后把里边的$-（log P(x,y) - log P(x)）$写成$- log (P(x,y) / P(x) ) $；<br>第五行推到第六行的依据是：$P(x,y) = P(x) * P(y|x)，故P(x,y) / P(x) = P(y|x)$。<br>4-4、相对熵</p><p>相对熵又称互熵、交叉熵、KL散度、信息增益，是描述两个概率分布P和Q差异的一种方法，记为$D(P||Q)$。在信息论中，$D(P||Q)$表示当用概率分布Q来拟合真实分布P时，产生的信息损耗，其中P表示真实分布，Q表示P的拟合分布。</p><p>对于一个离散随机变量的两个概率分布P和Q来说，它们的相对熵定义为：</p><script type="math/tex; mode=display">D\left( P||Q \right) =\sum_{i=1}^{n}{P\left( x_{i}  \right) log\frac{P\left( x_{i}  \right) }{Q\left( x_{i}  \right) } }</script><p>注意：$D(P||Q) ≠ D(Q||P)$</p><h2 id="互信息"><a href="#互信息" class="headerlink" title="互信息"></a>互信息</h2><p>两个随机变量X，Y的互信息定义为X，Y的联合分布和各自独立分布乘积的相对熵称为互信息，用$I(X,Y)$表示。互信息是信息论里一种有用的信息度量方式，它可以看成是一个随机变量中包含的关于另一个随机变量的信息量，或者说是一个随机变量由于已知另一个随机变量而减少的不肯定性。</p><script type="math/tex; mode=display">I\left( X,Y \right) =\sum_{x\in X}^{}{\sum_{y\in Y}^{}{P\left( x,y \right) } log\frac{P\left( x,y \right) }{P\left( x \right) P\left( y \right) } }</script><p>互信息、熵和条件熵之间存在以下关系： $H\left( Y|X \right) =H\left( Y \right) -I\left( X,Y \right) $</p><p>推导过程如下：<br><img src="http://pic3.zhimg.com/v2-6f41bffde009999cbc370f7f38cab092_b.jpg" alt="enter image description here"><br>通过上面的计算过程发现有：$H(Y|X) = H(Y) - I(X,Y)$，又由前面条件熵的定义有：$H(Y|X) = H(X,Y) - H(X)$，于是有$I(X,Y)= H(X) + H(Y) - H(X,Y)$，此结论被多数文献作为互信息的定义。</p><h2 id="最大熵模型"><a href="#最大熵模型" class="headerlink" title="最大熵模型"></a>最大熵模型</h2><p>最大熵原理是概率模型学习的一个准则，它认为：学习概率模型时，在所有可能的概率分布中，熵最大的模型是最好的模型。通常用约束条件来确定模型的集合，所以，最大熵模型原理也可以表述为：在满足约束条件的模型集合中选取熵最大的模型。</p><p>前面我们知道，若随机变量X的概率分布是$P\left( x_{i}  \right)$ ，则其熵定义如下：</p><script type="math/tex; mode=display">H\left( X \right) =-\sum_{i=1}^{n}{P\left( x_{i}  \right) logP\left( x_{i}  \right) } =\sum_{i=1}^{n}{P\left( x_{i}  \right) \frac{1}{logP\left( x_{i}  \right) } }</script><p>熵满足下列不等式：</p><script type="math/tex; mode=display">0\leq H\left( X \right) \leq log\left| X \right|</script><p>式中，|X|是X的取值个数，当且仅当X的分布是均匀分布时右边的等号成立。也就是说，当X服从均匀分布时，熵最大。</p><p>直观地看，最大熵原理认为：要选择概率模型，首先必须满足已有的事实，即约束条件；在没有更多信息的情况下，那些不确定的部分都是“等可能的”。最大熵原理通过熵的最大化来表示等可能性；“等可能”不易操作，而熵则是一个可优化的指标。</p><h2 id="延伸-2"><a href="#延伸-2" class="headerlink" title="延伸"></a>延伸</h2><h3 id="书籍推荐-2"><a href="#书籍推荐-2" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><p><a href="https://www.amazon.com/s/ref=nb_sb_ss_i_1_11?url=search-alias=stripbooks&amp;field-keywords=information%20theory&amp;sprefix=information,stripbooks,342&amp;crid=3M2IMSN5L5WWW" target="_blank" rel="noopener">Information Theory: A Tutorial IntroductionFeb by James V Stone</a></p><h2 id=""><a href="#" class="headerlink" title="#"></a>#</h2><h1 id="数值计算"><a href="#数值计算" class="headerlink" title="数值计算"></a>数值计算</h1><h2 id="上溢和下溢"><a href="#上溢和下溢" class="headerlink" title="上溢和下溢"></a>上溢和下溢</h2><p>在数字计算机上实现连续数学的基本困难是：我们需要通过有限数量的位模式来表示无限多的实数，这意味着我们在计算机中表示实数时几乎都会引入一些近似误差。在许多情况下，这仅仅是舍入误差。如果在理论上可行的算法没有被设计为最小化舍入误差的累积，可能会在实践中失效，因此舍入误差是有问题的，特别是在某些操作复合时。</p><p>一种特别毁灭性的舍入误差是下溢。当接近零的数被四舍五入为零时发生下溢。许多函数会在其参数为零而不是一个很小的正数时才会表现出质的不同。例如，我们通常要避免被零除。</p><p>另一个极具破坏力的数值错误形式是上溢(overflow)。当大量级的数被近似为<script type="math/tex">\varpi</script> 或<script type="math/tex">-\varpi</script> 时发生上溢。进一步的运算通常将这些无限值变为非数字。</p><p>必须对上溢和下溢进行数值稳定的一个例子是softmax 函数。softmax 函数经常用于预测与multinoulli分布相关联的概率，定义为：</p><p>当式中的<script type="math/tex">x_{i}</script> 都是很小的负数时，<script type="math/tex">e^{x_{i} }</script>就会发生下溢，这意味着上面函数的分母会变成0，导致结果是未定的；同理，当式中的<script type="math/tex">x_{i}</script> 是很大的正数时，<script type="math/tex">e^{x_{i} }</script> 就会发生上溢导致结果是未定的。</p><h2 id="计算复杂性与NP问题"><a href="#计算复杂性与NP问题" class="headerlink" title="计算复杂性与NP问题"></a>计算复杂性与NP问题</h2><ol><li>算法复杂性<br>现实中大多数问题都是离散的数据集，为了反映统计规律，有时数据量很大，而且多数目标函数都不能简单地求得解析解。这就带来一个问题：算法的复杂性。</li></ol><p>算法理论被认为是解决各类现实问题的方法论。衡量算法有两个重要的指标：时间复杂度和空间复杂度，这是对算法执行所需要的两类资源——时间和空间的估算。</p><p>一般，衡量问题是否可解的重要指标是：该问题能否在多项式时间内求解，还是只能在指数时间内求解？在各类算法理论中，通常使用多项式时间算法即可解决的问题看作是易解问题，需要指数时间算法解决的问题看作是难解问题。</p><p>指数时间算法的计算时间随着问题规模的增长而呈指数化上升，这类问题虽然有解，但并不适用于大规模问题。所以当前算法研究的一个重要任务就是将指数时间算法变换为多项式时间算法。</p><ol><li>确定性和非确定性</li></ol><p>除了问题规模与运算时间的比较，衡量一个算法还需要考虑确定性和非确定性的概念。</p><p>这里先介绍一下“自动机”的概念。自动机实际上是指一种基于状态变化进行迭代的算法。在算法领域常把这类算法看作一个机器，比较知名的有图灵机、玻尔兹曼机、支持向量机等。</p><p>所谓确定性，是指针对各种自动机模型，根据当时的状态和输入，若自动机的状态转移是唯一确定的，则称确定性；若在某一时刻自动机有多个状态可供选择，并尝试执行每个可选择的状态，则称为非确定性。</p><p>换个说法就是：确定性是程序每次运行时产生下一步的结果是唯一的，因此返回的结果也是唯一的；非确定性是程序在每个运行时执行的路径是并行且随机的，所有路径都可能返回结果，也可能只有部分返回结果，也可能不返回结果，但是只要有一个路径返回结果，那么算法就结束。</p><p>在求解优化问题时，非确定性算法可能会陷入局部最优。</p><ol><li>NP问题</li></ol><p>有了时间上的衡量标准和状态转移的确定性与非确定性的概念，我们来定义一下问题的计算复杂度。</p><p>P类问题就是能够以多项式时间的确定性算法来对问题进行判定或求解，实现它的算法在每个运行状态都是唯一的，最终一定能够确定一个唯一的结果——最优的结果。</p><p>NP问题是指可以用多项式时间的非确定性算法来判定或求解，即这类问题求解的算法大多是非确定性的，但时间复杂度有可能是多项式级别的。</p><p>但是，NP问题还要一个子类称为NP完全问题，它是NP问题中最难的问题，其中任何一个问题至今都没有找到多项式时间的算法。</p><p>机器学习中多数算法都是针对NP问题（包括NP完全问题）的。</p><h2 id="数值计算-1"><a href="#数值计算-1" class="headerlink" title="数值计算"></a>数值计算</h2><p>上面已经分析了，大部分实际情况中，计算机其实都只能做一些近似的数值计算，而不可能找到一个完全精确的值，这其实有一门专门的学科来研究这个问题，这门学科就是——数值分析（有时也叫作“计算方法”）；运用数值分析解决问题的过程为：实际问题→数学模型→数值计算方法→程序设计→上机计算求出结果。</p><p>计算机在做这些数值计算的过程中，经常会涉及到的一个东西就是“迭代运算”，即通过不停的迭代计算，逐渐逼近真实值（当然是要在误差收敛的情况下）。</p><h2 id="延伸-3"><a href="#延伸-3" class="headerlink" title="延伸"></a>延伸</h2><h3 id="书籍推荐-3"><a href="#书籍推荐-3" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><p><a href="https://www.amazon.com/Numerical-Analysis-Richard-L-Burden/dp/1305253663/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1500024656&amp;sr=1-1&amp;keywords=numerical%20analysis" target="_blank" rel="noopener">Numerical AnalysisJan by Richard L. Burden and J. Douglas Faires</a></p><h3 id="论文-2"><a href="#论文-2" class="headerlink" title="论文"></a>论文</h3><p>待补充</p><h1 id="最优化"><a href="#最优化" class="headerlink" title="最优化"></a>最优化</h1><p>本节介绍机器学习中的一种重要理论——最优化方法。</p><h2 id="最优化理论"><a href="#最优化理论" class="headerlink" title="最优化理论"></a>最优化理论</h2><p>无论做什么事，人们总希望以最小的代价取得最大的收益。在解决一些工程问题时，人们常会遇到多种因素交织在一起与决策目标相互影响的情况；这就促使人们创造一种新的数学理论来应对这一挑战，也因此，最早的优化方法——线性规划诞生了。</p><h2 id="最优化问题的数学描述"><a href="#最优化问题的数学描述" class="headerlink" title="最优化问题的数学描述"></a>最优化问题的数学描述</h2><p>最优化的基本数学模型如下：<br><img src="http://pic3.zhimg.com/v2-f35226b3e0fa018db6a4b233c51eccbe_b.png" alt="enter image description here"><br>它有三个基本要素，即：</p><ul><li>设计变量：x是一个实数域范围内的n维向量，被称为决策变量或问题的解；</li><li>目标函数：<script type="math/tex">f(x)</script>为目标函数；</li><li>约束条件：<script type="math/tex">h_{i} \left( x \right) =0</script>称为等式约束，<script type="math/tex">g_{i} \left( x \right) \leq</script> 0为不等式约束，<script type="math/tex">i=0,1,2,......</script></li></ul><h2 id="凸集与凸集分离定理"><a href="#凸集与凸集分离定理" class="headerlink" title="凸集与凸集分离定理"></a>凸集与凸集分离定理</h2><ol><li>凸集<br><img src="http://pic1.zhimg.com/v2-608f89f47688c41e4c3f83cfad095c84_b.jpg" alt="enter image description here"><br>实数域R上（或复数C上）的向量空间中，如果集合S中任两点的连线上的点都在S内，则称集合S为凸集，如下图所示：</li></ol><p>数学定义为：</p><p>设集合$D\subset R^{n}$ ，若对于任意两点$x,y\in D$，及实数$\lambda \left( 0\leq \lambda \leq 1 \right) $都有：</p><script type="math/tex; mode=display">\lambda x+\left( 1-\lambda  \right) y\in D</script><p>则称集合D为凸集。</p><ol><li>超平面和半空间</li></ol><p>实际上，二维空间的超平面就是一条线（可以使曲线），三维空间的超平面就是一个面（可以是曲面）。其数学表达式如下：</p><p>超平面：<script type="math/tex">H=\left\{ x\in R^{n} |a_{1} +a_{2}+...+a_{n} =b  \right\}</script></p><p>半空间：<script type="math/tex">H^{+} =\left\{ x\in R^{n} |a_{1} +a_{2}+...+a_{n} \geq b  \right\}</script></p><ol><li>凸集分离定理</li></ol><p>所谓两个凸集分离，直观地看是指两个凸集合没有交叉和重合的部分，因此可以用一张超平面将两者隔在两边，如下图所示：<br><img src="http://pic2.zhimg.com/v2-4116a3bda12faa5e2421ce27efb7fb71_b.png" alt="enter image description here"></p><ol><li>凸函数</li></ol><p>凸函数就是一个定义域在某个向量空间的凸子集C上的实值函数。<br><img src="http://pic3.zhimg.com/v2-f1b39d0aad4388433158679221f813d2_b.jpg" alt="enter image description here"></p><p>数学定义为：</p><p>对于函数$f(x)$，如果其定义域C是凸的，且对于$∀x,y∈C，0\leq \alpha \leq 1$， 有：</p><script type="math/tex; mode=display">f\left( \theta x+\left( 1-\theta  \right) y \right) \leq \theta f\left( x \right) +\left( 1-\theta  \right) f\left( y \right)</script><p>则f(x)是凸函数。<br>注：如果一个函数是凸函数，则其局部最优点就是它的全局最优点。这个性质在机器学习算法优化中有很重要的应用，因为机器学习模型最后就是在求某个函数的全局最优点，一旦证明该函数（机器学习里面叫“损失函数”）是凸函数，那相当于我们只用求它的局部最优点了。</p><h2 id="梯度下降算法"><a href="#梯度下降算法" class="headerlink" title="梯度下降算法"></a>梯度下降算法</h2><ol><li>引入</li></ol><p>前面讲数值计算的时候提到过，计算机在运用迭代法做数值计算（比如求解某个方程组的解）时，只要误差能够收敛，计算机最后经过一定次数的迭代后是可以给出一个跟真实解很接近的结果的。</p><p>这里进一步提出一个问题，如果我们得到的目标函数是非线性的情况下，按照哪个方向迭代求解误差的收敛速度会最快呢？</p><p>答案就是沿梯度方向。这就引入了我们的梯度下降法。</p><ol><li>梯度下降法</li></ol><p>在多元微分学中，梯度就是函数的导数方向。</p><p>梯度法是求解无约束多元函数极值最早的数值方法，很多机器学习的常用算法都是以它作为算法框架，进行改进而导出更为复杂的优化方法。</p><p>在求解目标函数$f\left( x \right)$ 的最小值时，为求得目标函数的一个凸函数，在最优化方法中被表示为：</p><script type="math/tex; mode=display">minf\left( x \right)</script><p>根据导数的定义，函数$f\left( x \right) $的导函数就是目标函数在x上的变化率。在多元的情况下，目标函数$f\left( x,y,z \right) $在某点的梯度$grad f\left( x,y,z \right) =\left( \frac{\partial f}{\partial x}  ,\frac{\partial f}{\partial y},\frac{\partial f}{\partial z}  \right)$ 是一个由各个分量的偏导数构成的向量，负梯度方向是$f\left( x,y,z \right) $减小最快的方向。<br><img src="http://pic1.zhimg.com/v2-e61c38f10e34badf5b2c1f3b9c9bcfa0_b.png" alt="enter image description here"><br>如上图所示，当需要求<script type="math/tex">f\left( x \right)</script> 的最小值时（机器学习中的<script type="math/tex">f\left( x \right)</script> 一般就是损失函数，而我们的目标就是希望损失函数最小化），我们就可以先任意选取一个函数的初始点<script type="math/tex">x_{0}</script> （三维情况就是<script type="math/tex">\left( x_{0} ,y_{0} ,z_{0}  \right)</script> ），让其沿着途中红色箭头（负梯度方向）走，依次到<script type="math/tex">x_{1} ，x_{2} ，...，x_{n}</script>（迭代n次）这样可最快达到极小值点。</p><p>梯度下降法过程如下：</p><p>输入：目标函数<script type="math/tex">f\left( x \right)</script> ，梯度函数<script type="math/tex">g\left( x \right) =grad f\left( x \right)</script>，计算精度<script type="math/tex">\varepsilon</script></p><p>输出：<script type="math/tex">f\left( x \right)</script> 的极小值点<script type="math/tex">x^{*}</script></p><p>1、任取取初始值<script type="math/tex">x_{0}</script> ，置k=0；<br>2、计算<script type="math/tex">f\left( x_{k}  \right)</script> ；<br>3、计算梯度<script type="math/tex">g_{k} =grad f\left( x_{k}  \right)</script> ，当<script type="math/tex">\left| \left| g_{k} \right|  \right| <\varepsilon</script> 时停止迭代，令<script type="math/tex">x^{*} =x_{k}</script>；<br>4、否则令<script type="math/tex">P_{k} =-g_{k}</script>，求<script type="math/tex">\lambda _{k}</script> 使<script type="math/tex">f\left( x_{k+1} \right) =minf\left( x_{k} +\lambda _{k} P_{k}  \right)</script>；<br>5、置<script type="math/tex">x_{k+1} =x_{k} +\lambda _{k} P_{k}</script> ，计算<script type="math/tex">f\left( x_{k+1}\right)</script>，当<script type="math/tex">\left| \left| f\left( x_{k+1}\right) -f\left( x_{k}\right)  \right| \right| <\varepsilon</script> 或<script type="math/tex">\left| \left| x_{k+1} -x_{k}  \right|  \right| <\varepsilon</script> 时，停止迭代，令<script type="math/tex">x^{*} =x_{k+1}</script> ；<br>6、否则，置$k=k+1$，转3。</p><h2 id="随机梯度下降算法"><a href="#随机梯度下降算法" class="headerlink" title="随机梯度下降算法"></a>随机梯度下降算法</h2><p>上面可以看到，在梯度下降法的迭代中，除了梯度值本身的影响外，还有每一次取的步长\lambda _{k} 也很关键：步长值取得越大，收敛速度就会越快，但是带来的可能后果就是容易越过函数的最优点，导致发散；步长取太小，算法的收敛速度又会明显降低。因此我们希望找到一种比较好的方法能够平衡步长。</p><p>随机梯度下降法并没有新的算法理论，仅仅是引进了随机样本抽取方式，并提供了一种动态步长取值策略。目的就是又要优化精度，又要满足收敛速度。</p><p>也就是说，上面的批量梯度下降法每次迭代时都会计算训练集中所有的数据，而随机梯度下降法每次迭代只是随机取了训练集中的一部分样本数据进行梯度计算，这样做最大的好处是可以避免有时候陷入局部极小值的情况（因为批量梯度下降法每次都使用全部数据，一旦到了某个局部极小值点可能就停止更新了；而随机梯度法由于每次都是随机取部分数据，所以就算局部极小值点，在下一步也还是可以跳出）</p><p>两者的关系可以这样理解：随机梯度下降方法以损失很小的一部分精确度和增加一定数量的迭代次数为代价，换取了总体的优化效率的提升。增加的迭代次数远远小于样本的数量。</p><h2 id="牛顿法"><a href="#牛顿法" class="headerlink" title="牛顿法"></a>牛顿法</h2><h3 id="牛顿法介绍"><a href="#牛顿法介绍" class="headerlink" title="牛顿法介绍"></a>牛顿法介绍</h3><p>牛顿法也是求解无约束最优化问题常用的方法，最大的优点是收敛速度快。</p><p>从本质上去看，牛顿法是二阶收敛，梯度下降是一阶收敛，所以牛顿法就更快。通俗地说，比如你想找一条最短的路径走到一个盆地的最底部，梯度下降法 每次只从你当前所处位置选一个坡度最大的方向走一步，牛顿法在选择方向时，不仅会考虑坡度是否够大，还会考虑你走了一步之后，坡度是否会变得更大。所以， 可以说牛顿法比梯度下降法看得更远一点，能更快地走到最底部。<br><img src="http://pic3.zhimg.com/v2-e22ea8c565434e945a17a80bec5630b6_b.png" alt="enter image description here"><br>或者从几何上说，牛顿法就是用一个二次曲面去拟合你当前所处位置的局部曲面，而梯度下降法是用一个平面去拟合当前的局部曲面，通常情况下，二次曲面的拟合会比平面更好，所以牛顿法选择的下降路径会更符合真实的最优下降路径。</p><h3 id="牛顿法的推导"><a href="#牛顿法的推导" class="headerlink" title="牛顿法的推导"></a>牛顿法的推导</h3><p>将目标函数$f\left( x \right)$  在$x_{k}$ 处进行二阶泰勒展开，可得：</p><script type="math/tex; mode=display">f\left( x \right) =f\left( x_{k}  \right) +f^{'} \left( x_{k}  \right) \left( x-x_{k}  \right) +\frac{1}{2} f^{''}\left( x_{k}  \right)  \left( x-x_{k}  \right) ^{2}</script><p>因为目标函数$f\left( x \right)$有极值的必要条件是在极值点处一阶导数为0，即：$f^{‘} \left( x \right) =0$</p><p>所以对上面的展开式两边同时求导（注意x才是变量，<script type="math/tex">x_{k}</script> 是常量<script type="math/tex">\Rightarrow f^{'} \left( x_{k}  \right) ,f^{''} \left( x_{k}  \right)</script> 都是常量），并令<script type="math/tex">f^{'} \left( x \right) =0</script>可得：</p><script type="math/tex; mode=display">f^{'} \left( x_{k} \right) +f^{''} \left( x_{k} \right) \left( x-x_{k} \right) =0</script><p>即：</p><script type="math/tex; mode=display">x=x_{k} -\frac{f^{'} \left( x_{k}  \right) }{f^{''} \left( x_{k}  \right) }</script><p>于是可以构造如下的迭代公式：</p><script type="math/tex; mode=display">x_{k+1} =x_{k} -\frac{f^{'} \left( x_{k}  \right) }{f^{''} \left( x_{k}  \right) }</script><p>这样，我们就可以利用该迭代式依次产生的序列<script type="math/tex">\left\{x_{1},x_{2},....,   x_{k}  \right\}</script>才逐渐逼近<script type="math/tex">f\left( x \right)</script> 的极小值点了。</p><p>牛顿法的迭代示意图如下：</p><p><img src="http://pic3.zhimg.com/v2-e908f9721cc82415fa7e70c763351f3a_b.jpg" alt="enter image description here"><br>上面讨论的是2维情况，高维情况的牛顿迭代公式是：</p><p>式中， $▽f$是$f\left( x \right)$ 的梯度，即：<br><img src="http://pic2.zhimg.com/v2-71df54a8e32e172596dcaa07e6b31899_b.png" alt="enter image description here"><br>H是Hessen矩阵，即：<br><img src="http://pic2.zhimg.com/v2-2891044fd02769c3148649e2a1a01fd5_b.png" alt="enter image description here"></p><h3 id="牛顿法的过程"><a href="#牛顿法的过程" class="headerlink" title="牛顿法的过程"></a>牛顿法的过程</h3><ol><li>给定初值$x_{0}$ 和精度阈值$\varepsilon$ ，并令$k=0$；</li><li>计算<script type="math/tex">x_{k}</script> 和<script type="math/tex">H_{k}</script> ；</li><li>若<script type="math/tex">\left| \left| g_{k}  \right|  \right| <\varepsilon</script> 则停止迭代；否则确定搜索方向：<script type="math/tex">d_{k} =-H_{k}^{-1} \cdot g_{k}</script> ；</li><li>计算新的迭代点：<script type="math/tex">x_{k+1} =x_{k} +d_{k}</script> ；</li><li>令$k=k+1$，转至2。<h2 id="阻尼牛顿法"><a href="#阻尼牛顿法" class="headerlink" title="阻尼牛顿法"></a>阻尼牛顿法</h2></li></ol><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>注意到，牛顿法的迭代公式中没有步长因子，是定步长迭代。对于非二次型目标函数，有时候会出现<script type="math/tex">f\left( x_{k+1}  \right) >f\left( x_{k}  \right)</script>的情况，这表明，原始牛顿法不能保证函数值稳定的下降。在严重的情况下甚至会造成序列发散而导致计算失败。</p><p>为消除这一弊病，人们又提出阻尼牛顿法。阻尼牛顿法每次迭代的方向仍然是<script type="math/tex">x_{k}</script> ，但每次迭代会沿此方向做一维搜索，寻求最优的步长因子<script type="math/tex">\lambda _{k}</script> ，即：</p><script type="math/tex; mode=display">\lambda _{k} = minf\left( x_{k}  +\lambda d_{k}  \right)</script><h3 id="算法过程"><a href="#算法过程" class="headerlink" title="算法过程"></a>算法过程</h3><ol><li>给定初值<script type="math/tex">x_{0}</script> 和精度阈值<script type="math/tex">\varepsilon</script> ，并令<script type="math/tex">k=0</script>；</li><li>计算<script type="math/tex">g_{k}</script>（<script type="math/tex">f\left( x \right) 在x_{k}</script> 处的梯度值）和<script type="math/tex">H_{k}</script> ；</li><li>若<script type="math/tex">\left| \left| g_{k}  \right|  \right| <\varepsilon</script> 则停止迭代；否则确定搜索方向：<script type="math/tex">d_{k} =-H_{k}^{-1} \cdot g_{k}</script> ；</li><li>利用<script type="math/tex">d_{k} =-H_{k}^{-1} \cdot g_{k}</script> 得到步长<script type="math/tex">\lambda _{k}</script> ，并令<script type="math/tex">x_{k+1} =x_{k} +\lambda _{k} d_{k}</script></li><li>令$k=k+1$，转至2。<h2 id="拟牛顿法"><a href="#拟牛顿法" class="headerlink" title="拟牛顿法"></a>拟牛顿法</h2></li></ol><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>由于牛顿法每一步都要求解目标函数的Hessen矩阵的逆矩阵，计算量比较大（求矩阵的逆运算量比较大），因此提出一种改进方法，即通过正定矩阵近似代替Hessen矩阵的逆矩阵，简化这一计算过程，改进后的方法称为拟牛顿法。</p><h3 id="拟牛顿法的推导"><a href="#拟牛顿法的推导" class="headerlink" title="拟牛顿法的推导"></a>拟牛顿法的推导</h3><p>先将目标函数在$x_{k+1}$ 处展开，得到：</p><script type="math/tex; mode=display">f\left( x \right) =f\left( x_{k+1}  \right) +f^{'} \left( x_{k+1}  \right) \left( x-x_{k+1}  \right) +\frac{1}{2} f^{''}\left( x_{k+1}  \right)  \left( x-x_{k+1}  \right) ^{2}</script><p>两边同时取梯度，得：</p><script type="math/tex; mode=display">f^{'}\left( x \right) = f^{'} \left( x_{k+1} \right) +f^{''} \left( x_{k+1} \right) \left( x-x_{k+1} \right)</script><p>取上式中的$x=x_{k}$ ，得：</p><script type="math/tex; mode=display">f^{'}\left( x_{k}  \right) = f^{'} \left( x_{k+1} \right) +f^{''} \left( x_{k+1} \right) \left( x-x_{k+1} \right)</script><p>即：</p><script type="math/tex; mode=display">g_{k+1} -g_{k} =H_{k+1} \cdot \left( x_{k+1} -x_{k}  \right)</script><p>可得：</p><script type="math/tex; mode=display">H_{k}^{-1} \cdot \left( g_{k+1} -g_{k}  \right) =x_{k+1} -x_{k}</script><p>上面这个式子称为“拟牛顿条件”，由它来对Hessen矩阵做约束。</p><h2 id="延伸-4"><a href="#延伸-4" class="headerlink" title="延伸"></a>延伸</h2><h3 id="书籍推荐-4"><a href="#书籍推荐-4" class="headerlink" title="书籍推荐"></a>书籍推荐</h3><p><a href="https://www.amazon.com/Convex-Optimization-Stephen-Boyd/dp/0521833787/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1500024918&amp;sr=1-1&amp;keywords=convex%20optimization" target="_blank" rel="noopener">Convex OptimizationMar by Stephen Boyd and Lieven Vandenberghe</a></p><h3 id="论文-3"><a href="#论文-3" class="headerlink" title="论文"></a>论文</h3><p>待补充<br>——EOF——</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;我们知道，机器学习的特点就是：以计算机为工具和平台，以数据为研究对象，以学习方法为中心；是概率论、线性代数、数值计算、信息论、最优化理论和计算机科学等多个领域的交叉学科。所以本文就先介绍一下机器学习涉及到的一些最常用的的数学知识。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="https://dxj1113.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="机器学习" scheme="https://dxj1113.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数学" scheme="https://dxj1113.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="深度学习" scheme="https://dxj1113.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="线性代数" scheme="https://dxj1113.github.io/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/"/>
    
      <category term="概率" scheme="https://dxj1113.github.io/tags/%E6%A6%82%E7%8E%87/"/>
    
      <category term="信息论" scheme="https://dxj1113.github.io/tags/%E4%BF%A1%E6%81%AF%E8%AE%BA/"/>
    
      <category term="数理统计" scheme="https://dxj1113.github.io/tags/%E6%95%B0%E7%90%86%E7%BB%9F%E8%AE%A1/"/>
    
      <category term="最优化" scheme="https://dxj1113.github.io/tags/%E6%9C%80%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>用hexo+github搭建个人博客</title>
    <link href="https://dxj1113.github.io/2017/07/12/%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://dxj1113.github.io/2017/07/12/用hexo-github搭建个人博客/</id>
    <published>2017-07-12T05:45:51.000Z</published>
    <updated>2018-01-08T11:33:23.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建hexo"><a href="#搭建hexo" class="headerlink" title="搭建hexo"></a>搭建hexo</h1><p>即使扒了很多大佬的搭建教程，还是踩了很多坑，所以打算记录下来自己的搭建过程。本文主要介绍win7下hexo3.3.7搭建，并发布到GitHub上。并且实现页面源文件与发布页面分离。</p><a id="more"></a><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p> 安装nodejs（必须）</p><ul><li>作用：用来生成静态页面的</li><li>方法：到<a href="http://nodejs.cn/" target="_blank" rel="noopener">node.js</a>官网下载并安装。我是用的是win10下v6.9.1版本。</li></ul><p> 安装git（必须）</p><ul><li>作用：把本地的hexo内容提交到github上去。</li><li>方法：进入git官方下载即可，速度较慢。</li></ul><p> 申请GitHub账号（必须）</p><ul><li>作用：是用来做博客的远程创库、域名、服务器之类的。</li><li>方法：到<a href="https://github.com/" target="_blank" rel="noopener">github</a>官网自行注册，如果想深入学习请看<a href="http://iissnan.com/progit/" target="_blank" rel="noopener">pro git</a>教程</li></ul><h1 id="GITHUB库创建"><a href="#GITHUB库创建" class="headerlink" title="GITHUB库创建"></a>GITHUB库创建</h1><ol><li><p>创建仓库，<a href="https://github.com/dxj1113/dxj1113.github.io/" target="_blank" rel="noopener">https://github.com/dxj1113/dxj1113.github.io/</a></p></li><li><p>创建两个分支：master 与 hexo；</p></li><li><p>设置hexo为默认分支（setting—-branch—-default branch）；</p></li><li><p>使用</p></li></ol><blockquote><p>  git clone git@github.com:dxj1113/dxj1113.github.io.git</p></blockquote><p>   拷贝仓库；</p><ol><li>在本地dxj1113.github.io.git文件夹下通过Git bash依次执行</li></ol><blockquote><p>npm install hexo-cli -g</p><p>hexo init blog</p><p>cd blog</p><p>npm install</p><p>npm install hexo-deployer-git</p></blockquote><p>   （此时当前分支应显示为hexo）;</p><ol><li>修改_config.yml中的deploy参数，设置如下</li></ol><blockquote><p>deploy:</p><p>  type: git</p><p>  repo: git@github.com:dxj1113/dxj1113.github.io.git</p><p>  branch: master</p></blockquote><ol><li>依次执行</li></ol><blockquote><p>  git add .、</p><p>  git commit -m “…”、</p><p>  git push origin hexo</p></blockquote><p>   提交网站相关的文件；</p><ol><li>执行</li></ol><blockquote><p>  hexo g -d</p></blockquote><p>   生成网站并部署到GitHub上。</p><h1 id="关于日常的改动流程"><a href="#关于日常的改动流程" class="headerlink" title="关于日常的改动流程"></a>关于日常的改动流程</h1><p>在本地对博客进行修改（添加新博文、修改样式等等）后，通过下面的流程进行管理。</p><ol><li>依次执行<blockquote><p>git add .</p></blockquote></li></ol><blockquote><p>git commit -m “…”</p><p>git push origin master:hexo</p></blockquote><p>指令将改动推送到GitHub（此时当前分支应为hexo）；</p><ol><li>然后才执行</li></ol><blockquote><p>  hexo g -d</p></blockquote><p>   发布网站到master分支上。虽然两个过程顺序调转一般不会有问题，不过逻辑上这样的顺序是绝对没问题的（例如突然死机要重装了，悲催….的情况，调转顺序就有问题了）。</p><h1 id="本地资料丢失后的流程"><a href="#本地资料丢失后的流程" class="headerlink" title="本地资料丢失后的流程"></a>本地资料丢失后的流程</h1><p>当重装电脑之后，或者想在其他电脑上修改博客，可以使用下列步骤：</p><ol><li>使用git clone git@github.com:dxj1113/dxj1113.github.io.git拷贝仓库（默认分支为hexo）；</li></ol><ol><li>在本地新拷贝的dxj1113.github.io文件夹下通过Git bash依次执行下列指令：</li></ol><blockquote><p>  npm install hexo</p><p>  npm install</p><p>  npm install hexo-deployer-git</p></blockquote><p>  （记得，不需要hexo init这条指令）<br>——EOF——</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建hexo&quot;&gt;&lt;a href=&quot;#搭建hexo&quot; class=&quot;headerlink&quot; title=&quot;搭建hexo&quot;&gt;&lt;/a&gt;搭建hexo&lt;/h1&gt;&lt;p&gt;即使扒了很多大佬的搭建教程，还是踩了很多坑，所以打算记录下来自己的搭建过程。本文主要介绍win7下hexo3.3.7搭建，并发布到GitHub上。并且实现页面源文件与发布页面分离。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="https://dxj1113.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Hexo" scheme="https://dxj1113.github.io/tags/Hexo/"/>
    
      <category term="Markdown" scheme="https://dxj1113.github.io/tags/Markdown/"/>
    
      <category term="nodejs" scheme="https://dxj1113.github.io/tags/nodejs/"/>
    
      <category term="git" scheme="https://dxj1113.github.io/tags/git/"/>
    
  </entry>
  
</feed>
